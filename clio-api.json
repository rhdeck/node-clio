{
  "openapi": "3.0.0",
  "info": {
    "title": "Clio Api v4 Documentation",
    "description": "# Developer Support and Feedback\nAs we are all aware, the importance of API-level development is paramount in the cloud-based software industry. Clio’s open API allows you to create valuable add-ons for your clients, and in turn, construct profitable revenue streams for your business.\n\nPlease direct any inquiries to the appropriate channel:\n\n* For technical inquiries: api@clio.com\n\n* For business and partnership inquiries: api.partnerships@clio.com\n\nA community driven [Clio Developers Stack Overflow Group](https://stackoverflow.com/questions/tagged/clio-api) also exists where you can connect and ask questions from other Clio API users.\n\nWe look forward to seeing your creations and creating successful relationships!\n# Getting Started\nThe Clio API gives you and your approved developers secure access to the data in your Clio account.  All Clio accounts, including free 7-day trial accounts, can be accessed using the documented Clio API. Learn how to make requests and receive data programmatically today (no need for lengthy signups or approvals).\n\nThe API is accessible in three geographic regions: the United States (app.clio.com), Canada (ca.app.clio.com) & Europe (eu.app.clio.com). These regions are distinct and do not share data. This document assumes the United States region is being used (app.clio.com), you should adapt the links and examples as necessary.\n\n* Start a 7-day free trial account using your development team’s email address & phone number at https://www.clio.com/getstarted\n* Login, create test data in the account, and then navigate to the [developer application page](https://app.clio.com/settings/developer_applications) to add a client application and generate an App Key & App Secret (details in the [OAuth 2](#section/Authorization-with-OAuth-2.0) section).\n* Use the App Key and App Secret to read & write data in your 7-day free trial account. Tools like [Postman](https://www.getpostman.com/) are an easy way to start testing.\n\nWhen you are ready to build an app and integrate with Clio, start by upgrading your 7-day free trial account to an account that will not expire. Request an upgrade to a developer account by connecting with our partnerships team by providing the email used in your 7-day free trial in the intake form at https://www.clio.com/become-api-partner/\n\n**Please note that only accounts on a Boutique or Elite pricing plan can create apps or access applications not listed in the Clio Marketplace.**\n# Authorization with OAuth 2.0\n## Create a Clio Application\n\n1. Login to your new Clio account at the [login portal](/session/new).\n2. Visit our [developer portal](/settings/developer_applications).\n3. Click the ``Add`` button to create a new application. Enter details and select the scope of your application here - these details will be shown to Clio users when they're asked to authorize your application.\n4. Make note of the ``key`` and the ``secret``, as these will be used to authorize your application with Clio.\n\n**This application holds the credentials you will use to [authorize your users](#section/Authorization-with-OAuth-2.0/Obtaining-Authorization), so ensure you protect your Clio account!**\n\n## Obtaining Authorization\n\nThese steps will guide you through the process of building the OAuth 2.0 workflow that your users will go through when authorizing your application. Each user will need to be authorized in this manner to connect their account in your application to their account in Clio.\n\nClio's API is only exposed through [OAuth 2.0](http://wiki.oauth.net/OAuth-2).\nIn order to access any of the methods exposed in the API, your application\nmust obtain authorization from the user.\n\n  ### Grant Type: Authorization Code\n\n  1. Your application needs to make a request asking for authorization by including the following parameters and values.\n\n      If you are building a desktop or mobile application, you may embed this request inside a WebView/WebBrowser control. As a desktop or mobile app does not have a web server to redirect to, your app may use ``https://app.clio.com/oauth/approval`` for your ``redirect_uri``. This will place the code or error in both the URL and page title, which should be easily parsed out. Intercepting the request will vary from platform to platform. Here are some references to get you started:\n\n        * .NET: WebBrowser event [webbrowser.navigated](http://msdn.microsoft.com/en-us/library/system.windows.forms.webbrowser.navigated.aspx>).\n        * OSX: [webView:resource:didReceiveResponse:fromDataSource](https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/WebKit/Protocols/WebResourceLoadDelegate_Protocol/Reference/Reference.html#//apple_ref/occ/instm/NSObject/webView:resource:didReceiveResponse:fromDataSource:) on the WebResourceLoadDelegate.\n        * iOS: [webView:shouldStartLoadWithRequest:navigationType](http://developer.apple.com/library/ios/DOCUMENTATION/UIKit/Reference/UIWebViewDelegate_Protocol/Reference/Reference.html#//apple_ref/occ/intfm/UIWebViewDelegate/webView:shouldStartLoadWithRequest:navigationType:) on the UIWebViewDelegate.\n        * Android: WebViewClient event [onPageStarted](http://developer.android.com/reference/android/webkit/WebViewClient.html#onPageStarted) (android.webkit.WebView, java.lang.String, android.graphics.Bitmap).\n\n      **Parameters**:\n\n      ```\n      response_type:    code\n      client_id:        application key from above\n      redirect_uri:     callback URL to redirect to after authorization\n      state (optional): Can be used by your application to maintain state between the request and the callback\n      ```\n\n      **Request**:\n\n      ```http\n      GET /oauth/authorize?response_type=code&client_id=fzaXZvrLWZX747wQQRNuASeVCBxaXpJaPMDi7F96&redirect_uri=http%3A%2F%2Fyourapp.com%2Fcallback&state=xyz HTTP/1.1\n      Host: app.clio.com\n      ```\n\n      **Grant Approved**:\n\n      If the user grants your application access, Clio will redirect their browser to the callback url with an authorization code and any supplied state parameters. This code is only valid for 10 minutes.\n\n      If you are building a desktop or mobile application, you will need to intercept the redirect to https://app.clio.com/oauth/approval inside your WebView/WebBrowser control and extract the code from the page's title. The title string will look like ``Success code=5IzZeWL2OmZUxGOGO4WE``.\n\n      **Approved Redirect**:\n\n      ```\n      http://yourapp.com/callback?code=s9jGYmL8E00ZyuJP3AEO&state=xyz\n      ```\n\n      **Grant Declined**:\n\n      If the user declines your application access, Clio will redirect their browser to the callback url with an ``error`` parameter value of \"access_denied\".\n\n      If you are building a desktop or mobile application, you will need to intercept the redirect to ``https://app.clio.com/oauth/approval`` inside your WebView/WebBrowser control and extract the error from the page's title. The title string will look like ``Failure error=access_denied``.\n\n      **Declined Redirect**:\n\n      ```\n      http://yourapp.com/callback?error=access_denied&state=xyz\n      ```\n  2. Your application may now make a POST request for an access token to Clio's token endpoint with the provided token. For Clio to verify the grant request, you must include your application's key and secret as well as the ``redirect_uri`` from the code request. Parameters:\n\n      **Parameters**:\n\n        ```\n        client_id:     application key from above\n        client_secret: application secret from above\n        grant_type:    \"authorization_code\"\n        code:          Authorization code from the redirect above\n        redirect_uri:  Redirect URI used in the authorization request above\n        ```\n\n      **Request**:\n\n      ```http\n        POST /oauth/token HTTP/1.1\n        Host: app.clio.com\n        Content-Type: application/x-www-form-urlencoded\n\n        client_id=fzaXZvrLWZX747wQQRNuASeVCBxaXpJaPMDi7F96&client_secret=xVp5wAX05g1oDjV5astg2KZIZ85NX31FKTPV876v&grant_type=authorization_code&code=s9jGYmL8E00ZyuJP3AEO&redirect_uri=http%3A%2F%2Fyourapp.com%2Fcallback\n      ```\n\n      **Response**:\n\n      ```http\n        HTTP/1.1 200 OK\n        Content-Type: application/json\n\n        {\n          \"token_type\":\"bearer\",\n          \"access_token\":\"WjR8HLdo847Z8kdfUtewJpCvkRX4JYLCIF2dUUul\",\n          \"expires_in\":604800,\n          \"refresh_token\":\"5A0Ddf2RSt75v1VQcCoTB9rImRydF9yXA0gGvx7e\"\n        }\n      ```\n  3. Your application should save these tokens for future requests to the API. You should include an Authorization header with a value of ``Bearer access_token``.\n\n      See [Oauth Refresh Tokens](#section/Authorization-with-OAuth-2.0/Oauth-Refresh-Tokens) for more information on refresh tokens.\n\n      **Example Authorized Request**:\n\n      ```http\n      GET /api/v4/users/who_am_i HTTP/1.1\n      Host: app.clio.com\n      Authorization: Bearer WjR8HLdo847Z8kdfUtewJpCvkRX4JYLCIF2dUUul\n      ```\n\n      **Example Ruby code for obtaining authorization with the authorization code grant type**:\n\n      ```ruby\n      require 'rubygems'\n      require 'oauth2'\n      client_key = 'Application key from https://app.clio.com/'\n      client_secret = 'Application secret from https://app.clio.com/'\n      client = OAuth2::Client.new(client_key, client_secret, :site => 'https://app.clio.com/')\n\n      client.auth_code.authorize_url(:redirect_uri => 'http://yourapp.com/callback')\n      # Redirect user or paste in the browser\n      # => \"https://app.clio.com/oauth/authorize?response_type=code&client_id=client_key&redirect_uri=http://yourapp.com/callback\"\n\n      # redirects to http://yourapp.com/callback?state=&code=secretcode\n      # Use the code param below to get a token\n\n      code = 'secretcode'\n      token = client.auth_code.get_token(code, :redirect_uri => 'http://yourapp.com/callback')\n      saved_token = token.token\n      # => \"WjR8HLdo847Z8kdfUtewJpCvkRX4JYLCIF2dUUul\"\n      saved_refresh_token = token.refresh_token\n      # => \"5A0Ddf2RSt75v1VQcCoTB9rImRydF9yXA0gGvx7e\"\n      # Save these values for future requests\n      ```\n\n      **Example Ruby request**:\n\n      ```ruby\n      require 'rubygems'\n      require 'oauth2'\n\n      # Token saved from above\n      saved_token = \"WjR8HLdo847Z8kdfUtewJpCvkRX4JYLCIF2dUUul\"\n\n      client_key = 'Application key from https://app.clio.com/'\n      client_secret = 'Application secret from https://app.clio.com/'\n      client = OAuth2::Client.new(client_key, client_secret, :site => 'https://app.clio.com/')\n\n      token = OAuth2::AccessToken.new(client, saved_token)\n\n      response = token.get('/api/v4/users/who_am_i', params: {fields: 'id,name,last_name,first_name,email,enabled,account_owner'})\n      response.class.name\n      # => OAuth2::Response\n      response.body\n      # => \"{\\\"data\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Demo User\\\",\\\"first_name\\\":\\\"Demo\\\",\\\"last_name\\\":\\\"User\\\",\\\"email\\\":\\\"demo@clio.com\\\",\\\"enabled\\\":true,\\\"account_owner\\\":true}}\"\n      ```\n## Deauthorization\n\nDeauthorization can happen in one of two ways: the user has revoked access to your application, or your application has requested to be deauthorized. When a user revokes access to your application, ALL access tokens will be revoked. If your application requests to be deauthorized, only the supplied access token will be revoked.\n\nIn both cases Clio will make a POST request to your application's deauthorization callback URL (if present). The callback will include a JSON object containing the ``client_id``, ``user_id`` and the ``access_token`` (set to \"all\" if user revoked).\n\n**Deauthorization Callback Request**:\n\n```http\nPOST /deauthorization_callback HTTP/1.1\nHost: yourapp.com\nContent-Type: application/json\n\n{\n  \"client_id\": \"fzaXZvrLWZX747wQQRNuASeVCBxaXpJaPMDi7F96\",\n  \"user_id\": 2332,\n  \"access_token\": \"all\"\n}\n```\n\nFor your application to deauthorize itself, you need to make an authorized POST request to ``/oauth/deauthorize``. Clio's response should be a simple 200 status code.\n\n**Parameters**:\n\n```\ntoken:         token to be revoked\n```\n\n**Request**:\n\n```http\nPOST /oauth/deauthorize HTTP/1.1\nHost: app.clio.com\nAuthorization: Bearer WjR8HLdo847Z8kdfUtewJpCvkRX4JYLCIF2dUUul\n\ntoken=WjR8HLdo847Z8kdfUtewJpCvkRX4JYLCIF2dUUul\n```\n\n**Response**:\n\n```http\nHTTP/1.1 200 OK\n```\n\n## Oauth Refresh Tokens\n\nFor background on refresh tokens, see [Understanding Refresh Tokens](https://auth0.com/learn/refresh-tokens/).\n\nWhen the user grants access to your application, you receive both an access token\nand a refresh token. The access token has a limited lifespan and will eventually\nexpire. Once it expires, you can use your refresh token to refresh your access.\n\n**Checking Expiry**:\n\nYour access token has a limited lifespan. When you initially receive your\naccess token, you also get back the token's lifespan, in seconds. Most\nOauth libraries support checking to see if your token has expired.\n\n**Example Ruby code**:\n\n```ruby\n# Token obtained above\ntoken.expired?\n# => false\ntoken.expires_in\n# => 604770\n```\n\n**Refreshing Access**:\n\nIf your access token has expired, you can refresh your access. You use\nyour refresh token with the ```grant_type: \"refresh_token\"```.\n\nNote: The ```refresh_token``` parameter will only be returned if the refresh\ntoken changes from the original. Refresh tokens are typically long-lasting\ncredentials.\n\n**Parameters**:\n\n  ```\n  client_id:     application key from above\n  client_secret: application secret from above\n  grant_type:    \"refresh_token\"\n  refresh_token: Refresh token code from above\n  ```\n\n**Request**:\n\n```http\n  POST /oauth/token HTTP/1.1\n  Host: app.clio.com\n  Content-Type: application/x-www-form-urlencoded\n\n  client_id=fzaXZvrLWZX747wQQRNuASeVCBxaXpJaPMDi7F96&client_secret=xVp5wAX05g1oDjV5astg2KZIZ85NX31FKTPV876v&grant_type=refresh_token&refresh_token=5A0Ddf2RSt75v1VQcCoTB9rImRydF9yXA0gGvx7e\n```\n\n**Response**:\n\n```http\n  HTTP/1.1 200 OK\n  Content-Type: application/json\n\n  {\n    \"token_type\":\"bearer\",\n    \"access_token\":\"rFlGXgfqh1e8yBIGGh4jSMaJAuOZb4Bo4VKEG6wK\",\n    \"expires_in\":604800,\n    \"refresh_token\":\"5A0Ddf2RSt75v1VQcCoTB9rImRydF9yXA0gGvx7e\"\n  }\n```\n\n**Example Ruby request**:\n\n```ruby\nrequire 'rubygems'\nrequire 'oauth2'\n# Obtain token as described above.\nif token.expired?\n  token = token.refresh! # Uses token.refresh_token value\n  # Save the new access token for future requests.\nend\n```\n\n**Secure Your Refresh Token**:\n\nUnlike the access token, your refresh token does not expire.\nYou must ensure these tokens are securely stored and encrypted.\n\n## Oauth Scopes\n\nFor background on Oauth scopes, see\n[Oauth.com's article](https://www.oauth.com/oauth2-servers/scope/).\n\nIf you are writing an application which deals with tasks, you\nprobably do not need access to bills or matters. Oauth scopes\nare a way to limit your access to the user’s account.\n\nWhen a user is prompted to authorize your application, they are\npresented with a list of Oauth scopes you are requesting, along\nwith information on each scope. If they accept this list of\nscopes, they grant access. From then on, your application is\nrestricted to only those scopes, for that user.\n\nYou can select your list of scopes when you create your\nclient application. For example, perhaps you need read access to\ncontacts, read/write access to matters, and read access to users.\nRemember, the users will see each scope you are requesting,\nso you must choose the smallest set necessary for your application\nto function properly. The full list of available scopes is visible\nwhen you [create a new client application](#section/Authorization-with-OAuth-2.0/Create-a-Clio-Application).\n\nYou may change your set of scopes at any time, but once a\nuser has authorized your application, their scopes are fixed.\nIf you subsequently need additional access, users will have to\nreauthorize your application.\n\nRead access allows you to read information for that endpoint. For\nexample, read access to matters allows you to get a list of\nmatters, or get detailed information about a specific matter. It\nalso allows you access to related endpoints. Our documentation\nshows that matters, relationships, notes, practice areas, and log\nentries are all related. Read access to matters allows you read\naccess to any of these related endpoints.\n\nWrite access allows you to create, update, or destroy information\nfor that endpoint. For example, write access to matters allows you\nto create a new matter, update an existing matter, or destroy a\nmatter. Similarly, you get write access to all related endpoints.\n\nIf you try to access an endpoint without the necessary scopes,\nyou receive error code 403 - Forbidden.\n\n**Response**:\n\n```http\nHTTP/1.1 403 Forbidden\n\n{\n  \"error\":{\n    \"type\":\"ForbiddenError\",\n    \"message\":\"User is forbidden from taking that action\"\n  }\n}\n```\n\n\nBe careful with [nested fields](#section/Fields)! If you have read\naccess to matters and read access to contacts, you can request\ninformation about a matter and its associated client, as follows:\n``'id,display_number,client{id,name}'``\n\n**Request**:\n\n```http\nGET /api/v4/matters/1?fields=id,display_number,client{id,name} HTTP/1.1\nHost: yourapp.com\nContent-Type: application/json\n\n{\n  \"data\": {\n    \"id\":1,\n    \"display_number\":\"00001-Marquardt-Walter\",\n    \"client\":{\n      \"id\":1,\n      \"name\":\"Marquardt-Walter\"\n    }\n  }\n}\n```\n\nIf on the other hand, you have read access to matters but do not\nhave read access to contacts, we will only display the\nclient's ``id``; all other information about the contact will be\nredacted.\n\n**Request**:\n\n```http\nGET /api/v4/matters/1?fields=id,display_number,client{id,name} HTTP/1.1\nHost: yourapp.com\nContent-Type: application/json\n\n{\n  \"data\": {\n    \"id\":1,\n    \"display_number\":\"00001-Marquardt-Walter\",\n    \"client\":{\n      \"id\":1,\n      \"redacted\":true\n    }\n  }\n}\n```\n\nHere is some Ruby code demonstrating these concepts.\n\n```ruby\nrequire 'rubygems'\nrequire 'oauth2'\n\nclient_key = 'SUNLAvcBLRpm58ifRJONr9pNyTznoUcvLCwA451y' # Your own value here\nclient_secret = '0TkElPVV7ZBBPoY9jC3aZ6ucfxbORRcSqLewLnMG' # And here\nclient = OAuth2::Client.new(client_key, client_secret, :site => 'https://app.clio.com/')\ntoken = OAuth2::AccessToken.new(client, saved_token) # saved_token is stored in your database\n\n# Now, let's assume you have read access to users, matters, and contacts.\n# This works, because you have read access to users.\nputs token.get('/api/v4/users/who_am_i').body\n# => {\"data\":{\"etag\":\"\\\"93027c76885d9b2da02cf90713aedc78\\\"\",\"id\":1,\"name\":\"Demo User\"}}\n\n# This works, because you have read access to matters.\nputs token.get('/api/v4/matters').body\n# => {\"data\":[{\"id\":1,\"etag\":\"\\\"beea69c32b8f86d3afb2ef8808a9ba00\\\"\",\"display_number\":\"00001-Luettgen, Marks and Wilkinson\"},{\"id\":2,\"etag\":\"\\\"fb6d3a8bc51f7c34ed198222201f2eae\\\"\",\"display_number\":\"00002-Cummings and Sons\"},{\"id\":3,\"etag\":\"\\\"7459639645818d811a6b77a76d26934d\\\"\",\"display_number\":\"00003-Rogahn, Fritsch and Homenick\"}],\"meta\":{\"paging\":{},\"records\":3}}\n\n# This works, because you have read access to matters and to contacts.\nputs token.get('/api/v4/matters/1', params: {fields: 'id,etag,display_number,description,client{id,first_name,last_name,name}'}).body\n# => {\"data\":{\"id\":1,\"etag\":\"\\\"beea69c32b8f86d3afb2ef8808a9ba00\\\"\",\"display_number\":\"00001-Luettgen, Marks and Wilkinson\",\"description\":\"In eveniet exercitationem et.\",\"client\":{\"id\":1,\"name\":\"Luettgen, Marks and Wilkinson\"}}}\n\n\n# Now, let's assume you have read access to matters, but no access to contacts or users.\nputs token.get('/api/v4/contacts').body\n# => {\"error\":{\"type\":\"ForbiddenError\",\"message\":\"User is forbidden from taking that action\"}}\n# The response code is 403 - Forbidden\n\n# This doesn't work either; you don't have read access to users.\nputs token.get('/api/v4/users/who_am_i').body\n# => {\"error\":{\"type\":\"ForbiddenError\",\"message\":\"User is forbidden from taking that action\"}}\n\n# Let's try to get information about contacts, via matters:\nputs token.get('/api/v4/matters/1', params: {fields: 'id,etag,display_number,description,client{id,first_name,last_name,name}'}).body\n# => {\"data\":{\"id\":1,\"etag\":\"\\\"beea69c32b8f86d3afb2ef8808a9ba00\\\"\",\"display_number\":\"00001-Luettgen, Marks and Wilkinson\",\"description\":\"In eveniet exercitationem et.\",\"client\":{\"id\":1,\"redacted\":true}}}\n# Note that all information about the client other than the id is redacted.\n```\n# Permissions\nSome objects in Clio are protected via permissions. This could be due to insufficient\nOauth scope permissions, or from the role permissions inside Clio.\nIf associated data is protected in this fashion, we will remove requested fields, and add a\n`redacted` boolean field onto the object.\nThis field may be requested just like any others, but it will automatically be added\nif we have redacted the object.\n\n\nFor example, if the user does not have the `Billing` permission, or if the user has not granted\nthe Clio application the ability to read bills, you may have a response similar to:\n```http\nGET /api/v4/activities/15?fields=id,bills{id,number} HTTP/1.1\nHost: yourapp.com\nContent-Type: application/json\n\n{\n  \"data\": {\n    \"id\": 15, \"bill\": { \"id\": 527, \"redacted\": true}\n  }\n}\n```\n\n### Matters\n\nIf the protected data is a matter, the response will behave as stated above, with the exception that the\nmatter's `display_number` will be included in the response if requested. For example, consider a task with\nan associated matter that the user does not have permission to access:\n```http\nGET /api/v4/tasks/16?fields=id,matter{id,display_number,client} HTTP/1.1\nHost: yourapp.com\nContent-Type: application/json\n\n{\n  \"data\": {\n    \"id\": 16, \"matter\": { \"id\": 1, \"display_number\": \"00001-Luettgen, Marks and Wilkinson\", \"redacted\": true}\n  }\n}\n```\n\n### Activities\n\nIn version `4.0.5`, if the activity is of type `TimeEntry` and the user has a rate visibility of\n`limited` or `none`, the response will show everything that is requested, with the exception that\nthe `price` and `total` may be redacted:\n```http\nGET /api/v4/activities?fields=id,quantity,price,total HTTP/1.1\nHost: yourapp.com\nContent-Type: application/json\n\n{\n  \"data\": {\n    \"id\": 16, \"quantity\": 2197, \"redacted\": true\n  }\n}\n```\nIf the user’s rate visibility is set to `limited`, both the `price` and `total` of the time entries that other users have created are removed from the response and the attribute `redacted` is set as `true` to indicate the hidden information.\nIf the user’s rate visibility is set to `none`, both the `price` and `total` of all time entries are removed from the response and the attribute `redacted` is set as `true` to indicate the hidden information.\n# Fields\nBy default only the fields `id` and `etag` are returned as part of the response. Each request may specify which fields it wants to receive as a comma separated list on the `fields` parameter. For example: `fields=id,etag`. Nested resources will return the resource\\'s default fields. To change this behavior, other fields from nested resources can be requested by placing a comma separated list inside `{`, `}`. For example: `fields=id,etag,nested_resource{id,name}`. If a field is invalid, a `400 Bad Request` will be returned.\n# Rate Limiting\nRequests to API v4 are rate-limited by OAuth token. This means that after a certain number of requests in a given time period, the API will return a `429 Too Many Requests` response. Regular responses will include two headers: `X-RateLimit-Limit` (the number of allowed requests in a time period) and `X-RateLimit-Remaining` (the number of remaining requests in the time period)\n\nIf the limit is exceeded a `Retry-After` header will be supplied with the number of seconds to wait until the request should be tried again.\n\nCertain endpoints have custom rate limits. See specific endpoint documentation for further information.\n# Paging\nIndex actions are limited to 200 resources unless otherwise specified. A `limit` parameter may be supplied to lower this limit. An `offset` parameter may be supplied to skip records. Metadata about paging is returned in the index actions:\n          {\n          data: { ... },\n          meta: { paging: { previous: '', next: '' } },\n          }\n\n\nThe `previous` and `next` fields will be URLs for the previous and next page of data, respectively. If there is no previous or next page, the field will be missing.\n\nThere is a limit to the number of resources that can be requested through pagination so if you are expecting a large data set, we recommend using [Bulk Actions](#tag/Bulk-Actions). If you attempt to retrieve a page over the limit, you will receive a 422 ArgumentError.\n# ETags\nFor single resources we return `ETag` and `Last-Modified` HTTP headers. `etag` is also a field on most resources that can be returned via index actions. If you supply an `If-None-Match` or `If-Modified-Since` header with the values of the resource's ETag or Last-Modified field, respectively, the API will return a `304 Not Modified` response.\n## Optimistic Concurrency Control\nFor `PATCH` requests, if you supply an `If-Match` header with the resource's ETag value, the request will support optimistic concurrency control. That is, if the ETag value passed in the header matches the value of the resource's ETag, it means that you have the latest version\nof the resource and are safe to update without worrying about overwriting someone's changes (Lost Update Problem).\n\nIf it is not the correct value, it means that the resource has changed since you last retrieved it and there might be changes you would overwrite, so it will return a\n`412 Precondition Failed`. To remedy this, retrieve the resource that you're trying to update again and see if there are new changes and decide what you want to do with them. Note the ETag value and pass that back into the header and perform the update again. It should return a `200 OK` now.\n# Minor Versions\nAPI v4 may have multiple minor versions. Versions are of the form '4.X.Y'. Optionally a `X-API-VERSION` header may be supplied to keep specific behavior. If this header is omitted, it will default to the latest version. An `X-API-VERSION` will be included in all successful responses with the version that is being used. If the header is present but invalid, it will return a `410 Gone` response. If the header is present and valid, but it is no longer supported, it will return a `410 Gone` response.\n- 4.0.4\n\n  Update `quantity` field to return values in seconds rather than hours for Activities\n\n  *This is the current version*\n\n# Model Events (Beta)\nCertain endpoints support model events. (See Example below)\n\nThis endpoint can be used to get a list of objects that have changed. This feature is useful for integrations that need to sync a full data set from Clio.\nTo set up Model Events for a particular endpoint:\n\n  1) Make a [List Bulk Action](#tag/Bulk-Actions) request with the `X-Events` header set to `true`. The response will contain a header named `X-Events-Page-Token` that will be used to fetch events for a model.\n\n  2) Make a request to the `/:model/events` endpoint for the model with a query parameter `page_token` equal to the `X-Events-Page-Token` from the previous request. You may also provide a `fields` parameter to gather additional data, however the `id` and `events` will always be included.\n\nThe response will contain a new `X-Events-Page-Token` value that you can use for the next request. Records that have been deleted, or had permissions revoked to the developer application's user will appear in the listing, but all information outside of the `id` and `events` fields will be redacted. If you receive a response which contains fewer than the maximum of 200 changed objects, your sync is all caught up to the present.\n\nExample:\n### To set up the event stream for matters:\n```json\n    **Request**:\n      X-Bulk: true\n      X-Events: true\n      GET /api/v4/matters.json?fields=id,display_name\n\n    **Response**:\n      X-Bulk-Action-id: 123\n      X-Events-Page-Token: c17d6abc-0df9-4de4-b68d-2e9df23ef419\n      202 Accepted\n```\n\n### To fetch the changed events with the `page_token`:\n```json\n    **Request**:\n      GET /api/v4/matters/events?fields=id,display_number&page_token=c17d6abc-0df9-4de4-b68d-2e9df23ef419\n\n    **Response**:\n      X-Events-Page-Token: 9e1df0c8-b661-461e-9c64-c2c3e829e600\n      {\n        data: [\n          {\n            record: {id: 1, display_number: \"foo\"},\n            events: [\n              { event_type: \"created\", time: \"2018-04-26T20:09:00Z\" },\n              { event_type: \"updated\", time: \"2018-04-27T02:52:00Z\" }\n            ]\n          },\n          {\n            record: {id: 2, display_number: \"bar\"},\n            events: [\n              { event_type: \"granted\", time: \"2018-04-23T17:37:00Z\" }\n           ]\n          },\n          {\n            record: {id: 3, redacted: true},\n            events: [\n              { event_type: \"revoked\", time: \"2018-04-26T11:41:00Z\" }\n            ]\n          },\n          {\n            record: {id: 4, redacted: true},\n            events: [\n              { event_type: \"updated\", time: \"2018-04-21T10:01:00Z\" },\n              { event_type: \"deleted\", time: \"2018-04-22T10:02:00Z\" }\n            ]\n          }\n        ]\n      }\n```\n## Token Expiry\n\nIf the page token expires, the endpoint will return a `410 Gone` and the process needs to be started again. However note that the `fields` of the bulk action are not relevant to the event stream creation, so a Bulk listing with `fields=id` and the proper headers will be enough to setup the events and tokens again.\n\nTokens can be reused, but will expire under one of the conditions below:\n\n  1) 7 days has passed since token creation.\n\n  2) The developer application user's permissions have significantly changed. This could be in the form role changes, or gaining/losing permission groups.\n\n  3) The OAuth scopes for the developer application have changed.\n",
    "version": "v4",
    "x-logo": {
      "url": "https://www.clio.com/wp-content/uploads/2015/05/Container-5-Logo.png"
    },
    "contact": {
      "email": "api@clio.com"
    }
  },
  "paths": {
    "/activities/events.json": {
      "get": {
        "tags": [
          "Activities"
        ],
        "operationId": "Activity#events",
        "summary": "Return the data for Activities events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Activities events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Activity records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/activities.json": {
      "get": {
        "tags": [
          "Activities"
        ],
        "operationId": "Activity#index",
        "summary": "Return the data for all Activities",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Activities",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activity_description_id",
            "description": "The unique identifier for a single ActivityDescription. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "calendar_entry_id",
            "description": "The unique identifier for a single CalendarEntry. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "communication_id",
            "description": "The unique identifier for a single Communication. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contact_note_id",
            "description": "The unique identifier for a single Note. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Activity records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_date",
            "description": "Filter Activity records to those whose `date` is on or before the date provided (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "expense_category_id",
            "description": "The unique identifier for a single ExpenseCategory. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flat_rate",
            "description": "Filter Activity TimeEntry records to those that have a flat rate, or not.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Activity records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Activity records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_note_id",
            "description": "The unique identifier for a single Note. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Activity records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "display_number(asc)",
                "display_number(desc)",
                "user.name(asc)",
                "user.name(desc)",
                "price(asc)",
                "price(desc)",
                "total(asc)",
                "total(desc)",
                "date(asc)",
                "date(desc)",
                "note(asc)",
                "note(desc)",
                "updated_at(asc)",
                "updated_at(desc)",
                "vendor.name(asc)",
                "vendor.name(desc)",
                "expense_category.name(asc)",
                "expense_category.name(desc)",
                "non_billable(asc)",
                "non_billable(desc)",
                "non_billable_total(asc)",
                "non_billable_total(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `note` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "description": "Filter Activity records to those whose `date` is on or after the date provided (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "description": "Filter Activity records to those that are draft, billed, unbilled or non-billable.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "billed",
                "draft",
                "unbilled",
                "non_billable"
              ]
            }
          },
          {
            "name": "type",
            "description": "Filter Activity records to those of a specific type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "TimeEntry",
                "ExpenseEntry",
                "HardCostEntry",
                "SoftCostEntry"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Activity records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activities"
        ],
        "operationId": "Activity#create",
        "summary": "Create a new Activity",
        "description": "Outlines the parameters and data fields used when creating a new Activity",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill. Only valid for non-billed TimeEntries."
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://support.clio.com/hc/en-us/articles/203440330-Managing-Expense-Entries)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://support.clio.com/hc/en-us/articles/360019649094-Hard-and-Soft-Costs-Expenses)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://support.clio.com/hc/en-us/articles/203142764-Example-of-Clio-s-Rates-Hierarchy)\n\n[Support Link for Billing Rate Visibility](https://support.clio.com/hc/en-us/articles/203143234-Permissions-for-Billing-Rates)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "type": {
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "type": "string",
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    },
                    "required": [
                      "type",
                      "date"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill. Only valid for non-billed TimeEntries."
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://support.clio.com/hc/en-us/articles/203440330-Managing-Expense-Entries)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://support.clio.com/hc/en-us/articles/360019649094-Hard-and-Soft-Costs-Expenses)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://support.clio.com/hc/en-us/articles/203142764-Example-of-Clio-s-Rates-Hierarchy)\n\n[Support Link for Billing Rate Visibility](https://support.clio.com/hc/en-us/articles/203143234-Permissions-for-Billing-Rates)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "type": {
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "type": "string",
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    },
                    "required": [
                      "type",
                      "date"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill. Only valid for non-billed TimeEntries."
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://support.clio.com/hc/en-us/articles/203440330-Managing-Expense-Entries)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://support.clio.com/hc/en-us/articles/360019649094-Hard-and-Soft-Costs-Expenses)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://support.clio.com/hc/en-us/articles/203142764-Example-of-Clio-s-Rates-Hierarchy)\n\n[Support Link for Billing Rate Visibility](https://support.clio.com/hc/en-us/articles/203143234-Permissions-for-Billing-Rates)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "type": {
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "type": "string",
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    },
                    "required": [
                      "type",
                      "date"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/activities/{id}.json": {
      "get": {
        "tags": [
          "Activities"
        ],
        "operationId": "Activity#show",
        "summary": "Return the data for a single Activity",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Activity",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Activity.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Activities"
        ],
        "operationId": "Activity#update",
        "summary": "Update a single Activity",
        "description": "Outlines the parameters and data fields used when updating a single Activity",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Activity.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill. Only valid for non-billed TimeEntries."
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://support.clio.com/hc/en-us/articles/203440330-Managing-Expense-Entries)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://support.clio.com/hc/en-us/articles/360019649094-Hard-and-Soft-Costs-Expenses)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://support.clio.com/hc/en-us/articles/203142764-Example-of-Clio-s-Rates-Hierarchy)\n\n[Support Link for Billing Rate Visibility](https://support.clio.com/hc/en-us/articles/203143234-Permissions-for-Billing-Rates)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "type": {
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "type": "string",
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill. Only valid for non-billed TimeEntries."
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://support.clio.com/hc/en-us/articles/203440330-Managing-Expense-Entries)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://support.clio.com/hc/en-us/articles/360019649094-Hard-and-Soft-Costs-Expenses)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://support.clio.com/hc/en-us/articles/203142764-Example-of-Clio-s-Rates-Hierarchy)\n\n[Support Link for Billing Rate Visibility](https://support.clio.com/hc/en-us/articles/203143234-Permissions-for-Billing-Rates)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "type": {
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "type": "string",
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill. Only valid for non-billed TimeEntries."
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://support.clio.com/hc/en-us/articles/203440330-Managing-Expense-Entries)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://support.clio.com/hc/en-us/articles/360019649094-Hard-and-Soft-Costs-Expenses)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://support.clio.com/hc/en-us/articles/203142764-Example-of-Clio-s-Rates-Hierarchy)\n\n[Support Link for Billing Rate Visibility](https://support.clio.com/hc/en-us/articles/203143234-Permissions-for-Billing-Rates)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "type": {
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "type": "string",
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Activities"
        ],
        "operationId": "Activity#destroy",
        "summary": "Delete a single Activity",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Activity",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Activity.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/activity_rates.json": {
      "get": {
        "tags": [
          "Activity Rates"
        ],
        "operationId": "ActivityRate#index",
        "summary": "Return the data for all ActivityRates",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ActivityRates",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "co_counsel_contact_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the ActivityRate records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contact_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the ActivityRate records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of ActivityRate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRateList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activity Rates"
        ],
        "operationId": "ActivityRate#create",
        "summary": "Create a new ActivityRate",
        "description": "Outlines the parameters and data fields used when creating a new ActivityRate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRateShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/ActivityRate_createBody"
        }
      }
    },
    "/activity_rates/{id}.json": {
      "get": {
        "tags": [
          "Activity Rates"
        ],
        "operationId": "ActivityRate#show",
        "summary": "Return the data for a single ActivityRate",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ActivityRate",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ActivityRate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRateShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Activity Rates"
        ],
        "operationId": "ActivityRate#update",
        "summary": "Update a single ActivityRate",
        "description": "Outlines the parameters and data fields used when updating a single ActivityRate",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ActivityRate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRateShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/ActivityRate_createBody"
        }
      },
      "delete": {
        "tags": [
          "Activity Rates"
        ],
        "operationId": "ActivityRate#destroy",
        "summary": "Delete a single ActivityRate",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single ActivityRate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ActivityRate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/activity_descriptions/events.json": {
      "get": {
        "tags": [
          "Activity Descriptions"
        ],
        "operationId": "ActivityDescription#events",
        "summary": "Return the data for ActivityDescriptions events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for ActivityDescriptions events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of ActivityDescription records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDescriptionListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/activity_descriptions.json": {
      "get": {
        "tags": [
          "Activity Descriptions"
        ],
        "operationId": "ActivityDescription#index",
        "summary": "Return the data for all ActivityDescriptions",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ActivityDescriptions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter ActivityDescription records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flat_rate",
            "description": "Filter ActivityDescription records to those that have a flat rate, or not.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter ActivityDescription records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of ActivityDescription records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rate_for[matter_id]",
            "description": "Matter id for rate calculation.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "rate_for[user_id]",
            "description": "User id for rate calculation. If not provided, the user associated to the API request is assumed.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "description": "Filter ActivityDescription records to those of a specific type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "utbms",
                "clio"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter ActivityDescription records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "description": "The unique identifier for a single User. The keyword `null` is not valid for this field. The list will be filtered to include only the ActivityDescription records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDescriptionList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activity Descriptions"
        ],
        "operationId": "ActivityDescription#create",
        "summary": "Create a new ActivityDescription",
        "description": "Outlines the parameters and data fields used when creating a new ActivityDescription",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDescriptionShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "type": "string",
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "type": "string",
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "type": "string",
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/activity_descriptions/{id}.json": {
      "get": {
        "tags": [
          "Activity Descriptions"
        ],
        "operationId": "ActivityDescription#show",
        "summary": "Return the data for a single ActivityDescription",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ActivityDescription",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ActivityDescription.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDescriptionShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Activity Descriptions"
        ],
        "operationId": "ActivityDescription#update",
        "summary": "Update a single ActivityDescription",
        "description": "Outlines the parameters and data fields used when updating a single ActivityDescription",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ActivityDescription.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDescriptionShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ActivityDescription."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "type": "string",
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ActivityDescription."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "type": "string",
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ActivityDescription."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "default": 0,
                            "type": "number",
                            "format": "double",
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "type": "string",
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Activity Descriptions"
        ],
        "operationId": "ActivityDescription#destroy",
        "summary": "Delete a single ActivityDescription",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single ActivityDescription",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ActivityDescription.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/events.json": {
      "get": {
        "tags": [
          "Allocations"
        ],
        "operationId": "Allocation#events",
        "summary": "Return the data for Allocations events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Allocations events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Allocation records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/allocations.json": {
      "get": {
        "tags": [
          "Allocations"
        ],
        "operationId": "Allocation#index",
        "summary": "Return the data for all Allocations",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Allocations",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bill_id",
            "description": "The unique identifier for a single Bill. The keyword `null` is not valid for this field. The list will be filtered to include only the Allocation records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contact_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Allocation records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Allocation records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Allocation records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the Allocation records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Allocation records by the given field. Default: `date(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "date(asc)",
                "date(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_id",
            "description": "ID of parent (either a Payment or CreditMemo) this allocation belongs to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parent_type",
            "description": "Filter Allocation records based on whether the parent is a CreditMemo or a Payment.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "description": "Filter Allocation records to those that are valid or invalid.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "valid",
                "invalid"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/{id}.json": {
      "get": {
        "tags": [
          "Allocations"
        ],
        "operationId": "Allocation#show",
        "summary": "Return the data for a single Allocation",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Allocation",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Allocation.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_accounts/events.json": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "operationId": "BankAccount#events",
        "summary": "Return the data for BankAccounts events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for BankAccounts events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of BankAccount records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_accounts.json": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "operationId": "BankAccount#index",
        "summary": "Return the data for all BankAccounts",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BankAccounts",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter BankAccount records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of BankAccount records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the BankAccount records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "institution(asc)",
                "institution(desc)",
                "account_number(asc)",
                "account_number(desc)",
                "transit_number(asc)",
                "transit_number(desc)",
                "currency(asc)",
                "currency(desc)",
                "updated_at(asc)",
                "updated_at(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_empty_accounts",
            "description": "Filter BankAccount records to those having a zero or non zero balance.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "description": "Filter BankAccount records to those having a specific type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "OperatingAccount",
                "TrustAccount"
              ]
            }
          },
          {
            "name": "user_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BankAccount. The list will be filtered to include only the BankAccount records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bank Accounts"
        ],
        "operationId": "BankAccount#create",
        "summary": "Create a new BankAccount",
        "description": "Outlines the parameters and data fields used when creating a new BankAccount",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "balance": {
                        "type": "number",
                        "format": "double",
                        "description": "BankAccount balance."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      },
                      "type": {
                        "enum": [
                          "Operating",
                          "Trust"
                        ],
                        "type": "string",
                        "description": "Type of BankAccount."
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "balance": {
                        "type": "number",
                        "format": "double",
                        "description": "BankAccount balance."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      },
                      "type": {
                        "enum": [
                          "Operating",
                          "Trust"
                        ],
                        "type": "string",
                        "description": "Type of BankAccount."
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "balance": {
                        "type": "number",
                        "format": "double",
                        "description": "BankAccount balance."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      },
                      "type": {
                        "enum": [
                          "Operating",
                          "Trust"
                        ],
                        "type": "string",
                        "description": "Type of BankAccount."
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/bank_accounts/{id}.json": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "operationId": "BankAccount#show",
        "summary": "Return the data for a single BankAccount",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single BankAccount",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BankAccount.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Bank Accounts"
        ],
        "operationId": "BankAccount#update",
        "summary": "Update a single BankAccount",
        "description": "Outlines the parameters and data fields used when updating a single BankAccount",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BankAccount.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Bank Accounts"
        ],
        "operationId": "BankAccount#destroy",
        "summary": "Delete a single BankAccount",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single BankAccount",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BankAccount.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_transactions.json": {
      "get": {
        "tags": [
          "Bank Transactions"
        ],
        "operationId": "BankTransaction#index",
        "summary": "Return the data for all BankTransactions",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BankTransactions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bank_account_id",
            "description": "The unique identifier for a single BankAccount. The keyword `null` is not valid for this field. The list will be filtered to include only the BankTransaction records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "client_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the BankTransaction records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter BankTransaction records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter BankTransaction records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of BankTransaction records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the BankTransaction records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the BankTransaction records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Filter BankTransaction records to those having a specific type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asset",
                "liability"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter BankTransaction records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_transactions/{id}.json": {
      "get": {
        "tags": [
          "Bank Transactions"
        ],
        "operationId": "BankTransaction#show",
        "summary": "Return the data for a single BankTransaction",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single BankTransaction",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BankTransaction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_transfers/{id}.json": {
      "get": {
        "tags": [
          "Bank Transfers"
        ],
        "operationId": "BankTransfer#show",
        "summary": "Return the data for a single BankTransfer",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single BankTransfer",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BankTransfer.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransferShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bill_themes.json": {
      "patch": {
        "tags": [
          "Bill Themes"
        ],
        "operationId": "BillTheme#update",
        "summary": "Update a single BillTheme",
        "description": "Outlines the parameters and data fields used when updating a single BillTheme",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BillTheme.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillThemeShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/BillTheme_updateBody"
        }
      },
      "get": {
        "tags": [
          "Bill Themes"
        ],
        "operationId": "BillTheme#index",
        "summary": "Return the data for all BillThemes",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BillThemes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter BillTheme records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter BillTheme records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of BillTheme records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter BillTheme records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillThemeList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bill_themes/{id}.json": {
      "patch": {
        "tags": [
          "Bill Themes"
        ],
        "operationId": "BillTheme#update",
        "summary": "Update a single BillTheme",
        "description": "Outlines the parameters and data fields used when updating a single BillTheme",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BillTheme.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillThemeShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/BillTheme_updateBody"
        }
      }
    },
    "/billable_clients.json": {
      "get": {
        "tags": [
          "Billable Clients"
        ],
        "operationId": "BillableClient#index",
        "summary": "Return the data for all BillableClients",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BillableClients",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "client_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableClient records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "custom_field_values",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "end_date",
            "description": "Filter BillableClient records to those that have Matters with unbilled Activities on or before this date (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of BillableClient records to be returned. Limit can range between 1 and 25. Default: `25`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableClient records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "originating_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableClient. The list will be filtered to include only the BillableClient records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `display_number` or `number` or `description` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableClient. The list will be filtered to include only the BillableClient records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start_date",
            "description": "Filter BillableClient records to those that have Matters with unbilled Activities on or after this date (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillableClientList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/billable_matters/ids.json": {
      "get": {
        "tags": [
          "Billable Matters"
        ],
        "operationId": "BillableMatter#ids",
        "summary": "Returns the unique identifiers of all BillableMatter",
        "description": "This data is retrieved asynchronously",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "client_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableMatter records with the matching property.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "custom_field_values",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "end_date",
            "description": "Filter BillableMatter records to those that have matters with unbilled activities on or before this date (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of BillableMatter records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableMatter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "originating_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableMatter. The list will be filtered to include only the BillableMatter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `display_number` or `number` or `description` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableMatter. The list will be filtered to include only the BillableMatter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start_date",
            "description": "Filter BillableMatter records to those that have matters with unbilled activities on or after this date (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillableMatterShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/billable_matters.json": {
      "get": {
        "tags": [
          "Billable Matters"
        ],
        "operationId": "BillableMatter#index",
        "summary": "Return the data for all BillableMatters",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BillableMatters",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "client_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableMatter records with the matching property.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "custom_field_values",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "end_date",
            "description": "Filter BillableMatter records to those that have matters with unbilled activities on or before this date (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of BillableMatter records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableMatter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "originating_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableMatter. The list will be filtered to include only the BillableMatter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `display_number` or `number` or `description` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableMatter. The list will be filtered to include only the BillableMatter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start_date",
            "description": "Filter BillableMatter records to those that have matters with unbilled activities on or after this date (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillableMatterList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bills/{id}/preview.json": {
      "get": {
        "tags": [
          "Bills"
        ],
        "operationId": "Bill#preview",
        "summary": "Returns the pre-rendered html for the Bill",
        "description": "This endpoint returns a pre-rendered HTML object that you can use to view a preview of your bills.\nThe HTML provided contains all of the CSS rules it requires to show the bill correctly,\nas well as the DOCTYPE setting it requires.\nIt's best to use an iframe, or similar object, to render the results of this endpoint.\nThis endpoint does not support bulk actions.\n",
        "parameters": [
          {
            "name": "id",
            "description": "The unique identifier for the Bill.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bills/events.json": {
      "get": {
        "tags": [
          "Bills"
        ],
        "operationId": "Bill#events",
        "summary": "Return the data for Bills events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Bills events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Bill records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bills.json": {
      "get": {
        "tags": [
          "Bills"
        ],
        "operationId": "Bill#index",
        "summary": "Return the data for all Bills",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Bills",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "client_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Bill records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Bill records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "custom_field_values",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "due_after",
            "description": "Filter Bill records to those that have a `due_date` after the one provided (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "due_at",
            "description": "Filter Bill records to those that have a specific `due_date` (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "due_before",
            "description": "Filter Bill records to those that have a `due_date` before the one provided (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Bill records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Bill records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Bill. The list will be filtered to include only the Bill records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Bill records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "due_at(asc)",
                "due_at(desc)",
                "issued_at(asc)",
                "issued_at(desc)",
                "client_name(asc)",
                "client_name(desc)",
                "matter_display_number(asc)",
                "matter_display_number(desc)",
                "balance(asc)",
                "balance(desc)",
                "number(asc)",
                "number(desc)"
              ]
            }
          },
          {
            "name": "originating_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Bill. The list will be filtered to include only the Bill records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Allows matching search on invoice number.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "responsible_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Bill. The list will be filtered to include only the Bill records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "description": "Filter Bill records to those in a given state.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "awaiting_approval",
                "awaiting_payment",
                "paid",
                "void",
                "deleted"
              ]
            }
          },
          {
            "name": "status",
            "description": "Filter Bill records to those with particular payment status.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "overdue"
              ]
            }
          },
          {
            "name": "type",
            "description": "Filter Bill records to those of a specific type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "revenue",
                "trust"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Bill records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bills/{id}.json": {
      "get": {
        "tags": [
          "Bills"
        ],
        "operationId": "Bill#show",
        "summary": "Return the data for a single Bill",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Bill",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Bill.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "navigation.next",
            "description": "The id of the next *Bill* available for viewing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "navigation.previous",
            "description": "The id of the previous *Bill* available for viewing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Bills"
        ],
        "operationId": "Bill#update",
        "summary": "Update a single Bill",
        "description": "Outlines the parameters and data fields used when updating a single Bill",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Bill.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bill_theme": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier of the bill theme applied to the Bill."
                          }
                        }
                      },
                      "config": {
                        "type": "string",
                        "description": "A string containing bill theme settings for the Bill preview that are specific to this Bill.\n\nTo learn more about available options that you can set in this field, refer to the [bill themes](#operation/BillTheme%23update) documentation.\n\nValues set in this string will override the bill theme settings when displaying this Bill.\nAny values not present in this string will default to using the settings present in the bill theme for this Bill,\nor to the default settings for those values if it is also undefined in the bill theme.\n"
                      },
                      "currency_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the currency applied to the Bill."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount amount for the Bill. This can either be a percentage or monetary value, this is determined by the `discount[type]`."
                          },
                          "type": {
                            "enum": [
                              "percentage",
                              "money"
                            ],
                            "type": "string",
                            "description": "The type of discount you are applying to your Bill with the `discount[rate]`."
                          },
                          "note": {
                            "type": "string",
                            "description": "A note for your Bill's discount."
                          }
                        }
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill is due. If `use_grace_period` is true, this field is ignored."
                      },
                      "interest": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Interest amount for the Bill as percentage."
                          },
                          "type": {
                            "enum": [
                              "simple",
                              "compound"
                            ],
                            "type": "string",
                            "description": "The type of interest you are applying to your Bill with the `interest[rate]`."
                          },
                          "period": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The interest period for how frequently your Bill will charge interest."
                          }
                        }
                      },
                      "issued_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill was issued."
                      },
                      "memo": {
                        "type": "string",
                        "description": "Memo for the Bill."
                      },
                      "number": {
                        "type": "string",
                        "description": "Bill's number."
                      },
                      "purchase_order": {
                        "type": "string",
                        "description": "Purchase order information for the Bill."
                      },
                      "secondary_tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Secondary tax rate as percentage for the Bill."
                      },
                      "state": {
                        "enum": [
                          "draft",
                          "awaiting_approval",
                          "awaiting_payment",
                          "paid",
                          "void",
                          "deleted"
                        ],
                        "type": "string",
                        "description": "Bill's state."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject details for the Bill."
                      },
                      "tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Tax rate as percentage for the Bill"
                      },
                      "use_grace_period": {
                        "type": "boolean",
                        "description": "When true, sets the bill's due date based on the client's grace period. This setting overrides the `due_at` parameter."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bill_theme": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier of the bill theme applied to the Bill."
                          }
                        }
                      },
                      "config": {
                        "type": "string",
                        "description": "A string containing bill theme settings for the Bill preview that are specific to this Bill.\n\nTo learn more about available options that you can set in this field, refer to the [bill themes](#operation/BillTheme%23update) documentation.\n\nValues set in this string will override the bill theme settings when displaying this Bill.\nAny values not present in this string will default to using the settings present in the bill theme for this Bill,\nor to the default settings for those values if it is also undefined in the bill theme.\n"
                      },
                      "currency_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the currency applied to the Bill."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount amount for the Bill. This can either be a percentage or monetary value, this is determined by the `discount[type]`."
                          },
                          "type": {
                            "enum": [
                              "percentage",
                              "money"
                            ],
                            "type": "string",
                            "description": "The type of discount you are applying to your Bill with the `discount[rate]`."
                          },
                          "note": {
                            "type": "string",
                            "description": "A note for your Bill's discount."
                          }
                        }
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill is due. If `use_grace_period` is true, this field is ignored."
                      },
                      "interest": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Interest amount for the Bill as percentage."
                          },
                          "type": {
                            "enum": [
                              "simple",
                              "compound"
                            ],
                            "type": "string",
                            "description": "The type of interest you are applying to your Bill with the `interest[rate]`."
                          },
                          "period": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The interest period for how frequently your Bill will charge interest."
                          }
                        }
                      },
                      "issued_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill was issued."
                      },
                      "memo": {
                        "type": "string",
                        "description": "Memo for the Bill."
                      },
                      "number": {
                        "type": "string",
                        "description": "Bill's number."
                      },
                      "purchase_order": {
                        "type": "string",
                        "description": "Purchase order information for the Bill."
                      },
                      "secondary_tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Secondary tax rate as percentage for the Bill."
                      },
                      "state": {
                        "enum": [
                          "draft",
                          "awaiting_approval",
                          "awaiting_payment",
                          "paid",
                          "void",
                          "deleted"
                        ],
                        "type": "string",
                        "description": "Bill's state."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject details for the Bill."
                      },
                      "tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Tax rate as percentage for the Bill"
                      },
                      "use_grace_period": {
                        "type": "boolean",
                        "description": "When true, sets the bill's due date based on the client's grace period. This setting overrides the `due_at` parameter."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bill_theme": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier of the bill theme applied to the Bill."
                          }
                        }
                      },
                      "config": {
                        "type": "string",
                        "description": "A string containing bill theme settings for the Bill preview that are specific to this Bill.\n\nTo learn more about available options that you can set in this field, refer to the [bill themes](#operation/BillTheme%23update) documentation.\n\nValues set in this string will override the bill theme settings when displaying this Bill.\nAny values not present in this string will default to using the settings present in the bill theme for this Bill,\nor to the default settings for those values if it is also undefined in the bill theme.\n"
                      },
                      "currency_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the currency applied to the Bill."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount amount for the Bill. This can either be a percentage or monetary value, this is determined by the `discount[type]`."
                          },
                          "type": {
                            "enum": [
                              "percentage",
                              "money"
                            ],
                            "type": "string",
                            "description": "The type of discount you are applying to your Bill with the `discount[rate]`."
                          },
                          "note": {
                            "type": "string",
                            "description": "A note for your Bill's discount."
                          }
                        }
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill is due. If `use_grace_period` is true, this field is ignored."
                      },
                      "interest": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Interest amount for the Bill as percentage."
                          },
                          "type": {
                            "enum": [
                              "simple",
                              "compound"
                            ],
                            "type": "string",
                            "description": "The type of interest you are applying to your Bill with the `interest[rate]`."
                          },
                          "period": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The interest period for how frequently your Bill will charge interest."
                          }
                        }
                      },
                      "issued_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill was issued."
                      },
                      "memo": {
                        "type": "string",
                        "description": "Memo for the Bill."
                      },
                      "number": {
                        "type": "string",
                        "description": "Bill's number."
                      },
                      "purchase_order": {
                        "type": "string",
                        "description": "Purchase order information for the Bill."
                      },
                      "secondary_tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Secondary tax rate as percentage for the Bill."
                      },
                      "state": {
                        "enum": [
                          "draft",
                          "awaiting_approval",
                          "awaiting_payment",
                          "paid",
                          "void",
                          "deleted"
                        ],
                        "type": "string",
                        "description": "Bill's state."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject details for the Bill."
                      },
                      "tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Tax rate as percentage for the Bill"
                      },
                      "use_grace_period": {
                        "type": "boolean",
                        "description": "When true, sets the bill's due date based on the client's grace period. This setting overrides the `due_at` parameter."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Bills"
        ],
        "operationId": "Bill#destroy",
        "summary": "Delete or void a Bill",
        "description": "This endpoint will transition a bill to either its deleted or voided state.\nA bill can only be deleted or voided if it has no payments recorded\nand its current state is one of the following:\n* Draft\n* Pending Approval\n* Awaiting Payment\n\nA bill will automatically be moved to a deleted or void state based on its current state.\nThe mappings for this are:\n* Draft -> Deleted\n* Pending Approval -> Deleted\n* Awaiting Payment -> Void\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Bill.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bulk_actions.json": {
      "patch": {
        "tags": [
          "Bulk Actions"
        ],
        "operationId": "BulkAction#update",
        "summary": "Update a single BulkAction",
        "description": "Outlines the parameters and data fields used when updating a single BulkAction",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BulkAction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkActionShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/BulkAction_updateBody"
        }
      },
      "get": {
        "tags": [
          "Bulk Actions"
        ],
        "operationId": "BulkAction#index",
        "summary": "Return the data for all BulkActions",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BulkActions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of BulkAction records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkActionList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bulk_actions/{id}.json": {
      "get": {
        "tags": [
          "Bulk Actions"
        ],
        "operationId": "BulkAction#show",
        "summary": "Return the data for a single BulkAction",
        "description": "If the bulk action is complete, then it will either a redirect\nto the completed job otherwise the current status of the incomplete job\ncan be retrieved.\n",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BulkAction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ignore_redirect",
            "description": "Whether or not the request should ignore the automatic redirect once the BulkAction is complete.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkActionShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Bulk Actions"
        ],
        "operationId": "BulkAction#update",
        "summary": "Update a single BulkAction",
        "description": "Outlines the parameters and data fields used when updating a single BulkAction",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the BulkAction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkActionShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/BulkAction_updateBody"
        }
      }
    },
    "/calendar_entries.json": {
      "get": {
        "tags": [
          "Calendar Entries"
        ],
        "operationId": "CalendarEntry#index",
        "summary": "Return the data for all CalendarEntries",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CalendarEntries",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "calendar_id",
            "description": "The unique identifier for a single Calendar. The keyword `null` is not valid for this field. The list will be filtered to include only the CalendarEntry records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter CalendarEntry records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "expanded",
            "description": "Returns a record for each occurrence of a recurring calendar event.  Non-recurring calendar events are unaffected and returned as separate records regardless of the expanded setting.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "external_property_name",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "Filter CalendarEntry records to those that end on or after the provided time (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "has_court_rule",
            "description": "Allows matching court rule on calendar entry.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter CalendarEntry records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of CalendarEntry records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a CalendarEntry. The list will be filtered to include only the CalendarEntry records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "owner_entries_across_all_users",
            "description": "Returns CalendarEntry records for all users related to a matter. Requires matter id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Allows matching search on calendar entry.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "description": "Filter CalendarEntry records to those having a specific calendar visibility source (mobile, web).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "web",
                "mobile"
              ]
            }
          },
          {
            "name": "to",
            "description": "Filter CalendarEntry records to those that begin on or before the provided time (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter CalendarEntry records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "visible",
            "description": "Filter CalendarEntry records to those that are visible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendar Entries"
        ],
        "operationId": "CalendarEntry#create",
        "summary": "Create a new CalendarEntry",
        "description": "Outlines the parameters and data fields used when creating a new CalendarEntry",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntryShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "enum": [
                          "single",
                          "future"
                        ],
                        "type": "string",
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    },
                    "required": [
                      "summary",
                      "start_at",
                      "end_at",
                      "calendar_owner"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "enum": [
                          "single",
                          "future"
                        ],
                        "type": "string",
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    },
                    "required": [
                      "summary",
                      "start_at",
                      "end_at",
                      "calendar_owner"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "enum": [
                          "single",
                          "future"
                        ],
                        "type": "string",
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    },
                    "required": [
                      "summary",
                      "start_at",
                      "end_at",
                      "calendar_owner"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/calendar_entries/{id}.json": {
      "get": {
        "tags": [
          "Calendar Entries"
        ],
        "operationId": "CalendarEntry#show",
        "summary": "Return the data for a single CalendarEntry",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CalendarEntry",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CalendarEntry.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntryShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Calendar Entries"
        ],
        "operationId": "CalendarEntry#update",
        "summary": "Update a single CalendarEntry",
        "description": "Outlines the parameters and data fields used when updating a single CalendarEntry",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CalendarEntry.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntryShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "enum": [
                          "single",
                          "future"
                        ],
                        "type": "string",
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the CalendarEntry. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the CalendarEntry."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "enum": [
                          "single",
                          "future"
                        ],
                        "type": "string",
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the CalendarEntry. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the CalendarEntry."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "enum": [
                          "single",
                          "future"
                        ],
                        "type": "string",
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the CalendarEntry. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the CalendarEntry."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Calendar Entries"
        ],
        "operationId": "CalendarEntry#destroy",
        "summary": "Delete a single CalendarEntry",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single CalendarEntry",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CalendarEntry.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendars.json": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "operationId": "Calendar#index",
        "summary": "Return the data for all Calendars",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Calendars",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_inactive_users",
            "description": "Filter any shared UserCalendar records whose owner is inactive.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Calendar records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Calendar records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Calendar records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "owner",
            "description": "Filter Calendar records to those that the user owns.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "description": "Filter Calendar records to those having a specific calendar visibility source (mobile, web).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "web",
                "mobile"
              ]
            }
          },
          {
            "name": "type",
            "description": "Filter Calendar records to those of the specified type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "AccountCalendar",
                "AdhocCalendar",
                "UserCalendar"
              ]
            }
          },
          {
            "name": "visible",
            "description": "Filter Calendar records to those that are visible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "writeable",
            "description": "Filter Calendar records to those which the user can write to.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendars"
        ],
        "operationId": "Calendar#create",
        "summary": "Create a new Calendar",
        "description": "Outlines the parameters and data fields used when creating a new Calendar",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "enum": [
                          "#367b9c",
                          "#ffa5a4",
                          "#83d17f",
                          "#ffac7b",
                          "#8e3f64",
                          "#c75300",
                          "#009cec",
                          "#62d6b1",
                          "#9eedcb",
                          "#f9a2c4",
                          "#616161",
                          "#bbda81",
                          "#dfd3f8",
                          "#d6c4a5",
                          "#ffd478",
                          "#6ac9de",
                          "#eabbb0",
                          "#bfc2e1",
                          "#dadada",
                          "#cde2f5"
                        ],
                        "type": "string",
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "enum": {
                          "web": "web",
                          "mobile": "mobile"
                        },
                        "type": "string",
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "enum": [
                          "#367b9c",
                          "#ffa5a4",
                          "#83d17f",
                          "#ffac7b",
                          "#8e3f64",
                          "#c75300",
                          "#009cec",
                          "#62d6b1",
                          "#9eedcb",
                          "#f9a2c4",
                          "#616161",
                          "#bbda81",
                          "#dfd3f8",
                          "#d6c4a5",
                          "#ffd478",
                          "#6ac9de",
                          "#eabbb0",
                          "#bfc2e1",
                          "#dadada",
                          "#cde2f5"
                        ],
                        "type": "string",
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "enum": {
                          "web": "web",
                          "mobile": "mobile"
                        },
                        "type": "string",
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "enum": [
                          "#367b9c",
                          "#ffa5a4",
                          "#83d17f",
                          "#ffac7b",
                          "#8e3f64",
                          "#c75300",
                          "#009cec",
                          "#62d6b1",
                          "#9eedcb",
                          "#f9a2c4",
                          "#616161",
                          "#bbda81",
                          "#dfd3f8",
                          "#d6c4a5",
                          "#ffd478",
                          "#6ac9de",
                          "#eabbb0",
                          "#bfc2e1",
                          "#dadada",
                          "#cde2f5"
                        ],
                        "type": "string",
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "enum": {
                          "web": "web",
                          "mobile": "mobile"
                        },
                        "type": "string",
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/calendars/{id}.json": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "operationId": "Calendar#show",
        "summary": "Return the data for a single Calendar",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Calendar",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Calendar.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Calendars"
        ],
        "operationId": "Calendar#update",
        "summary": "Update a single Calendar",
        "description": "Outlines the parameters and data fields used when updating a single Calendar",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Calendar.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "enum": [
                          "#367b9c",
                          "#ffa5a4",
                          "#83d17f",
                          "#ffac7b",
                          "#8e3f64",
                          "#c75300",
                          "#009cec",
                          "#62d6b1",
                          "#9eedcb",
                          "#f9a2c4",
                          "#616161",
                          "#bbda81",
                          "#dfd3f8",
                          "#d6c4a5",
                          "#ffd478",
                          "#6ac9de",
                          "#eabbb0",
                          "#bfc2e1",
                          "#dadada",
                          "#cde2f5"
                        ],
                        "type": "string",
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "enum": {
                          "web": "web",
                          "mobile": "mobile"
                        },
                        "type": "string",
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "enum": [
                          "#367b9c",
                          "#ffa5a4",
                          "#83d17f",
                          "#ffac7b",
                          "#8e3f64",
                          "#c75300",
                          "#009cec",
                          "#62d6b1",
                          "#9eedcb",
                          "#f9a2c4",
                          "#616161",
                          "#bbda81",
                          "#dfd3f8",
                          "#d6c4a5",
                          "#ffd478",
                          "#6ac9de",
                          "#eabbb0",
                          "#bfc2e1",
                          "#dadada",
                          "#cde2f5"
                        ],
                        "type": "string",
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "enum": {
                          "web": "web",
                          "mobile": "mobile"
                        },
                        "type": "string",
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "enum": [
                          "#367b9c",
                          "#ffa5a4",
                          "#83d17f",
                          "#ffac7b",
                          "#8e3f64",
                          "#c75300",
                          "#009cec",
                          "#62d6b1",
                          "#9eedcb",
                          "#f9a2c4",
                          "#616161",
                          "#bbda81",
                          "#dfd3f8",
                          "#d6c4a5",
                          "#ffd478",
                          "#6ac9de",
                          "#eabbb0",
                          "#bfc2e1",
                          "#dadada",
                          "#cde2f5"
                        ],
                        "type": "string",
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "enum": {
                          "web": "web",
                          "mobile": "mobile"
                        },
                        "type": "string",
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Calendars"
        ],
        "operationId": "Calendar#destroy",
        "summary": "Delete a single Calendar",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Calendar",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Calendar.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/communications/events.json": {
      "get": {
        "tags": [
          "Communications"
        ],
        "operationId": "Communication#events",
        "summary": "Return the data for Communications events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Communications events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Communication records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/communications.json": {
      "get": {
        "tags": [
          "Communications"
        ],
        "operationId": "Communication#index",
        "summary": "Return the data for all Communications",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Communications",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contact_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Communication records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "description": "Filter Communication records to those that occur on the specified date (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "external_property_name",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "having_time_entries",
            "description": "Filter Communication records to those that do or do not have time entries.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Communication records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Communication records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Communication. The list will be filtered to include only the Communication records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Communication records by the given field. Default: `date(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "date(asc)",
                "date(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `body` or `subject` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Filter Communication records to those of the specified type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "EmailCommunication",
                "PhoneCommunication"
              ]
            }
          },
          {
            "name": "user_id",
            "description": "The unique identifier for a single User. The keyword `null` is not valid for this field. The list will be filtered to include only the Communication records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Communications"
        ],
        "operationId": "Communication#create",
        "summary": "Create a new Communication",
        "description": "Outlines the parameters and data fields used when creating a new Communication",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "date": {
                        "type": "string",
                        "description": "The date for the Communication. (Expects an ISO-8601 date)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the receivers of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the senders of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "type": "string",
                        "description": "Type of the Communication."
                      }
                    },
                    "required": [
                      "type",
                      "subject",
                      "body"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "date": {
                        "type": "string",
                        "description": "The date for the Communication. (Expects an ISO-8601 date)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the receivers of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the senders of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "type": "string",
                        "description": "Type of the Communication."
                      }
                    },
                    "required": [
                      "type",
                      "subject",
                      "body"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "date": {
                        "type": "string",
                        "description": "The date for the Communication. (Expects an ISO-8601 date)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the receivers of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the senders of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "type": "string",
                        "description": "Type of the Communication."
                      }
                    },
                    "required": [
                      "type",
                      "subject",
                      "body"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/communications/{id}.json": {
      "get": {
        "tags": [
          "Communications"
        ],
        "operationId": "Communication#show",
        "summary": "Return the data for a single Communication",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Communication",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Communication.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Communications"
        ],
        "operationId": "Communication#update",
        "summary": "Update a single Communication",
        "description": "Outlines the parameters and data fields used when updating a single Communication",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Communication.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "date": {
                        "type": "string",
                        "description": "The date for the Communication. (Expects an ISO-8601 date)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the Communication. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Communication."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the receivers of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the senders of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "type": "string",
                        "description": "Type of the Communication."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "date": {
                        "type": "string",
                        "description": "The date for the Communication. (Expects an ISO-8601 date)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the Communication. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Communication."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the receivers of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the senders of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "type": "string",
                        "description": "Type of the Communication."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "date": {
                        "type": "string",
                        "description": "The date for the Communication. (Expects an ISO-8601 date)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the Communication. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Communication."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the receivers of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "type": "string",
                              "description": "Types of the senders of this Communication."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "type": "string",
                        "description": "Type of the Communication."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Communications"
        ],
        "operationId": "Communication#destroy",
        "summary": "Delete a single Communication",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Communication",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Communication.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/events.json": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "Contact#events",
        "summary": "Return the data for Contacts events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Contacts events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Contact records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts.json": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "Contact#index",
        "summary": "Return the data for all Contacts",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Contacts",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "client_only",
            "description": "Filter Contact records to those that are clients.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true,",
                "false"
              ]
            }
          },
          {
            "name": "clio_connect_only",
            "description": "Filter Contact records to those that are Clio Connect users.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "created_since",
            "description": "Filter Contact records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "custom_field_ids[]",
            "description": "Filter Contact's custom_field_values to only include values for the given custom field unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "custom_field_values",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "email_only",
            "description": "Filter Contact records to those that have email addresses.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "exclude_ids[]",
            "description": "Filter Contact records to those who are not included in the given list of unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Contact records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "initial",
            "description": "Filter Contact records to those where the last name or company name start with the given initial.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F",
                "G",
                "H",
                "I",
                "J",
                "K",
                "L",
                "M",
                "N",
                "O",
                "P",
                "Q",
                "R",
                "S",
                "T",
                "U",
                "V",
                "W",
                "X",
                "Y",
                "Z"
              ]
            }
          },
          {
            "name": "last_paid_end_date",
            "description": "Filter Contact records for those whose bills have been paid before specified date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "last_paid_start_date",
            "description": "Filter Contact records for those whose bills have been paid after specified date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "last_shared_end_date",
            "description": "Filter Contact records for those whose bills have been shared before specified date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "last_shared_start_date",
            "description": "Filter Contact records for those whose bills have been shared after specified date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Contact records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Contact records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "shared_at(asc)",
                "shared_at(desc)"
              ]
            }
          },
          {
            "name": "outstanding_balance_only",
            "description": "Filter Contact records to those that have an outstanding balance.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for title, email address, address, phone number, web site, instant messenger,\ncustom fields, related matter name, or company name matching a given string.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "description": "Filter Contact records to those with matters that have a matching responsible attorney",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shared_resource_id",
            "description": "Filter Contact records to those that currently have access to a given shared resource.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "description": "Filter Contact records to those that match the given type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Company",
                "Person"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Contact records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "operationId": "Contact#create",
        "summary": "Create a new Contact",
        "description": "Outlines the parameters and data fields used when creating a new Contact",
        "parameters": [
          {
            "name": "custom_field_ids[]",
            "description": "Filter Contact's custom_field_values to only include values for the given custom field unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "string",
                        "description": "Billing rate if the Contact is a co counsel"
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "type": "string",
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "type"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "string",
                        "description": "Billing rate if the Contact is a co counsel"
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "type": "string",
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "type"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "string",
                        "description": "Billing rate if the Contact is a co counsel"
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "type": "string",
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/contacts/{id}.json": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "Contact#show",
        "summary": "Return the data for a single Contact",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Contact",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_ids[]",
            "description": "Filter Contact's custom_field_values to only include values for the given custom field unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Contact.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "operationId": "Contact#update",
        "summary": "Update a single Contact",
        "description": "Outlines the parameters and data fields used when updating a single Contact",
        "parameters": [
          {
            "name": "custom_field_ids[]",
            "description": "Filter Contact's custom_field_values to only include values for the given custom field unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Contact.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Address associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Address is present, the Address is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "string",
                        "description": "Billing rate if the Contact is a co counsel"
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single EmailAddress associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated EmailAddress is present, the EmailAddress is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single InstantMessenger associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated InstantMessenger is present, the InstantMessenger is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single PhoneNumber associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated PhoneNumber is present, the PhoneNumber is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "type": "string",
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single WebSite associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated WebSite is present, the WebSite is deleted from the Contact."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Address associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Address is present, the Address is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "string",
                        "description": "Billing rate if the Contact is a co counsel"
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single EmailAddress associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated EmailAddress is present, the EmailAddress is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single InstantMessenger associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated InstantMessenger is present, the InstantMessenger is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single PhoneNumber associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated PhoneNumber is present, the PhoneNumber is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "type": "string",
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single WebSite associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated WebSite is present, the WebSite is deleted from the Contact."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Address associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Address is present, the Address is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "string",
                        "description": "Billing rate if the Contact is a co counsel"
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single EmailAddress associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated EmailAddress is present, the EmailAddress is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single InstantMessenger associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated InstantMessenger is present, the InstantMessenger is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single PhoneNumber associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated PhoneNumber is present, the PhoneNumber is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "type": "string",
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "default": "Other",
                              "type": "string",
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single WebSite associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated WebSite is present, the WebSite is deleted from the Contact."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "operationId": "Contact#destroy",
        "summary": "Delete a single Contact",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Contact",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Contact.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/conversation_messages.json": {
      "get": {
        "tags": [
          "Conversation Messages"
        ],
        "operationId": "ConversationMessage#index",
        "summary": "Return the data for all ConversationMessages",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ConversationMessages",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "conversation_id",
            "description": "The unique identifier for a single Conversation. Use the keyword `null` to match those without a ConversationMessage. The list will be filtered to include only the ConversationMessage records with the matching property.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of ConversationMessage records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the ConversationMessage records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter ConversationMessage records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessageList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Conversation Messages"
        ],
        "operationId": "ConversationMessage#create",
        "summary": "Create a new ConversationMessage",
        "description": "Outlines the parameters and data fields used when creating a new ConversationMessage",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessageShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Conversation associated with this ConversationMessage."
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the ConversationMessage. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single receiver for this ConversationMessage."
                            },
                            "type": {
                              "enum": [
                                "Contact",
                                "User"
                              ],
                              "type": "string",
                              "description": "The type for a single receiver for this ConversationMessage, could be `Contact` or `User`."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      }
                    },
                    "required": [
                      "body"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Conversation associated with this ConversationMessage."
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the ConversationMessage. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single receiver for this ConversationMessage."
                            },
                            "type": {
                              "enum": [
                                "Contact",
                                "User"
                              ],
                              "type": "string",
                              "description": "The type for a single receiver for this ConversationMessage, could be `Contact` or `User`."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      }
                    },
                    "required": [
                      "body"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Conversation associated with this ConversationMessage."
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the ConversationMessage. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single receiver for this ConversationMessage."
                            },
                            "type": {
                              "enum": [
                                "Contact",
                                "User"
                              ],
                              "type": "string",
                              "description": "The type for a single receiver for this ConversationMessage, could be `Contact` or `User`."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      }
                    },
                    "required": [
                      "body"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/conversation_messages/{id}.json": {
      "get": {
        "tags": [
          "Conversation Messages"
        ],
        "operationId": "ConversationMessage#show",
        "summary": "Return the data for a single ConversationMessage",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ConversationMessage",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ConversationMessage.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessageShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/conversations.json": {
      "patch": {
        "tags": [
          "Conversations"
        ],
        "operationId": "Conversation#update",
        "summary": "Update a single Conversation",
        "description": "Outlines the parameters and data fields used when updating a single Conversation",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Conversation.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Conversation_updateBody"
        }
      },
      "get": {
        "tags": [
          "Conversations"
        ],
        "operationId": "Conversation#index",
        "summary": "Return the data for all Conversations",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Conversations",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "archived",
            "description": "Filter archived Conversation records.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "contact_id",
            "description": "Filter Conversation records for the contact.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "description": "Filter Conversation records created on a given date. (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "for_user",
            "description": "If set to true, filter Conversation records accessible to any groups of the user.\nNote that the user may not be member of the conversations.\n\nIf set to false, filter Conversation records of which the user is a member.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Conversation records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Conversation. The list will be filtered to include only the Conversation records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Conversation records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "last_message_id(asc)",
                "last_message_id(desc)",
                "matter_id(asc)",
                "matter_id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "read_status",
            "description": "Filter Conversation records to those which have been read.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "time_entries",
            "description": "Filter Conversation records to those with or without associated time entries.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Conversation records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/conversations/{id}.json": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "operationId": "Conversation#show",
        "summary": "Return the data for a single Conversation",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Conversation",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Conversation.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Conversations"
        ],
        "operationId": "Conversation#update",
        "summary": "Update a single Conversation",
        "description": "Outlines the parameters and data fields used when updating a single Conversation",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Conversation.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Conversation_updateBody"
        }
      }
    },
    "/court_rules/jurisdictions/{jurisdiction_id}/triggers.json": {
      "get": {
        "tags": [
          "Jurisdictions To Triggers"
        ],
        "operationId": "JurisdictionsToTrigger#index",
        "summary": "Return the data for all triggers",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all JurisdictionsToTriggers",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_requirements_required",
            "description": "Filter JurisdictionsToTrigger records to those which require addition requirements to be checked (usually specifying trigger time).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_served",
            "description": "Filter JurisdictionsToTrigger records to those which require a service type to be selected.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "jurisdiction_id",
            "description": "The unique identifier for the Jurisdiction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of JurisdictionsToTrigger records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `description` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JurisdictionsToTriggerList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/jurisdictions/{jurisdiction_id}/triggers/{id}.json": {
      "get": {
        "tags": [
          "Jurisdictions To Triggers"
        ],
        "operationId": "JurisdictionsToTrigger#show",
        "summary": "Return the data for the trigger",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single JurisdictionsToTrigger",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the JurisdictionsToTrigger.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jurisdiction_id",
            "description": "The unique identifier for the Jurisdiction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JurisdictionsToTriggerShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/jurisdictions.json": {
      "get": {
        "tags": [
          "Jurisdictions"
        ],
        "operationId": "Jurisdiction#index",
        "summary": "Return the data for all jurisdictions",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Jurisdictions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Jurisdiction records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "for_current_account",
            "description": "Filter Jurisdiction records to those set up for this account.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Jurisdiction records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Jurisdiction records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Jurisdiction records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "description(asc)",
                "description(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `description` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Jurisdiction records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JurisdictionList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/jurisdictions/{id}.json": {
      "get": {
        "tags": [
          "Jurisdictions"
        ],
        "operationId": "Jurisdiction#show",
        "summary": "Return the data for the jurisdiction",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Jurisdiction",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Jurisdiction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JurisdictionShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/matter_dockets/preview.json": {
      "get": {
        "tags": [
          "Matter Dockets"
        ],
        "operationId": "MatterDocket#preview",
        "summary": "Preview calendar dates for the docket",
        "description": "Preview calendar dates for the docket",
        "parameters": [
          {
            "name": "jurisdiction[id]",
            "description": "The unique identifier for a single Jurisdiction. The keyword `null` is not valid for this field. The list will be filtered to include only the MatterDocket records with the matching property.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "service_type[id]",
            "description": "The unique identifier for a single ServiceType. The keyword `null` is not valid for this field. The list will be filtered to include only the MatterDocket records with the matching property.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start_date",
            "description": "The date the MatterDocket should start. (Expects an ISO-8601 date).",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "start_time",
            "description": "The time the MatterDocket should start. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "trigger[id]",
            "description": "The unique identifier for a single JurisdictionsToTrigger. The keyword `null` is not valid for this field. The list will be filtered to include only the MatterDocket records with the matching property.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/matter_dockets.json": {
      "get": {
        "tags": [
          "Matter Dockets"
        ],
        "operationId": "MatterDocket#index",
        "summary": "Return the data for all matter dockets",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all MatterDockets",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of MatterDocket records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the MatterDocket records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_status",
            "description": "Filter MatterDocket records to those with Matters having a specific status.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "closed",
                "pending"
              ]
            }
          },
          {
            "name": "order",
            "description": "Orders the MatterDocket records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "date(asc)",
                "date(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_type_id",
            "description": "The unique identifier for a single ServiceType. Use the keyword `null` to match those without a MatterDocket. The list will be filtered to include only the MatterDocket records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "description": "Filter MatterDocket records to those having a specific status.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "not_started,",
                "in_progress,",
                "failed,",
                "completed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatterDocketList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Matter Dockets"
        ],
        "operationId": "MatterDocket#create",
        "summary": "Creates a matter docket",
        "description": "Outlines the parameters and data fields used when creating a new MatterDocket",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatterDocketShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the MatterDocket."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the MatterDocket. (Expects an ISO-8601 date)."
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the MatterDocket. Required for some triggers.  (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "name",
                      "start_date"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the MatterDocket."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the MatterDocket. (Expects an ISO-8601 date)."
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the MatterDocket. Required for some triggers.  (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "name",
                      "start_date"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the MatterDocket."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the MatterDocket. (Expects an ISO-8601 date)."
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the MatterDocket. Required for some triggers.  (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "name",
                      "start_date"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/court_rules/matter_dockets/{id}.json": {
      "get": {
        "tags": [
          "Matter Dockets"
        ],
        "operationId": "MatterDocket#show",
        "summary": "Return the data for the matter docket",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single MatterDocket",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the MatterDocket.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatterDocketShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Matter Dockets"
        ],
        "operationId": "MatterDocket#destroy",
        "summary": "Deletes the requested matter docket",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single MatterDocket",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the MatterDocket.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/service_types.json": {
      "get": {
        "tags": [
          "Service Types"
        ],
        "operationId": "ServiceType#index",
        "summary": "Return the data for all service types",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ServiceTypes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter ServiceType records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter ServiceType records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of ServiceType records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the ServiceType records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "description(asc)",
                "description(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter ServiceType records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTypeList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/service_types/{id}.json": {
      "get": {
        "tags": [
          "Service Types"
        ],
        "operationId": "ServiceType#show",
        "summary": "Return the data for the service type",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ServiceType",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ServiceType.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTypeShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_cards.json": {
      "post": {
        "tags": [
          "Clio Payments Cards"
        ],
        "operationId": "ClioPaymentsCard#create",
        "summary": "Return the data for a single ClioPaymentsCard",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ClioPaymentsCard",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClioPaymentsCardShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_memos.json": {
      "get": {
        "tags": [
          "Credit Memos"
        ],
        "operationId": "CreditMemo#index",
        "summary": "Return the data for all CreditMemos",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CreditMemos",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contact_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the CreditMemo records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter CreditMemo records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of CreditMemo records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the CreditMemo records by the given field. Default: `date(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "date(asc)",
                "date(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditMemoList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_memos/{id}.json": {
      "get": {
        "tags": [
          "Credit Memos"
        ],
        "operationId": "CreditMemo#show",
        "summary": "Return the data for a single CreditMemo",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CreditMemo",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CreditMemo.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditMemoShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/currencies.json": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "operationId": "Currency#index",
        "summary": "Return the data for all Currencies",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Currencies",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Currency records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/custom_fields/events.json": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "operationId": "CustomField#events",
        "summary": "Return the data for CustomFields events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for CustomFields events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of CustomField records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/custom_fields.json": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "operationId": "CustomField#index",
        "summary": "Return the data for all CustomFields",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CustomFields",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter CustomField records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "deleted",
            "description": "Filter CustomField records to those that have been deleted for future use.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "field_type",
            "description": "Field type of this custom field",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "checkbox",
                "contact",
                "currency",
                "date",
                "time",
                "email",
                "matter",
                "numeric",
                "picklist",
                "text_area",
                "text_line",
                "url"
              ]
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter CustomField records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of CustomField records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the CustomField records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "display_order(asc)",
                "display_order(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_type",
            "description": "Filter CustomField records to those that have the specified `parent_type`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "matter",
                "contact"
              ]
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter CustomField records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "visible_and_required",
            "description": "Filter CustomField records to those that are visible and required.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Fields"
        ],
        "operationId": "CustomField#create",
        "summary": "Create a new CustomField",
        "description": "Outlines the parameters and data fields used when creating a new CustomField",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "field_type": {
                        "enum": [
                          "checkbox",
                          "contact",
                          "currency",
                          "date",
                          "time",
                          "email",
                          "matter",
                          "numeric",
                          "picklist",
                          "text_area",
                          "text_line",
                          "url"
                        ],
                        "type": "string",
                        "description": "Field type of the CustomField."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "parent_type": {
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "type": "string",
                        "description": "Type of object the CustomField is for."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should require a value."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "field_type": {
                        "enum": [
                          "checkbox",
                          "contact",
                          "currency",
                          "date",
                          "time",
                          "email",
                          "matter",
                          "numeric",
                          "picklist",
                          "text_area",
                          "text_line",
                          "url"
                        ],
                        "type": "string",
                        "description": "Field type of the CustomField."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "parent_type": {
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "type": "string",
                        "description": "Type of object the CustomField is for."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should require a value."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "field_type": {
                        "enum": [
                          "checkbox",
                          "contact",
                          "currency",
                          "date",
                          "time",
                          "email",
                          "matter",
                          "numeric",
                          "picklist",
                          "text_area",
                          "text_line",
                          "url"
                        ],
                        "type": "string",
                        "description": "Field type of the CustomField."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "parent_type": {
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "type": "string",
                        "description": "Type of object the CustomField is for."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should require a value."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/custom_fields/{id}.json": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "operationId": "CustomField#show",
        "summary": "Return the data for a single CustomField",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CustomField",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CustomField.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Fields"
        ],
        "operationId": "CustomField#update",
        "summary": "Update a single CustomField",
        "description": "Outlines the parameters and data fields used when updating a single CustomField",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CustomField.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should require a value."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should require a value."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "boolean",
                        "description": "Whether or not the CustomField should require a value."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Custom Fields"
        ],
        "operationId": "CustomField#destroy",
        "summary": "Delete a single CustomField",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single CustomField",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CustomField.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/custom_field_sets/events.json": {
      "get": {
        "tags": [
          "Custom Field Sets"
        ],
        "operationId": "CustomFieldSet#events",
        "summary": "Return the data for CustomFieldSets events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for CustomFieldSets events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of CustomFieldSet records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/custom_field_sets.json": {
      "get": {
        "tags": [
          "Custom Field Sets"
        ],
        "operationId": "CustomFieldSet#index",
        "summary": "Return the data for all CustomFieldSets",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CustomFieldSets",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "displayed",
            "description": "Filter CustomFieldSet records to those that should be displayed by default.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter CustomFieldSet records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of CustomFieldSet records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the CustomFieldSet records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)",
                "parent_type(asc)",
                "parent_type(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_type",
            "description": "Filter CustomFieldSet records to those that have the specified `parent_type`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Matter",
                "Contact"
              ]
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/custom_actions.json": {
      "get": {
        "tags": [
          "Custom Actions (Beta)"
        ],
        "operationId": "CustomAction#index",
        "summary": "Return the data for all CustomActions",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CustomActions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter CustomAction records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter CustomAction records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of CustomAction records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter CustomAction records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomActionList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Actions (Beta)"
        ],
        "operationId": "CustomAction#create",
        "summary": "Create a new CustomAction",
        "description": "Outlines the parameters and data fields used when creating a new CustomAction",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomActionShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show"
                        ],
                        "type": "string",
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    },
                    "required": [
                      "label",
                      "target_url",
                      "ui_reference"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show"
                        ],
                        "type": "string",
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    },
                    "required": [
                      "label",
                      "target_url",
                      "ui_reference"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show"
                        ],
                        "type": "string",
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    },
                    "required": [
                      "label",
                      "target_url",
                      "ui_reference"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/custom_actions/{id}.json": {
      "get": {
        "tags": [
          "Custom Actions (Beta)"
        ],
        "operationId": "CustomAction#show",
        "summary": "Return the data for a single CustomAction",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CustomAction",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CustomAction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomActionShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Actions (Beta)"
        ],
        "operationId": "CustomAction#update",
        "summary": "Update a single CustomAction",
        "description": "Outlines the parameters and data fields used when updating a single CustomAction",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CustomAction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomActionShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show"
                        ],
                        "type": "string",
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show"
                        ],
                        "type": "string",
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show"
                        ],
                        "type": "string",
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Custom Actions (Beta)"
        ],
        "operationId": "CustomAction#destroy",
        "summary": "Delete a single CustomAction",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single CustomAction",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CustomAction.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/expense_categories.json": {
      "get": {
        "tags": [
          "Expense Categories"
        ],
        "operationId": "ExpenseCategory#index",
        "summary": "Return the data for all ExpenseCategories",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ExpenseCategories",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "entry_type",
            "description": "Filter ExpenseCategory records to those that match the given type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "hard_cost",
                "soft_cost",
                "unassociated"
              ]
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of ExpenseCategory records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the ExpenseCategory records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "rate(asc)",
                "rate(desc)",
                "entry_type(asc)",
                "entry_type(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Allows matching search on expense category name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategoryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Expense Categories"
        ],
        "operationId": "ExpenseCategory#create",
        "summary": "Create a new ExpenseCategory",
        "description": "Outlines the parameters and data fields used when creating a new ExpenseCategory",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategoryShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "entry_type": {
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "type": "string",
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "entry_type": {
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "type": "string",
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "entry_type": {
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "type": "string",
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/expense_categories/{id}.json": {
      "get": {
        "tags": [
          "Expense Categories"
        ],
        "operationId": "ExpenseCategory#show",
        "summary": "Return the data for a single ExpenseCategory",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ExpenseCategory",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ExpenseCategory.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategoryShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Expense Categories"
        ],
        "operationId": "ExpenseCategory#update",
        "summary": "Update a single ExpenseCategory",
        "description": "Outlines the parameters and data fields used when updating a single ExpenseCategory",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ExpenseCategory.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategoryShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "entry_type": {
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "type": "string",
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "entry_type": {
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "type": "string",
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "entry_type": {
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "type": "string",
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Expense Categories"
        ],
        "operationId": "ExpenseCategory#destroy",
        "summary": "Delete a single ExpenseCategory",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single ExpenseCategory",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ExpenseCategory.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/groups.json": {
      "get": {
        "tags": [
          "Groups"
        ],
        "operationId": "Group#index",
        "summary": "Return the data for all Groups",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Groups",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Group records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Group records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Group records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "description": "Filter Group records to those that match the given name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "description": "Orders the Group records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Filter Group records to those that match the given type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "AccountGroup",
                "AdhocGroup",
                "UserGroup"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Group records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "description": "The unique identifier for a single User. The keyword `null` is not valid for this field. The list will be filtered to include only the Group records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "operationId": "Group#create",
        "summary": "Create a new Group",
        "description": "Outlines the parameters and data fields used when creating a new Group",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Group_createBody"
        }
      }
    },
    "/groups/{id}.json": {
      "get": {
        "tags": [
          "Groups"
        ],
        "operationId": "Group#show",
        "summary": "Return the data for a single Group",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Group",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Group.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Groups"
        ],
        "operationId": "Group#update",
        "summary": "Update a single Group",
        "description": "Outlines the parameters and data fields used when updating a single Group",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Group.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Group_createBody"
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "operationId": "Group#destroy",
        "summary": "Delete a single Group",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Group",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Group.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/import_details/{id}/preview.json": {
      "get": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#preview",
        "summary": "Preview first record of an ImportDetail",
        "description": "Expected response formats are:\n * [Activity](#operation/Activity#show)\n * [CalendarEntry](#operation/CalendarEntry#show)\n * [Contact](#operation/Contact#show)\n * [Matter](#operation/Matter#show)\n * [Note](#operation/Note#show)\n * [Relationship](#operation/Relationship#show)\n * [Task](#operation/Task#show)\n\nThis action does not support bulk actions.\n",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the Import",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response format dependent on import type"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/import_details/{id}/start.json": {
      "patch": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#start",
        "summary": "Start the ImportDetail",
        "description": "This action does not support bulk actions",
        "parameters": [
          {
            "name": "id",
            "description": "The unique identifier for the ImportDetail.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/import_details/{id}/stop.json": {
      "patch": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#stop",
        "summary": "Stop the ImportDetail",
        "description": "This action does not support bulk actions",
        "parameters": [
          {
            "name": "id",
            "description": "The unique identifier for the ImportDetail.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/import_details/{id}/undo.json": {
      "patch": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#undo",
        "summary": "Undo the ImportDetail",
        "description": "This action does not support bulk actions",
        "parameters": [
          {
            "name": "id",
            "description": "The unique identifier for the ImportDetail.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/import_details/{id}.json": {
      "delete": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#destroy",
        "summary": "Delete a single ImportDetail",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single ImportDetail",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ImportDetail.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#show",
        "summary": "Return the data for a single ImportDetail",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ImportDetail",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ImportDetail.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDetailShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#update",
        "summary": "Update a single ImportDetail",
        "description": "Outlines the parameters and data fields used when updating a single ImportDetail",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ImportDetail.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDetailShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/ImportDetail_update"
        }
      }
    },
    "/import_details/{id}/download_errors.json": {
      "get": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#download_errors",
        "summary": "Download error file of an ImportDetail",
        "description": "This action does not support bulk actions. Error file is only available after an import has been completed.",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the Import",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dependent on import type, currently only CSV is supported."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/import_details.json": {
      "patch": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#update",
        "summary": "Update a single ImportDetail",
        "description": "Outlines the parameters and data fields used when updating a single ImportDetail",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the ImportDetail.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDetailShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/ImportDetail_update"
        }
      },
      "get": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#index",
        "summary": "Return the data for all ImportDetails",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ImportDetails",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of ImportDetail records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDetailList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Import Details"
        ],
        "operationId": "ImportDetail#create",
        "summary": "Create a new ImportDetail",
        "description": "Outlines the parameters and data fields used when creating a new ImportDetail",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDetailShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "data[file]": {
                    "description": "The ImportDetail file.",
                    "type": "string",
                    "format": "binary"
                  },
                  "data[file_type]": {
                    "description": "The file type of an ImportDetail.",
                    "type": "string",
                    "enum": [
                      "csv",
                      "ical",
                      "vcard"
                    ]
                  },
                  "data[import_mappings][]": {
                    "description": "An array of hashes where each hash specifies how to map CSV columns to valid fields in Clio.",
                    "type": "string"
                  },
                  "data[importer_type]": {
                    "description": "The importer type of an ImportDetail.",
                    "type": "string",
                    "enum": [
                      "contact",
                      "note",
                      "matter",
                      "activity",
                      "task",
                      "relationship",
                      "calendar_entry",
                      "custom_field",
                      "document"
                    ]
                  },
                  "data[mapping_file]": {
                    "description": "A JSON file consisting of an array of hashes where each hash specifies how to map CSV columns to valid fields in Clio.  This parameter will take precedence over the import_mappings parameter.",
                    "type": "string",
                    "format": "binary"
                  },
                  "data[source]": {
                    "description": "The source of an ImportDetail.",
                    "type": "string",
                    "enum": [
                      "custom"
                    ]
                  }
                },
                "required": [
                  "data[file]",
                  "data[file_type]",
                  "data[importer_type]",
                  "data[source]"
                ]
              }
            }
          }
        }
      }
    },
    "/interest_charges.json": {
      "get": {
        "tags": [
          "Interest Charges"
        ],
        "operationId": "InterestCharge#index",
        "summary": "Return the data for all InterestCharges",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all InterestCharges",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bill_id",
            "description": "The unique identifier for a single Bill. The keyword `null` is not valid for this field. The list will be filtered to include only the InterestCharge records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "exclude_ids[]",
            "description": "Array containing *InterestCharge* identifiers that should be excluded from the query.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of InterestCharge records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterestChargeList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/interest_charges/{id}.json": {
      "delete": {
        "tags": [
          "Interest Charges"
        ],
        "operationId": "InterestCharge#destroy",
        "summary": "Delete a single InterestCharge",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single InterestCharge",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the InterestCharge.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/line_items/events.json": {
      "get": {
        "tags": [
          "Line Items"
        ],
        "operationId": "LineItem#events",
        "summary": "Return the data for LineItems events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for LineItems events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of LineItem records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/line_items.json": {
      "get": {
        "tags": [
          "Line Items"
        ],
        "operationId": "LineItem#index",
        "summary": "Return the data for all LineItems",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all LineItems",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activity_id",
            "description": "The unique identifier for a single Activity. Use the keyword `null` to match those without a LineItem. The list will be filtered to include only the LineItem records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bill_id",
            "description": "The unique identifier for a single Bill. The keyword `null` is not valid for this field. The list will be filtered to include only the LineItem records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "display",
            "description": "Set this flag to true to return only LineItems displayed on the bill.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exclude_ids[]",
            "description": "Array containing LineItem identifiers that should be excluded from the query.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_ordering",
            "description": "Filters LineItem records to match given group ordering.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter LineItem records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "kind",
            "description": "The kind of LineItem.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of LineItem records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a LineItem. The list will be filtered to include only the LineItem records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `description` or `note` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/line_items/{id}.json": {
      "patch": {
        "tags": [
          "Line Items"
        ],
        "operationId": "LineItem#update",
        "summary": "Update a single LineItem",
        "description": "Outlines the parameters and data fields used when updating a single LineItem",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the LineItem.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Activity associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "bill": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Bill associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The LineItem date."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the LineItem."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount rate for the LineItem."
                          },
                          "type": {
                            "type": "boolean",
                            "description": "Discount type. This should be set to one of: 'percentage' or 'money'."
                          }
                        }
                      },
                      "group_ordering": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The LineItem group ordering."
                      },
                      "kind": {
                        "enum": [
                          "Expense",
                          "Service",
                          "Product"
                        ],
                        "type": "string",
                        "description": "The kind of line_item."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The note attached to the LineItem."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the LineItem."
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "Quantity of the LineItem."
                      },
                      "secondary_taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem is secondary taxable."
                      },
                      "taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem taxable."
                      },
                      "update_original_record": {
                        "type": "boolean",
                        "description": "Whether the associated activity will be updated."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Activity associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "bill": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Bill associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The LineItem date."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the LineItem."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount rate for the LineItem."
                          },
                          "type": {
                            "type": "boolean",
                            "description": "Discount type. This should be set to one of: 'percentage' or 'money'."
                          }
                        }
                      },
                      "group_ordering": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The LineItem group ordering."
                      },
                      "kind": {
                        "enum": [
                          "Expense",
                          "Service",
                          "Product"
                        ],
                        "type": "string",
                        "description": "The kind of line_item."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The note attached to the LineItem."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the LineItem."
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "Quantity of the LineItem."
                      },
                      "secondary_taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem is secondary taxable."
                      },
                      "taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem taxable."
                      },
                      "update_original_record": {
                        "type": "boolean",
                        "description": "Whether the associated activity will be updated."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Activity associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "bill": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Bill associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The LineItem date."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the LineItem."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount rate for the LineItem."
                          },
                          "type": {
                            "type": "boolean",
                            "description": "Discount type. This should be set to one of: 'percentage' or 'money'."
                          }
                        }
                      },
                      "group_ordering": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The LineItem group ordering."
                      },
                      "kind": {
                        "enum": [
                          "Expense",
                          "Service",
                          "Product"
                        ],
                        "type": "string",
                        "description": "The kind of line_item."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The note attached to the LineItem."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the LineItem."
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "Quantity of the LineItem."
                      },
                      "secondary_taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem is secondary taxable."
                      },
                      "taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem taxable."
                      },
                      "update_original_record": {
                        "type": "boolean",
                        "description": "Whether the associated activity will be updated."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Line Items"
        ],
        "operationId": "LineItem#destroy",
        "summary": "Delete a single LineItem",
        "description": "A LineItem can not be deleted if it's Bill is not editable",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the LineItem.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/log_entries.json": {
      "get": {
        "tags": [
          "Log Entries"
        ],
        "operationId": "LogEntry#index",
        "summary": "Return the data for all LogEntries",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all LogEntries",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of LogEntry records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the LogEntry records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "accessed_at(asc)",
                "accessed_at(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/matters/events.json": {
      "get": {
        "tags": [
          "Matters"
        ],
        "operationId": "Matter#events",
        "summary": "Return the data for Matters events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Matters events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Matter records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatterListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/matters.json": {
      "get": {
        "tags": [
          "Matters"
        ],
        "operationId": "Matter#index",
        "summary": "Return the data for all Matters",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Matters",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "billable",
            "description": "Filter Matter records to those which are billable.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "client_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Matter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "close_date",
            "description": "Filter Matter records by the close date.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "\">DATE\",",
                "\">=DATE\",",
                "\"=DATE\",",
                "\"<=DATE\",",
                "\"<DATE\",",
                "\"an",
                "array",
                "of",
                "the",
                "preceding",
                "operators\""
              ]
            }
          },
          {
            "name": "created_since",
            "description": "Filter Matter records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "custom_field_ids[]",
            "description": "Filter Matter's custom_field_values to only include values for the given custom field unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "custom_field_values",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_id",
            "description": "The unique identifier for a single Group. The keyword `null` is not valid for this field. The list will be filtered to include only the Matter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Matter records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Matter records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "open_date",
            "description": "Filter Matter records by the open date.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "\">DATE\",",
                "\">=DATE\",",
                "\"=DATE\",",
                "\"<=DATE\",",
                "\"<DATE\",",
                "\"an",
                "array",
                "of",
                "the",
                "preceding",
                "operators\""
              ]
            }
          },
          {
            "name": "order",
            "description": "Orders the Matter records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "display_number(asc)",
                "display_number(desc)",
                "custom_number(asc)",
                "custom_number(desc)",
                "id(asc)",
                "id(desc)",
                "client.name(asc)",
                "client.name(desc)",
                "open_date(asc)",
                "open_date(desc)",
                "practice_area.name(asc)",
                "practice_area.name(desc)",
                "responsible_attorney.name(asc)",
                "responsible_attorney.name(desc)",
                "close_date(asc)",
                "close_date(desc)",
                "pending_date(asc)",
                "pending_date(desc)",
                "updated_at(asc)",
                "updated_at(desc)",
                "created_at(asc)",
                "created_at(desc)",
                "statute_of_limitations.due_at(asc)",
                "statute_of_limitations.due_at(desc)",
                "originating_attorney.name(asc)",
                "originating_attorney.name(desc)"
              ]
            }
          },
          {
            "name": "originating_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Matter. The list will be filtered to include only the Matter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pending_date",
            "description": "Filter Matter records by the pending date.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "\">DATE\",",
                "\">=DATE\",",
                "\"=DATE\",",
                "\"<=DATE\",",
                "\"<DATE\",",
                "\"an",
                "array",
                "of",
                "the",
                "preceding",
                "operators\""
              ]
            }
          },
          {
            "name": "practice_area_id",
            "description": "The unique identifier for a single PracticeArea. The keyword `null` is not valid for this field. The list will be filtered to include only the Matter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `display_number`, `number` or `description` matching a given string, as well as the `first_name`, `last_name` or `name` of the associated client.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Matter. The list will be filtered to include only the Matter records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "description": "Filter Matter records to those with a given status. It accepts comma-separated statuses, e.g. `open,pending`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "closed",
                "pending"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Matter records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatterList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Matters"
        ],
        "operationId": "Matter#create",
        "summary": "Create a new Matter",
        "description": "Outlines the parameters and data fields used when creating a new Matter",
        "parameters": [
          {
            "name": "custom_field_ids[]",
            "description": "Filter Matter's custom_field_values to only include values for the given custom field unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatterShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "default": true,
                        "type": "boolean",
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "type": "string",
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              },
                              "required": [
                                "user",
                                "rate"
                              ]
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "description",
                            "contact"
                          ]
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "status": {
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "type": "string",
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "type": "string",
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "duration_value",
                                "duration_unit",
                                "notification_method"
                              ]
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          },
                          "required": [
                            "task_template_list"
                          ]
                        }
                      }
                    },
                    "required": [
                      "client",
                      "description"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "default": true,
                        "type": "boolean",
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "type": "string",
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              },
                              "required": [
                                "user",
                                "rate"
                              ]
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "description",
                            "contact"
                          ]
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "status": {
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "type": "string",
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "type": "string",
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "duration_value",
                                "duration_unit",
                                "notification_method"
                              ]
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          },
                          "required": [
                            "task_template_list"
                          ]
                        }
                      }
                    },
                    "required": [
                      "client",
                      "description"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "default": true,
                        "type": "boolean",
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "type": "string",
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              },
                              "required": [
                                "user",
                                "rate"
                              ]
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "description",
                            "contact"
                          ]
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "status": {
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "type": "string",
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "type": "string",
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "duration_value",
                                "duration_unit",
                                "notification_method"
                              ]
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          },
                          "required": [
                            "task_template_list"
                          ]
                        }
                      }
                    },
                    "required": [
                      "client",
                      "description"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/matters/{id}.json": {
      "get": {
        "tags": [
          "Matters"
        ],
        "operationId": "Matter#show",
        "summary": "Return the data for a single Matter",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Matter",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_ids[]",
            "description": "Filter Matter's custom_field_values to only include values for the given custom field unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Matter.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatterShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Matters"
        ],
        "operationId": "Matter#update",
        "summary": "Update a single Matter",
        "description": "Outlines the parameters and data fields used when updating a single Matter",
        "parameters": [
          {
            "name": "custom_field_ids[]",
            "description": "Filter Matter's custom_field_values to only include values for the given custom field unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Matter.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatterShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "default": true,
                        "type": "boolean",
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "type": "string",
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Rate associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Rate is present, the Rate is deleted from the Matter."
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Relationship associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Relationship is present, the Relationship is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "status": {
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "type": "string",
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "type": "string",
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Reminder associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Reminder is present, the Reminder is deleted from the Matter."
                                }
                              }
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "default": true,
                        "type": "boolean",
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "type": "string",
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Rate associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Rate is present, the Rate is deleted from the Matter."
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Relationship associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Relationship is present, the Relationship is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "status": {
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "type": "string",
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "type": "string",
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Reminder associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Reminder is present, the Reminder is deleted from the Matter."
                                }
                              }
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "default": true,
                        "type": "boolean",
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "type": "string",
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Rate associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Rate is present, the Rate is deleted from the Matter."
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Relationship associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Relationship is present, the Relationship is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "status": {
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "type": "string",
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "type": "string",
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single Reminder associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Reminder is present, the Reminder is deleted from the Matter."
                                }
                              }
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Matters"
        ],
        "operationId": "Matter#destroy",
        "summary": "Delete a single Matter",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Matter",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Matter.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/notes/events.json": {
      "get": {
        "tags": [
          "Notes"
        ],
        "operationId": "Note#events",
        "summary": "Return the data for Notes events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Notes events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Note records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/notes.json": {
      "get": {
        "tags": [
          "Notes"
        ],
        "operationId": "Note#index",
        "summary": "Return the data for all Notes",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Notes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contact_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Note records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Note records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_time_entries",
            "description": "Filter Note records to those with or without associated time entries.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Note records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Note records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the Note records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Note records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "date(asc)",
                "date(desc)",
                "subject(asc)",
                "subject(desc)",
                "detail(asc)",
                "detail(desc)",
                "author(asc)",
                "author(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search across note subject and detail.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Filter Note records to those of the specified type.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Matter",
                "Contact"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Note records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "operationId": "Note#create",
        "summary": "Create a new Note",
        "description": "Outlines the parameters and data fields used when creating a new Note",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Note. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Note. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      },
                      "type": {
                        "enum": [
                          "Matter",
                          "Contact"
                        ],
                        "type": "string",
                        "description": "Note type."
                      }
                    },
                    "required": [
                      "contact",
                      "type"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Note. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Note. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      },
                      "type": {
                        "enum": [
                          "Matter",
                          "Contact"
                        ],
                        "type": "string",
                        "description": "Note type."
                      }
                    },
                    "required": [
                      "contact",
                      "type"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Note. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Note. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      },
                      "type": {
                        "enum": [
                          "Matter",
                          "Contact"
                        ],
                        "type": "string",
                        "description": "Note type."
                      }
                    },
                    "required": [
                      "contact",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/notes/{id}.json": {
      "get": {
        "tags": [
          "Notes"
        ],
        "operationId": "Note#show",
        "summary": "Return the data for a single Note",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Note",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Note.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Notes"
        ],
        "operationId": "Note#update",
        "summary": "Update a single Note",
        "description": "Outlines the parameters and data fields used when updating a single Note",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Note.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "operationId": "Note#destroy",
        "summary": "Delete a single Note",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Note",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Note.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/practice_areas/events.json": {
      "get": {
        "tags": [
          "Practice Areas"
        ],
        "operationId": "PracticeArea#events",
        "summary": "Return the data for PracticeAreas events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for PracticeAreas events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of PracticeArea records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PracticeAreaListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/practice_areas.json": {
      "get": {
        "tags": [
          "Practice Areas"
        ],
        "operationId": "PracticeArea#index",
        "summary": "Return the data for all PracticeAreas",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all PracticeAreas",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "code",
            "description": "Filter PracticeArea records to those that match the given code.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "description": "Filter PracticeArea records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter PracticeArea records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of PracticeArea records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "description": "Filter PracticeArea records to those that match the given name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "description": "Orders the PracticeArea records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "code(asc)",
                "code(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter PracticeArea records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PracticeAreaList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Practice Areas"
        ],
        "operationId": "PracticeArea#create",
        "summary": "Create a new PracticeArea",
        "description": "Outlines the parameters and data fields used when creating a new PracticeArea",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PracticeAreaShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PracticeArea_createBody"
        }
      }
    },
    "/practice_areas/{id}.json": {
      "get": {
        "tags": [
          "Practice Areas"
        ],
        "operationId": "PracticeArea#show",
        "summary": "Return the data for a single PracticeArea",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single PracticeArea",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the PracticeArea.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PracticeAreaShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Practice Areas"
        ],
        "operationId": "PracticeArea#update",
        "summary": "Update a single PracticeArea",
        "description": "Outlines the parameters and data fields used when updating a single PracticeArea",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the PracticeArea.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PracticeAreaShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PracticeArea_createBody"
        }
      },
      "delete": {
        "tags": [
          "Practice Areas"
        ],
        "operationId": "PracticeArea#destroy",
        "summary": "Delete a single PracticeArea",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single PracticeArea",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the PracticeArea.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/relationships.json": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "operationId": "Relationship#index",
        "summary": "Return the data for all Relationships",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Relationships",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contact_id",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Relationship records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Relationship records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Relationship records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Relationship records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the Relationship records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Relationship records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Relationships"
        ],
        "operationId": "Relationship#create",
        "summary": "Create a new Relationship",
        "description": "Outlines the parameters and data fields used when creating a new Relationship",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Relationship_createBody"
        }
      }
    },
    "/relationships/{id}.json": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "operationId": "Relationship#show",
        "summary": "Return the data for a single Relationship",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Relationship",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Relationship.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Relationships"
        ],
        "operationId": "Relationship#update",
        "summary": "Update a single Relationship",
        "description": "Outlines the parameters and data fields used when updating a single Relationship",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Relationship.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Relationship_createBody"
        }
      },
      "delete": {
        "tags": [
          "Relationships"
        ],
        "operationId": "Relationship#destroy",
        "summary": "Delete a single Relationship",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Relationship",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Relationship.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reminders.json": {
      "get": {
        "tags": [
          "Reminders"
        ],
        "operationId": "Reminder#index",
        "summary": "Return the data for all Reminders",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Reminders",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Reminder records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "notification_method_id",
            "description": "The unique identifier for a single NotificationMethod. The keyword `null` is not valid for this field. The list will be filtered to include only the Reminder records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Reminder records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "next_delivery_at(asc)",
                "next_delivery_at(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "description": "Filter Reminder records to those with a given state.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "initializing",
                "scheduling",
                "rescheduling",
                "scheduled",
                "attempting_delivery",
                "delivery_failed",
                "delivered",
                "delivery_skipped",
                "invalid_user"
              ]
            }
          },
          {
            "name": "subject_id",
            "description": "The unique identifier for a single CalendarEntry or Task. The keyword `null` is not valid for this field. The list will be filtered to include only the Reminder records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subject_type",
            "description": "Filter Reminder records to those of a given subject type, required if using subject_id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "calendar_entry",
                "task"
              ]
            }
          },
          {
            "name": "user_id",
            "description": "The unique identifier for a single User. The keyword `null` is not valid for this field. The list will be filtered to include only the Reminder records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reminders"
        ],
        "operationId": "Reminder#create",
        "summary": "Create a new Reminder",
        "description": "Outlines the parameters and data fields used when creating a new Reminder",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "type": "string",
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single CalendarEntry and Task associated with the Reminder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "CalendarEntry",
                              "Task"
                            ],
                            "type": "string",
                            "description": "Model type of the Subject."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "subject",
                      "notification_method"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "type": "string",
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single CalendarEntry and Task associated with the Reminder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "CalendarEntry",
                              "Task"
                            ],
                            "type": "string",
                            "description": "Model type of the Subject."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "subject",
                      "notification_method"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "type": "string",
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single CalendarEntry and Task associated with the Reminder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "CalendarEntry",
                              "Task"
                            ],
                            "type": "string",
                            "description": "Model type of the Subject."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "subject",
                      "notification_method"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/reminders/{id}.json": {
      "get": {
        "tags": [
          "Reminders"
        ],
        "operationId": "Reminder#show",
        "summary": "Return the data for a single Reminder",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Reminder",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Reminder.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Reminders"
        ],
        "operationId": "Reminder#update",
        "summary": "Update a single Reminder",
        "description": "Outlines the parameters and data fields used when updating a single Reminder",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Reminder.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "type": "string",
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "type": "string",
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "type": "string",
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Reminders"
        ],
        "operationId": "Reminder#destroy",
        "summary": "Delete a single Reminder",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Reminder",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Reminder.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{id}/download.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Report#download",
        "summary": "Download the completed Report",
        "description": "Download the completed Report",
        "parameters": [
          {
            "name": "id",
            "description": "The unique identifier for the Report.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reports.json": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "Report#create",
        "summary": "Create a new Report",
        "description": "Outlines the parameters and data fields used when creating a new Report",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "format": {
                        "enum": [
                          "pdf",
                          "csv",
                          "html",
                          "zip"
                        ],
                        "type": "string",
                        "description": "What format the Report will be generated in."
                      },
                      "kind": {
                        "enum": [
                          "revenue",
                          "fee_allocation",
                          "trust_management",
                          "accounts_receivable_aging",
                          "finance_mrr",
                          "finance_purchases",
                          "general_ledger",
                          "law_society_of_alberta"
                        ],
                        "type": "string",
                        "description": "What kind of Report will be generated."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "year": {
                        "type": "string",
                        "description": "Filters Report data by year. Sets start_date and end_date. (Expects a year)."
                      }
                    },
                    "required": [
                      "format",
                      "kind"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "format": {
                        "enum": [
                          "pdf",
                          "csv",
                          "html",
                          "zip"
                        ],
                        "type": "string",
                        "description": "What format the Report will be generated in."
                      },
                      "kind": {
                        "enum": [
                          "revenue",
                          "fee_allocation",
                          "trust_management",
                          "accounts_receivable_aging",
                          "finance_mrr",
                          "finance_purchases",
                          "general_ledger",
                          "law_society_of_alberta"
                        ],
                        "type": "string",
                        "description": "What kind of Report will be generated."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "year": {
                        "type": "string",
                        "description": "Filters Report data by year. Sets start_date and end_date. (Expects a year)."
                      }
                    },
                    "required": [
                      "format",
                      "kind"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Contact associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "format": {
                        "enum": [
                          "pdf",
                          "csv",
                          "html",
                          "zip"
                        ],
                        "type": "string",
                        "description": "What format the Report will be generated in."
                      },
                      "kind": {
                        "enum": [
                          "revenue",
                          "fee_allocation",
                          "trust_management",
                          "accounts_receivable_aging",
                          "finance_mrr",
                          "finance_purchases",
                          "general_ledger",
                          "law_society_of_alberta"
                        ],
                        "type": "string",
                        "description": "What kind of Report will be generated."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "year": {
                        "type": "string",
                        "description": "Filters Report data by year. Sets start_date and end_date. (Expects a year)."
                      }
                    },
                    "required": [
                      "format",
                      "kind"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/reports/{id}.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Report#show",
        "summary": "Return the data for a single Report",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Report",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Report.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/settings/billing.json": {
      "get": {
        "tags": [
          "Billing Settings"
        ],
        "operationId": "BillingSetting#show",
        "summary": "Return the billing settings",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single BillingSetting",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "description": "Duration string for time rounding, conforming to the Chronic date parser. For example: '3h' or '2:15'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingSettingShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/settings/text_snippets/events.json": {
      "get": {
        "tags": [
          "Text Snippets"
        ],
        "operationId": "TextSnippet#events",
        "summary": "Return the data for TextSnippets events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for TextSnippets events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of TextSnippet records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextSnippetListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/settings/text_snippets.json": {
      "get": {
        "tags": [
          "Text Snippets"
        ],
        "operationId": "TextSnippet#index",
        "summary": "Return all text snippets",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TextSnippets",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter TextSnippet records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter TextSnippet records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of TextSnippet records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the TextSnippet records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "snippet(asc)",
                "snippet(desc)",
                "phrase(asc)",
                "phrase(desc)",
                "whole_word(asc)",
                "whole_word(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `snippet` or `phrase` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter TextSnippet records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextSnippetList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Text Snippets"
        ],
        "operationId": "TextSnippet#create",
        "summary": "Create a text snippet",
        "description": "Outlines the parameters and data fields used when creating a new TextSnippet",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextSnippetShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    },
                    "required": [
                      "snippet",
                      "phrase"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    },
                    "required": [
                      "snippet",
                      "phrase"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    },
                    "required": [
                      "snippet",
                      "phrase"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/settings/text_snippets/{id}.json": {
      "get": {
        "tags": [
          "Text Snippets"
        ],
        "operationId": "TextSnippet#show",
        "summary": "Return the data for the text snippet",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single TextSnippet",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TextSnippet.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextSnippetShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Text Snippets"
        ],
        "operationId": "TextSnippet#update",
        "summary": "Update a text snippet",
        "description": "Outlines the parameters and data fields used when updating a single TextSnippet",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TextSnippet.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextSnippetShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Text Snippets"
        ],
        "operationId": "TextSnippet#destroy",
        "summary": "Destroy a text snippet",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single TextSnippet",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TextSnippet.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tasks.json": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task#index",
        "summary": "Return the data for all Tasks",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Tasks",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "assignee_id",
            "description": "The unique identifier for a single User or Contact. Use the keyword `null` to match those without a Task. The list will be filtered to include only the Task records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "assignee_type",
            "description": "Filter Task records to those with a specific assignee. Must be passed if filtering by assignee.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "user",
                "contact"
              ]
            }
          },
          {
            "name": "assigner_id",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Task. The list will be filtered to include only the Task records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Task records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "due_at_from",
            "description": "Start of date range when querying by due_at in a range. (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "due_at_to",
            "description": "End of date range when querying by due_at in a range. (Expects an ISO-8601 date).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Task records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Task records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Task. The list will be filtered to include only the Task records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Task records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)",
                "priority(asc)",
                "priority(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "description": "Filter Task records to those with the given priority.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "high",
                "normal",
                "low"
              ]
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "Filter Task records to those with the given status. Users without advanced tasks enabled may only specify 'complete' or 'pending'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                "pending",
                "in_progress",
                "in_review",
                "complete"
              ]
            }
          },
          {
            "name": "statute_of_limitations",
            "description": "Filter Task records to those which are a statute of limitations or not.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "task_type_id",
            "description": "The unique identifier for a single TaskType. Use the keyword `null` to match those without a Task. The list will be filtered to include only the Task records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Task records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task#create",
        "summary": "Create a new Task",
        "description": "Outlines the parameters and data fields used when creating a new Task",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "type": "string",
                            "description": "Model type of the assignee."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_assignee": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assignee on creation."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "default": "pending",
                        "type": "string",
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "statute_of_limitations": {
                        "type": "boolean",
                        "description": "Whether or not the Task should be a statute of limitations."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "assignee"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "type": "string",
                            "description": "Model type of the assignee."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_assignee": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assignee on creation."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "default": "pending",
                        "type": "string",
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "statute_of_limitations": {
                        "type": "boolean",
                        "description": "Whether or not the Task should be a statute of limitations."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "assignee"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "type": "string",
                            "description": "Model type of the assignee."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_assignee": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assignee on creation."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "default": "pending",
                        "type": "string",
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "statute_of_limitations": {
                        "type": "boolean",
                        "description": "Whether or not the Task should be a statute of limitations."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "assignee"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/tasks/{id}.json": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task#show",
        "summary": "Return the data for a single Task",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Task",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Task.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task#update",
        "summary": "Update a single Task",
        "description": "Outlines the parameters and data fields used when updating a single Task",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Task.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "type": "string",
                            "description": "Model type of the assignee."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "default": "pending",
                        "type": "string",
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "type": "string",
                            "description": "Model type of the assignee."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "default": "pending",
                        "type": "string",
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "type": "string",
                            "description": "Model type of the assignee."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "default": "pending",
                        "type": "string",
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "operationId": "Task#destroy",
        "summary": "Delete a single Task",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Task",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Task.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/task_calendars.json": {
      "patch": {
        "tags": [
          "Calendar Visibilities"
        ],
        "operationId": "CalendarVisibility#update",
        "summary": "Update a single CalendarVisibility",
        "description": "Outlines the parameters and data fields used when updating a single CalendarVisibility",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CalendarVisibility.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarVisibilityShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/CalendarVisibility_updateBody"
        }
      },
      "get": {
        "tags": [
          "Calendar Visibilities"
        ],
        "operationId": "CalendarVisibility#index",
        "summary": "Return the data for all CalendarVisibilities",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CalendarVisibilities",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of CalendarVisibility records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarVisibilityList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/task_calendars/{id}.json": {
      "get": {
        "tags": [
          "Calendar Visibilities"
        ],
        "operationId": "CalendarVisibility#show",
        "summary": "Return the data for a single CalendarVisibility",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CalendarVisibility",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CalendarVisibility.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarVisibilityShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Calendar Visibilities"
        ],
        "operationId": "CalendarVisibility#update",
        "summary": "Update a single CalendarVisibility",
        "description": "Outlines the parameters and data fields used when updating a single CalendarVisibility",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the CalendarVisibility.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarVisibilityShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/CalendarVisibility_updateBody"
        }
      }
    },
    "/task_templates.json": {
      "get": {
        "tags": [
          "Task Templates"
        ],
        "operationId": "TaskTemplate#index",
        "summary": "Return the data for all TaskTemplates",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TaskTemplates",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of TaskTemplate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the TaskTemplate records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "priority(asc)",
                "priority(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "description": "Filter TaskTemplate records to those with the given priority.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "high",
                "normal",
                "low"
              ]
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "task_template_list_id",
            "description": "The unique identifier for a single TaskTemplateList. The keyword `null` is not valid for this field. The list will be filtered to include only the TaskTemplate records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task Templates"
        ],
        "operationId": "TaskTemplate#create",
        "summary": "Create a new TaskTemplate",
        "description": "Outlines the parameters and data fields used when creating a new TaskTemplate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Longer description for the TaskTemplate."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            }
                          },
                          "required": [
                            "duration_value",
                            "duration_unit"
                          ]
                        }
                      },
                      "task_template_list": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Longer description for the TaskTemplate."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            }
                          },
                          "required": [
                            "duration_value",
                            "duration_unit"
                          ]
                        }
                      },
                      "task_template_list": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Longer description for the TaskTemplate."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            }
                          },
                          "required": [
                            "duration_value",
                            "duration_unit"
                          ]
                        }
                      },
                      "task_template_list": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/task_templates/{id}.json": {
      "get": {
        "tags": [
          "Task Templates"
        ],
        "operationId": "TaskTemplate#show",
        "summary": "Return the data for a single TaskTemplate",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single TaskTemplate",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TaskTemplate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Task Templates"
        ],
        "operationId": "TaskTemplate#update",
        "summary": "Update a single TaskTemplate",
        "description": "Outlines the parameters and data fields used when updating a single TaskTemplate",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TaskTemplate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Longer description for the TaskTemplate."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ReminderTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ReminderTemplate is present, the ReminderTemplate is deleted from the TaskTemplate."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Longer description for the TaskTemplate."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ReminderTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ReminderTemplate is present, the ReminderTemplate is deleted from the TaskTemplate."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Longer description for the TaskTemplate."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "default": "Normal",
                        "type": "string",
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ReminderTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ReminderTemplate is present, the ReminderTemplate is deleted from the TaskTemplate."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Task Templates"
        ],
        "operationId": "TaskTemplate#destroy",
        "summary": "Delete a single TaskTemplate",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single TaskTemplate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TaskTemplate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/task_template_lists.json": {
      "get": {
        "tags": [
          "Task Template Lists"
        ],
        "operationId": "TaskTemplateList#index",
        "summary": "Return the data for all TaskTemplateLists",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TaskTemplateLists",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "empty",
            "description": "Filter TaskTemplateList records to those that either contain at least one task template or contain none.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of TaskTemplateList records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the TaskTemplateList records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "practice_area.name(asc)",
                "practice_area.name(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "practice_area_id",
            "description": "The unique identifier for a single PracticeArea. Use the keyword `null` to match those without a TaskTemplateList. The list will be filtered to include only the TaskTemplateList records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateListList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task Template Lists"
        ],
        "operationId": "TaskTemplateList#create",
        "summary": "Create a new TaskTemplateList",
        "description": "Outlines the parameters and data fields used when creating a new TaskTemplateList",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateListShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "description"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "description"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "description"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/task_template_lists/{id}.json": {
      "get": {
        "tags": [
          "Task Template Lists"
        ],
        "operationId": "TaskTemplateList#show",
        "summary": "Return the data for a single TaskTemplateList",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single TaskTemplateList",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TaskTemplateList.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateListShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Task Template Lists"
        ],
        "operationId": "TaskTemplateList#update",
        "summary": "Update a single TaskTemplateList",
        "description": "Outlines the parameters and data fields used when updating a single TaskTemplateList",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TaskTemplateList.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateListShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Task Template Lists"
        ],
        "operationId": "TaskTemplateList#destroy",
        "summary": "Delete a single TaskTemplateList",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single TaskTemplateList",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TaskTemplateList.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/task_types.json": {
      "get": {
        "tags": [
          "Task Types"
        ],
        "operationId": "TaskType#index",
        "summary": "Return the data for all TaskTypes",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TaskTypes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of TaskType records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "description": "Filter TaskType records to those with the given name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "description": "Orders the TaskType records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTypeList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task Types"
        ],
        "operationId": "TaskType#create",
        "summary": "Create a new TaskType",
        "description": "Outlines the parameters and data fields used when creating a new TaskType",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTypeShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/task_types/{id}.json": {
      "get": {
        "tags": [
          "Task Types"
        ],
        "operationId": "TaskType#show",
        "summary": "Return the data for a single TaskType",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single TaskType",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TaskType.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTypeShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Task Types"
        ],
        "operationId": "TaskType#update",
        "summary": "Update a single TaskType",
        "description": "Outlines the parameters and data fields used when updating a single TaskType",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TaskType.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTypeShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/timer.json": {
      "get": {
        "tags": [
          "Timers"
        ],
        "operationId": "Timer#show",
        "summary": "Return the data for a single Timer",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Timer",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimerShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timers"
        ],
        "operationId": "Timer#destroy",
        "summary": "Delete a single Timer",
        "description": "This action does not support bulk actions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timers"
        ],
        "operationId": "Timer#create",
        "summary": "Create a new Timer",
        "description": "This action does not support bulk actions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimerShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Activity associated with the Timer. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "activity"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Activity associated with the Timer. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "activity"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Activity associated with the Timer. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "activity"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/trust_line_items.json": {
      "get": {
        "tags": [
          "Trust Line Items"
        ],
        "operationId": "TrustLineItem#index",
        "summary": "Return the data for all TrustLineItems",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TrustLineItems",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bill_id",
            "description": "The unique identifier for a single Bill. The keyword `null` is not valid for this field. The list will be filtered to include only the TrustLineItem records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of TrustLineItem records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a TrustLineItem. The list will be filtered to include only the TrustLineItem records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustLineItemList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/trust_line_items/{id}.json": {
      "patch": {
        "tags": [
          "Trust Line Items"
        ],
        "operationId": "TrustLineItem#update",
        "summary": "Update a single TrustLineItem",
        "description": "Outlines the parameters and data fields used when updating a single TrustLineItem",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the TrustLineItem.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustLineItemShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the TrustLineItem. (Expects an ISO-8601 date)."
                      },
                      "note": {
                        "type": "string",
                        "description": "Note for the TrustLineItem."
                      },
                      "total": {
                        "type": "number",
                        "format": "double",
                        "description": "Total amount the TrustLineItem is for."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the TrustLineItem. (Expects an ISO-8601 date)."
                      },
                      "note": {
                        "type": "string",
                        "description": "Note for the TrustLineItem."
                      },
                      "total": {
                        "type": "number",
                        "format": "double",
                        "description": "Total amount the TrustLineItem is for."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the TrustLineItem. (Expects an ISO-8601 date)."
                      },
                      "note": {
                        "type": "string",
                        "description": "Note for the TrustLineItem."
                      },
                      "total": {
                        "type": "number",
                        "format": "double",
                        "description": "Total amount the TrustLineItem is for."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/trust_requests.json": {
      "post": {
        "tags": [
          "Trust Requests"
        ],
        "operationId": "TrustRequest#create",
        "summary": "Create a new TrustRequest",
        "description": "Outlines the parameters and data fields used when creating a new TrustRequest",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRequestShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "approved": {
                        "type": "boolean",
                        "description": "Whether or not the TrustRequest should be automatically approved."
                      },
                      "client_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The client_id associated to the TrustRequest"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is due (Expects an ISO-8601 date)."
                      },
                      "issue_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is issued (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The matter id associated to the TrustRequest"
                          },
                          "trust_amount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The matter level TrustRequest's amount"
                          },
                          "note": {
                            "type": "string",
                            "description": "The client level TrustRequest note"
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The client level TrustRequest note"
                      },
                      "trust_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The TrustRequest's amount"
                      },
                      "trust_type": {
                        "enum": [
                          "client",
                          "matter"
                        ],
                        "type": "string",
                        "description": "The type of TrustRequest"
                      }
                    },
                    "required": [
                      "trust_type",
                      "client_id",
                      "issue_date",
                      "due_date",
                      "approved",
                      "trust_amount"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "approved": {
                        "type": "boolean",
                        "description": "Whether or not the TrustRequest should be automatically approved."
                      },
                      "client_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The client_id associated to the TrustRequest"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is due (Expects an ISO-8601 date)."
                      },
                      "issue_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is issued (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The matter id associated to the TrustRequest"
                          },
                          "trust_amount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The matter level TrustRequest's amount"
                          },
                          "note": {
                            "type": "string",
                            "description": "The client level TrustRequest note"
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The client level TrustRequest note"
                      },
                      "trust_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The TrustRequest's amount"
                      },
                      "trust_type": {
                        "enum": [
                          "client",
                          "matter"
                        ],
                        "type": "string",
                        "description": "The type of TrustRequest"
                      }
                    },
                    "required": [
                      "trust_type",
                      "client_id",
                      "issue_date",
                      "due_date",
                      "approved",
                      "trust_amount"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "approved": {
                        "type": "boolean",
                        "description": "Whether or not the TrustRequest should be automatically approved."
                      },
                      "client_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The client_id associated to the TrustRequest"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is due (Expects an ISO-8601 date)."
                      },
                      "issue_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is issued (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The matter id associated to the TrustRequest"
                          },
                          "trust_amount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The matter level TrustRequest's amount"
                          },
                          "note": {
                            "type": "string",
                            "description": "The client level TrustRequest note"
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The client level TrustRequest note"
                      },
                      "trust_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The TrustRequest's amount"
                      },
                      "trust_type": {
                        "enum": [
                          "client",
                          "matter"
                        ],
                        "type": "string",
                        "description": "The type of TrustRequest"
                      }
                    },
                    "required": [
                      "trust_type",
                      "client_id",
                      "issue_date",
                      "due_date",
                      "approved",
                      "trust_amount"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/users/who_am_i.json": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "User#who_am_i",
        "summary": "Return the data for the current User",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single User",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/events.json": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "User#events",
        "summary": "Return the data for Users events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Users events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of User records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users.json": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "User#index",
        "summary": "Return the data for all Users",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Users",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter User records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "enabled",
            "description": "Filter User records to those that are enabled or disabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter User records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of User records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "description": "Filter User records to those with the given name.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "description": "Orders the User records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "email(asc)",
                "email(desc)",
                "enabled(asc)",
                "enabled(desc)",
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "first_name(asc)",
                "first_name(desc)",
                "last_name(asc)",
                "last_name(desc)",
                "subscription_type(asc)",
                "subscription_type(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "description": "Filter User records to those with a specific role.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "admin",
                "accounts",
                "billing",
                "reports"
              ]
            }
          },
          {
            "name": "subscription_type",
            "description": "Filter User records to those with a specific subscription type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "attorney",
                "nonattorney"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter User records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}.json": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "User#show",
        "summary": "Return the data for a single User",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single User",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the User.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/utbms/sets.json": {
      "get": {
        "tags": [
          "Utbms Sets"
        ],
        "operationId": "UtbmsSet#index",
        "summary": "Return the data for all the utbms sets",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all UtbmsSets",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of UtbmsSet records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the UtbmsSet records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtbmsSetList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/utbms/codes.json": {
      "get": {
        "tags": [
          "Utbms Codes"
        ],
        "operationId": "UtbmsCode#index",
        "summary": "Return the data for all UtbmsCodes",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all UtbmsCodes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of UtbmsCode records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the UtbmsCode records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)",
                "set(asc)",
                "set(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Filter UtbmsCode records to those of a given type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "UtbmsTask",
                "UtbmsActivity",
                "UtbmsExpense"
              ]
            }
          },
          {
            "name": "updated_since",
            "description": "Filter UtbmsCode records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "utbms_set_id",
            "description": "The unique identifier for a single UtbmsSet. Use the keyword `null` to match those without a UtbmsCode. The list will be filtered to include only the UtbmsCode records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtbmsCodeList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/utbms/codes/{id}.json": {
      "get": {
        "tags": [
          "Utbms Codes"
        ],
        "operationId": "UtbmsCode#show",
        "summary": "Return the data for a single UtbmsCode",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single UtbmsCode",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the UtbmsCode.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtbmsCodeShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks.json": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "operationId": "Webhook#index",
        "summary": "Return the data for all Webhooks",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Webhooks",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Webhook records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Webhook records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "operationId": "Webhook#create",
        "summary": "Create a new Webhook",
        "description": "Outlines the parameters and data fields used when creating a new Webhook",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "communication",
                          "contact",
                          "matter",
                          "task"
                        ],
                        "type": "string",
                        "description": "What model the Webhook is for."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    },
                    "required": [
                      "url",
                      "model",
                      "fields"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "communication",
                          "contact",
                          "matter",
                          "task"
                        ],
                        "type": "string",
                        "description": "What model the Webhook is for."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    },
                    "required": [
                      "url",
                      "model",
                      "fields"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "communication",
                          "contact",
                          "matter",
                          "task"
                        ],
                        "type": "string",
                        "description": "What model the Webhook is for."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    },
                    "required": [
                      "url",
                      "model",
                      "fields"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/webhooks/{id}.json": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "operationId": "Webhook#show",
        "summary": "Return the data for a single Webhook",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Webhook",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Webhook.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Webhooks"
        ],
        "operationId": "Webhook#update",
        "summary": "Update a single Webhook",
        "description": "Outlines the parameters and data fields used when updating a single Webhook",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Webhook.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "communication",
                          "contact",
                          "matter",
                          "task"
                        ],
                        "type": "string",
                        "description": "What model the Webhook is for."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "communication",
                          "contact",
                          "matter",
                          "task"
                        ],
                        "type": "string",
                        "description": "What model the Webhook is for."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "communication",
                          "contact",
                          "matter",
                          "task"
                        ],
                        "type": "string",
                        "description": "What model the Webhook is for."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "operationId": "Webhook#destroy",
        "summary": "Delete a single Webhook",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Webhook",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Webhook.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/document_archives/{id}/download.json": {
      "get": {
        "tags": [
          "Document Archives"
        ],
        "operationId": "DocumentArchive#download",
        "summary": "Download the DocumentArchive",
        "description": "Download the DocumentArchive",
        "parameters": [
          {
            "name": "id",
            "description": "The unique identifier for the DocumentArchive.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/document_archives.json": {
      "post": {
        "tags": [
          "Document Archives"
        ],
        "operationId": "DocumentArchive#create",
        "summary": "Create a new DocumentArchive",
        "description": "Outlines the parameters and data fields used when creating a new DocumentArchive",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentArchiveShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Document or Folder associated with the DocumentArchive. Use the keyword `null` to specify no association."
                            },
                            "type": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The type of the item to download"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "items"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Document or Folder associated with the DocumentArchive. Use the keyword `null` to specify no association."
                            },
                            "type": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The type of the item to download"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "items"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single Document or Folder associated with the DocumentArchive. Use the keyword `null` to specify no association."
                            },
                            "type": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The type of the item to download"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "items"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/document_archives/{id}.json": {
      "get": {
        "tags": [
          "Document Archives"
        ],
        "operationId": "DocumentArchive#show",
        "summary": "Return the data for a single DocumentArchive",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single DocumentArchive",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the DocumentArchive.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentArchiveShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/documents/{id}/download.json": {
      "get": {
        "tags": [
          "Documents"
        ],
        "operationId": "Document#download",
        "summary": "Download the Document",
        "description": "Download the Document",
        "parameters": [
          {
            "name": "document_version_id",
            "description": "The unique identifier for a DocumentVersion to be downloaded. Defaults to the latest.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Document.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/documents/events.json": {
      "get": {
        "tags": [
          "Documents"
        ],
        "operationId": "Document#events",
        "summary": "Return the data for Documents events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Documents events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Document records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/documents.json": {
      "get": {
        "tags": [
          "Documents"
        ],
        "operationId": "Document#index",
        "summary": "Return the data for all Documents",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Documents",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contact_id",
            "description": "The unique identifier for a single Contact. Use the keyword `null` to match those without a Document. The list will be filtered to include only the Document records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Document records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "document_category_id",
            "description": "The unique identifier for a single DocumentCategory. Use the keyword `null` to match those without a Document. The list will be filtered to include only the Document records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "external_property_name",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Document records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "include_deleted",
            "description": "Allow trashed Document record to be included.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Document records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Document. The list will be filtered to include only the Document records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Document records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching the given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_uncompleted",
            "description": "Allow Document record being uploaded to be included.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Document records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "operationId": "Document#create",
        "summary": "Create a new Document",
        "description": "Create a Document, or Create Document Version to an existing Document.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "content_type": {
                        "type": "string",
                        "description": "A standard MIME type describing the format of the object data. If the field is not specified, it is determined by the file extension."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "filename": {
                        "default": "name",
                        "type": "string",
                        "description": "Name of the original file."
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          },
                          "required": [
                            "part_number",
                            "content_length"
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "Document",
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          },
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier of the parent object."
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "content_type": {
                        "type": "string",
                        "description": "A standard MIME type describing the format of the object data. If the field is not specified, it is determined by the file extension."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "filename": {
                        "default": "name",
                        "type": "string",
                        "description": "Name of the original file."
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          },
                          "required": [
                            "part_number",
                            "content_length"
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "Document",
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          },
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier of the parent object."
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "content_type": {
                        "type": "string",
                        "description": "A standard MIME type describing the format of the object data. If the field is not specified, it is determined by the file extension."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "filename": {
                        "default": "name",
                        "type": "string",
                        "description": "Name of the original file."
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          },
                          "required": [
                            "part_number",
                            "content_length"
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "Document",
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          },
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier of the parent object."
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/documents/{id}.json": {
      "get": {
        "tags": [
          "Documents"
        ],
        "operationId": "Document#show",
        "summary": "Return the data for a single Document",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Document",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Document.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Documents"
        ],
        "operationId": "Document#update",
        "summary": "Update a single Document",
        "description": "Update Document, move Document to another Folder, and/or restore a trashed Document.\n",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Document.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the Document. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Document."
                            }
                          }
                        }
                      },
                      "fully_uploaded": {
                        "type": "boolean",
                        "description": "Indicates whether document is uploaded.\n\nWhen marking the document fully uploaded, it arises errors when:\n* The file is not successfully uploaded.\n* Not all the file parts are uploaded.\n* The document is already marked as fully uploaded.\n"
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "Document",
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          },
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier of the parent object."
                          }
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      },
                      "uuid": {
                        "type": "string",
                        "description": "UUID associated with the document version. UUID is required to mark a document fully uploaded."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the Document. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Document."
                            }
                          }
                        }
                      },
                      "fully_uploaded": {
                        "type": "boolean",
                        "description": "Indicates whether document is uploaded.\n\nWhen marking the document fully uploaded, it arises errors when:\n* The file is not successfully uploaded.\n* Not all the file parts are uploaded.\n* The document is already marked as fully uploaded.\n"
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "Document",
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          },
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier of the parent object."
                          }
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      },
                      "uuid": {
                        "type": "string",
                        "description": "UUID associated with the document version. UUID is required to mark a document fully uploaded."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the Document. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Document."
                            }
                          }
                        }
                      },
                      "fully_uploaded": {
                        "type": "boolean",
                        "description": "Indicates whether document is uploaded.\n\nWhen marking the document fully uploaded, it arises errors when:\n* The file is not successfully uploaded.\n* Not all the file parts are uploaded.\n* The document is already marked as fully uploaded.\n"
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "Document",
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          },
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier of the parent object."
                          }
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      },
                      "uuid": {
                        "type": "string",
                        "description": "UUID associated with the document version. UUID is required to mark a document fully uploaded."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "operationId": "Document#destroy",
        "summary": "Delete a single Document",
        "description": "Deleting a Document using this method will move it to the trash instead of permanently deleting it. Trashed Documents are permanently deleted after 30 days.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Document.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/document_automations/events.json": {
      "get": {
        "tags": [
          "Document Automations"
        ],
        "operationId": "DocumentAutomation#events",
        "summary": "Return the data for DocumentAutomations events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for DocumentAutomations events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of DocumentAutomation records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentAutomationListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/document_automations.json": {
      "get": {
        "tags": [
          "Document Automations"
        ],
        "operationId": "DocumentAutomation#index",
        "summary": "Return the data for all DocumentAutomations",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all DocumentAutomations",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter DocumentAutomation records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter DocumentAutomation records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of DocumentAutomation records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the DocumentAutomation records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter DocumentAutomation records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentAutomationList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Document Automations"
        ],
        "operationId": "DocumentAutomation#create",
        "summary": "Create a new DocumentAutomation",
        "description": "Outlines the parameters and data fields used when creating a new DocumentAutomation",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentAutomationShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_template": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentTemplate associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "filename": {
                        "type": "string",
                        "description": "The filename the generated document should have."
                      },
                      "formats": {
                        "enum": [
                          "pdf",
                          "original"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The formats should the document be generated as. It can either be generated as a PDF and/or in whatever type the document template is."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "matter",
                      "filename",
                      "document_template",
                      "formats"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_template": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentTemplate associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "filename": {
                        "type": "string",
                        "description": "The filename the generated document should have."
                      },
                      "formats": {
                        "enum": [
                          "pdf",
                          "original"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The formats should the document be generated as. It can either be generated as a PDF and/or in whatever type the document template is."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "matter",
                      "filename",
                      "document_template",
                      "formats"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_template": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentTemplate associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "filename": {
                        "type": "string",
                        "description": "The filename the generated document should have."
                      },
                      "formats": {
                        "enum": [
                          "pdf",
                          "original"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The formats should the document be generated as. It can either be generated as a PDF and/or in whatever type the document template is."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Matter associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "matter",
                      "filename",
                      "document_template",
                      "formats"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/document_automations/{id}.json": {
      "get": {
        "tags": [
          "Document Automations"
        ],
        "operationId": "DocumentAutomation#show",
        "summary": "Return the data for a single DocumentAutomation",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single DocumentAutomation",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the DocumentAutomation.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentAutomationShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/document_categories.json": {
      "get": {
        "tags": [
          "Document Categories"
        ],
        "operationId": "DocumentCategory#index",
        "summary": "Return the data for all DocumentCategories",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all DocumentCategories",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter DocumentCategory records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of DocumentCategory records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the DocumentCategory records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCategoryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Document Categories"
        ],
        "operationId": "DocumentCategory#create",
        "summary": "Create a new DocumentCategory",
        "description": "Outlines the parameters and data fields used when creating a new DocumentCategory",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCategoryShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/document_categories/{id}.json": {
      "get": {
        "tags": [
          "Document Categories"
        ],
        "operationId": "DocumentCategory#show",
        "summary": "Return the data for a single DocumentCategory",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single DocumentCategory",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the DocumentCategory.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCategoryShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Document Categories"
        ],
        "operationId": "DocumentCategory#update",
        "summary": "Update a single DocumentCategory",
        "description": "Outlines the parameters and data fields used when updating a single DocumentCategory",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the DocumentCategory.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCategoryShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Document Categories"
        ],
        "operationId": "DocumentCategory#destroy",
        "summary": "Delete a single DocumentCategory",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single DocumentCategory",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the DocumentCategory.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/document_templates/{id}/download.json": {
      "get": {
        "tags": [
          "Document Templates"
        ],
        "operationId": "DocumentTemplate#download",
        "summary": "Get the contents of the DocumentTemplate",
        "description": "Get the contents of the DocumentTemplate",
        "parameters": [
          {
            "name": "id",
            "description": "The unique identifier for the DocumentTemplate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/document_templates/events.json": {
      "get": {
        "tags": [
          "Document Templates"
        ],
        "operationId": "DocumentTemplate#events",
        "summary": "Return the data for DocumentTemplates events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for DocumentTemplates events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of DocumentTemplate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplateListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/document_templates.json": {
      "patch": {
        "tags": [
          "Document Templates"
        ],
        "operationId": "DocumentTemplate#update",
        "summary": "Update a single DocumentTemplate",
        "description": "Outlines the parameters and data fields used when updating a single DocumentTemplate",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the DocumentTemplate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplateShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DocumentTemplate_updateBody"
        }
      },
      "get": {
        "tags": [
          "Document Templates"
        ],
        "operationId": "DocumentTemplate#index",
        "summary": "Return the data for all DocumentTemplates",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all DocumentTemplates",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "description": "Filter DocumentTemplate records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter DocumentTemplate records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of DocumentTemplate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the DocumentTemplate records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "filename(asc)",
                "filename(desc)",
                "category.name(asc)",
                "category.name(desc)",
                "last_modified(asc)",
                "last_modified(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter DocumentTemplate records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplateList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Document Templates"
        ],
        "operationId": "DocumentTemplate#create",
        "summary": "Create a new DocumentTemplate",
        "description": "Outlines the parameters and data fields used when creating a new DocumentTemplate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplateShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "file": {
                        "type": "string",
                        "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                      }
                    },
                    "required": [
                      "file"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "file": {
                        "type": "string",
                        "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                      }
                    },
                    "required": [
                      "file"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "file": {
                        "type": "string",
                        "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                      }
                    },
                    "required": [
                      "file"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/document_templates/{id}.json": {
      "get": {
        "tags": [
          "Document Templates"
        ],
        "operationId": "DocumentTemplate#show",
        "summary": "Return the data for a single DocumentTemplate",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single DocumentTemplate",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the DocumentTemplate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplateShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Document Templates"
        ],
        "operationId": "DocumentTemplate#update",
        "summary": "Update a single DocumentTemplate",
        "description": "Outlines the parameters and data fields used when updating a single DocumentTemplate",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the DocumentTemplate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplateShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DocumentTemplate_updateBody"
        }
      },
      "delete": {
        "tags": [
          "Document Templates"
        ],
        "operationId": "DocumentTemplate#destroy",
        "summary": "Delete a single DocumentTemplate",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single DocumentTemplate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the DocumentTemplate.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/folders/list.json": {
      "get": {
        "tags": [
          "Folders"
        ],
        "operationId": "Folder#list",
        "summary": "Return the data of the contents a Folder",
        "description": "Return the data of the contents of a Folder.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contact_id",
            "description": "The unique identifier for a single Contact. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Folder records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "document_category_id",
            "description": "The unique identifier for a single DocumentCategory. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "external_property_name",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Folder records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "include_deleted",
            "description": "Allow trashed Folder record to be included.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Folder records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Folder records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "updated_at(asc)",
                "updated_at(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_id",
            "description": "The unique identifier for a single Folder. The keyword `null` is not valid for this field. If no Folder is provided, it will default to the account's root Folder.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching the given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_uncompleted",
            "description": "Allow Folder record being uploaded to be included.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Folder records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/folders/events.json": {
      "get": {
        "tags": [
          "Folders"
        ],
        "operationId": "Folder#events",
        "summary": "Return the data for Folders events (BETA)",
        "description": "**This is currently in beta and is subject to change without notice.**\n\nOutlines the parameters, optional and required, used when requesting the data for Folders events\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields). Note for events the returned fields are nested under the `record` attribute.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Folder records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderListEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/folders.json": {
      "get": {
        "tags": [
          "Folders"
        ],
        "operationId": "Folder#index",
        "summary": "Return the data for all Folders",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Folders",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contact_id",
            "description": "The unique identifier for a single Contact. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_since",
            "description": "Filter Folder records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "document_category_id",
            "description": "The unique identifier for a single DocumentCategory. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "external_property_name",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "description": "Filter Folder records to those having the specified unique identifiers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "include_deleted",
            "description": "Allow trashed Folder record to be included.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "description": "A limit on the number of Folder records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "description": "Orders the Folder records by the given field. Default: `id(asc)`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "description": "A token specifying which page to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Wildcard search for `name` matching the given string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "description": "Filter Folder records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Folders"
        ],
        "operationId": "Folder#create",
        "summary": "Create a new Folder",
        "description": "Create a Folder to an existing folder.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Folder or Matter associated with the Folder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Folder or Matter associated with the Folder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Folder or Matter associated with the Folder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      }
    },
    "/folders/{id}.json": {
      "get": {
        "tags": [
          "Folders"
        ],
        "operationId": "Folder#show",
        "summary": "Return the data for a single Folder",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Folder",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Folder.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderShow"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Folders"
        ],
        "operationId": "Folder#update",
        "summary": "Update a single Folder",
        "description": "Update Folder, move Folder to another Folder, and/or restore a trashed Folder.\n",
        "parameters": [
          {
            "name": "IF-MATCH",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Folder.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderShow"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the Folder. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Folder."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Folder or Matter associated with the Folder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object."
                          }
                        }
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the Folder. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Folder."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Folder or Matter associated with the Folder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object."
                          }
                        }
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The unique identifier for a single ExternalProperty associated with the Folder. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Folder."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single Folder or Matter associated with the Folder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "enum": [
                              "Folder",
                              "Matter"
                            ],
                            "type": "string",
                            "description": "Type of parent object."
                          }
                        }
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "JSON body"
        }
      },
      "delete": {
        "tags": [
          "Folders"
        ],
        "operationId": "Folder#destroy",
        "summary": "Delete a single Folder",
        "description": "Deleting a Folder using this method will move it to the trash instead of permanently deleting it. Trashed Folders are permanently deleted after 30 days.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BULK",
            "description": "An indicator if [bulk actions](#section/Bulk-Actions) should be performed.\nWhen performing a bulk action, the id path parameter is not required.\n",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "description": "The unique identifier for the Folder.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Activities",
      "description": "Activities (Time Entries and Expense Entries) track work done at a firm. Activities are recorded in Clio and then posted on bills to clients.\n\nTime Entries can be either be hourly-billable or flat-rate. An hourly-billable Time Entry is valued at the billing rate multiplied by the time entered. Examples could be a phone call, or a research session. A flat-rate Time Entry has a set value. Examples could be a visa application, or a contract review.\n\nExpenses are reimbursable costs the firm pays on behalf of a client (for example, postage, copy fees, etc.).\n\n[Support Link](https://support.clio.com/hc/en-us/categories/200958508-Activities-Time-and-Expense-Entries)\n\n[Activities in Clio](http://app.clio.com/activities)\n"
    },
    {
      "name": "Activity Rates",
      "description": ""
    },
    {
      "name": "Activity Descriptions",
      "description": "Activity Descriptions are custom Time Entry templates. Activity Descriptions help firms expedite their process for recording Time Entries, and ensure that their Time Entry descriptions are consistent.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203440170-Creating-and-Managing-Activity-Descriptions)\n\n[Activity Descriptions in Clio](https://app.clio.com/nc/#/activity_categories)\n"
    },
    {
      "name": "Allocations",
      "description": "Once a [Payment}(https://support.clio.com/hc/en-us/articles/203451210-Recording-Payments-on-Bills) or [Credit Memo](https://support.clio.com/hc/en-us/articles/203275324-Applying-Write-Offs-and-Credit-Notes) has been recorded, an Allocation links it to a Bill.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203451210-Recording-Payments-on-Bills)\n"
    },
    {
      "name": "Bank Accounts",
      "description": "These accounts are meant to mirror the firm’s accounts at their financial institution. Users can add a bank account to Clio to use with [Clio Payments](https://support.clio.com/hc/en-us/articles/213124787-Clio-Payments-Accepting-Credit-Card-Payments-in-Clio), and for use as an audit and reconciliation tool.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203133874-Managing-Accounts-Creating-Editing-and-Deleting)\n"
    },
    {
      "name": "Bank Transactions",
      "description": ""
    },
    {
      "name": "Bank Transfers",
      "description": ""
    },
    {
      "name": "Bill Themes",
      "description": ""
    },
    {
      "name": "Billable Clients",
      "description": "Users can view all Billable Clients, or clients with outstanding [Bills](https://support.clio.com/hc/en-us/articles/203440180-Creating-Bills), on the Billable Clients page, located under the Bills tab.\n"
    },
    {
      "name": "Billable Matters",
      "description": "Users can see all [Matters](https://support.clio.com/hc/en-us/articles/203337120-Anatomy-of-a-Matter) that have outstanding bills attached to them by filtering out all non-billable Matters under the Matters tab.\n\nUsers can [disable billing](https://support.clio.com/hc/en-us/articles/203128134-Disabling-Billing-for-Matters) for certain Matters. They can still enter Activities on these Matters, but those Activities will not appear in the [Bills page](https://support.clio.com/hc/en-us/articles/203440180-Creating-Bills).\n"
    },
    {
      "name": "Bills",
      "description": "Bills are statements of what a user’s client owes for their services over a particular billing period, including legal fees, expenses, and taxes.\n\nUsers customize, preview, edit, and approve bills before sending them to a client.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203440180-Creating-Bills)\n"
    },
    {
      "name": "Bulk Actions",
      "description": "API v4 will allow bulk actions for most endpoints. To use bulk actions:\n1. Make a request to the action with an `X-BULK` header with the value `true`. The response will always be a `202 Accepted`.\n2. Poll the URL provided in the `Location` header of the response. This URL is for the [Bulk Actions](#tag/Bulk-Actions) endpoint.\n3. While the action is processing, polling the URL will return `200 Successful` with the current status indicated in the response body.\n4. Once the action is complete, polling the URL will return a `303 See Other` response.\n5. Download the response from URL in the `Location` header of the `303 See other` response.\n\n*Note*:\n- For some bulk actions the parameter format may change slightly.\n- Clio only permits one active bulk action request per endpoint per OAuth token.\n\n*Authorization note*: The `Authorization` header & token used to access the API should _not_ be used when downloading the response from the URL in the `Location` header of the `303`. Doing so will result in a `400` error being returned. The URL provided for download is a signed URL and does not require additional authorization.\n\n### List\n\nThe primary use case of using Bulk Actions for a listing endpoint is to remove the need for paging. This is useful if you require a full list of records for situations such as: syncing a full set of data, or creating a report based off the `fields` and request parameters.\n\nThe `limit`, and the `page_token` parameters are ignored, otherwise the request parameters are the same as a non-bulk request. The eventual response that is received from step 4 above might look something like:\n\n```json\n  {\n     data: [\n       { status: 200, data: [ { id: 1 }, { id: 2 } ] }\n     ]\n     status: 'completed', requested: 1, performed: 1\n  }\n```\n\n### Create\n\nThe request parameter format changes slightly for this action. Using `contacts` as an example, creating multiple records would look something like:\n```json\nRequest\n  POST /api/v4/contacts.json\n  {\n    data: [\n       { first_name: \"Foo\", type: \"Person\" },\n       { type: \"Person\" }\n    ],\n    fields: \"id,first_name\"\n  }\n\nEventual Response\n  {\n     data: [\n       { status: 200, data: { id: 1, first_name: \"Foo\" } },\n       { status: 422, error: { message: \"At least one of first name or last name must be provided\", type: \"RecordInvalid\" } },\n     ],\n     status: 'completed', requested: 2, performed: 2\n  }\n```\n\n### Update\nThe request parameter format changes slightly for this action. Using `contacts` as an example, updating multiple records would look something like:\n```json\nRequest\n  PATCH /api/v4/contacts.json\n  {\n    data: [\n       { id: 1, first_name: \"Foo\" },\n       { id: 2, type: \"Invalid\" }\n    ],\n    fields: \"id,first_name\"\n  }\n\nEventual Response\n  {\n    data: [\n       { status: 200, data: { id: 1, first_name: \"Foo\" } },\n       { status: 400, error: { message: \"type must be one of the follow: 'Company', or 'Person'\", type: \"ArgumentError\" } },\n    ],\n    status: 'completed', requested: 2, performed: 2\n  }\n```\n\n### Destroy\nThe request parameter format changes slightly for this action. Using `contacts` as an example, destroying multiple records would look something like:\n```json\nRequest\n  DELETE /api/v4/contacts.json\n  {\n    data: [\n       { id: 1 },\n       { id: 2 }\n    ]\n  }\n\nEventual Response\n  {\n     data: [\n       { status: 202 },\n       { status: 202 },\n     ],\n     status: 'completed', requested: 2, performed: 2\n  }\n```\n"
    },
    {
      "name": "Calendar Entries",
      "description": "Calendar Entries are used to track appointments or deadlines. Users can view Calendar Entries on any Calendar that they have “Viewer” or “Editor” permission for. Users can create Calendar Entries on any Calendar that they have “Editor” permission for.\n\n### Calendar Update/Deletion Best Practices\n* Prior to updating or deleting a calendar entry, check for recurrence.\n* If the recurrence_rule parameter is not equal to `null`, offer the following 3 options for the update/deletion, as well as the note:\n    1. Only this instance: Update/Delete this event, but leave all future events unchanged.\n    2. All following: Updates/Deletes this event and all the future events.\n    3. All events in the series: Updates/Deletes all events in the series.\n    * Note: If you've modified any future events in this series, those edits will be lost once you make this change.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203431570-Creating-Calendar-Events)\n"
    },
    {
      "name": "Calendars",
      "description": "Calendars contain Calendar Entries. All Clio accounts contain one firm Calendar (\"AccountCalendar\"), personal Calendars for each user (\"UserCalendar\"), and any number of manually created Calendars (\"AdhocCalendar\"). [Calendar sharing](https://support.clio.com/hc/en-us/articles/203432800-Sharing-and-Viewing-Other-Users-Calendars) settings determine if a Calendar is visible to a User, and if that User is able to create or edit Calendar Entries on that Calendar.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203431860-Creating-and-Managing-Clio-Calendars)\n"
    },
    {
      "name": "Communications",
      "description": "Users can view all logged phone calls and emails under the Communications tab in Clio. This is also where they can use [Clio Secure Messages](https://support.clio.com/hc/en-us/articles/203096814-Sending-Secure-Messages).\n\nCommunications can be filtered to show those attached to certain [Matters](https://support.clio.com/hc/en-us/articles/203337120-Anatomy-of-a-Matter) or dates, or to show those with or without time entries.\n\n[Support Link](https://support.clio.com/hc/en-us/categories/200960507-Communications)\n"
    },
    {
      "name": "Contacts",
      "description": "All clients, prospective clients, companies, and external co-counsels can be viewed as Contacts under the Contacts tab in Clio.\n\n[Support Link](https://support.clio.com/hc/en-us/categories/200962397-Contacts)\n\n## Associations\nA Contact can be persisted with its associations in a single request. The followings detail the nested attributes to persist the associations.\n\n### Addresses\nCheckout the sample request to update the Addresses of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      addresses: [\n        // update\n        { id: 1, name: \"Work\", country: \"Canada\" },\n        // create\n        { name: \"Home\", street: \"1234 Canada Way\", city: \"Burnaby\", province: \"BC\", country: \"Canada\", postal_code: \"V1A 1A1\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Custom Field Values\nA CustomFieldValue is an instance of CustomField added to a Contact.\nBelow are some examples of how to create, update and destroy the CustomFieldValues of a Contact:\n#### Create\nNote: The value of `id` used here is the value of the `id` parameter in the response received when [creating a new CustomField](/api/v4/documentation#operation/CustomField#create) or one returned in a [query of an existing CustomField](/api/v4/documentation#operation/CustomField#show).\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      custom_field_values: [\n        { custom_field: { id: 2 }, value: \"Initial value\" }\n      ]\n    }\n  }\n```\n#### Update\nNote: The value of `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts?fields=id,name,custom_field_values{id, value, custom_field}`\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"text_line-1\", value: \"Updated value\" }\n      ]\n    }\n  }\n```\n#### Destroy\nNote: The value of `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts?fields=id,name,custom_field_values{id, value, custom_field}`\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"picklist-2\", _destroy: true }\n      ]\n    }\n  }\n```\n\n### Email Addresses\nCheckout the sample request to update the Email Addresses of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      email_addresses: [\n        // update\n        { id: 1, name: \"Work\", address: \"demo@clio.com\" },\n        // create\n        { name: \"Home\", address: \"home@clio.com\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Instant Messengers\nCheckout the sample request to update the Instant Messengers of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      instant_messengers: [\n        // update\n        { id: 1, name: \"Work\", address: \"https://twitter.com/goclio\" },\n        // create\n        { name: \"Other\", address: \"https://www.facebook.com/GoClio/\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Phone Numbers\nCheckout the sample request to update the Phone Numbers of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      phone_numbers: [\n        // update\n        { id: 1, name: \"Work\", number: \"123-456-7890\" },\n        // create\n        { name: \"Other\", number: \"000-000-0000\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Web Site\nCheckout the sample request to update the Web Site of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      web_sites: [\n        // update\n        { id: 1, name: \"Work\", address: \"https://support.clio.com/\" },\n        // create\n        { name: \"Other\", address: \"https://www.clio.com/about/careers/\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n"
    },
    {
      "name": "Conversation Messages",
      "description": ""
    },
    {
      "name": "Conversations",
      "description": ""
    },
    {
      "name": "Jurisdictions To Triggers",
      "description": "Jurisdictions-to-Triggers calculates the effective dates of related court and agency rules that a lawyer must do for a Trigger. A Trigger is an activity or event which a lawyer or court does in a jurisdiction.\n\nThese activities and events have corresponding deadlines, which the firm must be aware of. These deadlines can be before or after the Trigger. Example Triggers are “Mediation-Session Completed, “Notice of Appeal Filed,” ” or “Settlement Conference.”\n\nJurisdiction triggers are part of the [Court Rules](https://support.clio.com/hc/en-us/articles/204527607-Using-Court-Rules-) feature, available only for subscribers to Clio’s Elite plan.\n\nNote that only account Administrators can add Court Rules jurisdictions.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203842388-Configuring-Court-Rules-Settings-and-Jurisdictions)\n\n[Court Rules Settings in Clio](https://support.clio.com/hc/en-us/articles/203842388-Configuring-Court-Rules-Settings-and-Jurisdictions)\n"
    },
    {
      "name": "Jurisdictions",
      "description": "There are over 1000 jurisdictions available to choose from when using Court Rules. These jurisdictions contain state, federal, appellate, and bankruptcy courts from across the United States.\n\nJurisdictions are part of the [Court Rules](https://support.clio.com/hc/en-us/articles/204527607-Using-Court-Rules-) feature, available only for subscribers to Clio’s Elite plan.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/204527607-Using-Court-Rules-)\n\n[Currently Available Jurisdictions](https://support.clio.com/hc/en-us/articles/203842398-Currently-Available-Jurisdictions-and-Courts)\n"
    },
    {
      "name": "Matter Dockets",
      "description": "A Matter Docket connects a Matter with a Court Rule (and all of the Calendar Entries associated with the Court Rule). Matter Dockets are viewable on the Matter Edit screen under the Court Rules heading.\n\nMatter Dockets are part of the [Court Rules](https://support.clio.com/hc/en-us/articles/204527607-Using-Court-Rules-) feature, available only for subscribers to Clio’s Elite plan.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/204527607-Using-Court-Rules-)\n"
    },
    {
      "name": "Service Types",
      "description": "Service Types are used when creating new Court Rules involving the delivery of documents. In order to calculate the correct deadline to send the document, an account will specify their Service Type.\n\nCurrent Service Types;\n* Express mail outside country\n* Mail outside country\n* Personal/hand\n* Mail outside state\n* Electronic service\n* Fax service\n* Express/Overnight\n* Regular mail\n* Electronic service - 0 days\n\nService Types are part of the [Court Rules](https://support.clio.com/hc/en-us/articles/204527607-Using-Court-Rules-) feature, available only for subscribers to Clio’s Elite plan.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203842388-Configuring-Court-Rules-Settings-and-Jurisdictions)\n"
    },
    {
      "name": "Clio Payments Cards",
      "description": ""
    },
    {
      "name": "Credit Memos",
      "description": "Credit Memos allow users to write off amounts that clients owe on approved Bills. They can be added in two \"ways\": when viewing a Bill, or when making a payment on a Bill.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203275324-Applying-Write-Offs-and-Credit-Notes)\n"
    },
    {
      "name": "Currencies",
      "description": ""
    },
    {
      "name": "Custom Fields",
      "description": ""
    },
    {
      "name": "Custom Field Sets",
      "description": ""
    },
    {
      "name": "Custom Actions (Beta)",
      "description": "In Clio, applications can create Custom Actions in our interface. Links are unique across an application, user, location in the UI (`ui_reference`) and label. When the user clicks on a Custom Action, Clio will open a new browser tab at the `target_url`.\n\nClio will add a few URL parameters to the `target_url`, including the Custom Action's ID, the ID of the User who clicked the link and the URL of the object(s) which the link was clicked on. The third party application must then look up the relevant OAuth token associated with the User and Custom Action, and make an authenticated request to the `subject_url`. This request both lets you validate the request was made by who you expected, that they have access to the record and lets you pull down any extra information you may need.\n\nIf you wish for your application to partake in the Custom Actions beta, please reach us on our developer slack or email api@clio.com.\n\nCurrently supported for: Activities, Contacts, Documents and Matters\n\n## Security\n\n### Confirming a User's Action\n\nAs custom actions require an unauthorized GET request, which can be faked, Clio has provided a way to validate that a user has actually performed an action.\n\nWhen a request is sent to the URL specified on the Custom Action, we will include a `custom_action_nonce` parameter. If you send us back the `custom_action_nonce` in your next request to the API, Clio will use it to validate that the user who clicked the custom action matches your oauth token request. If no match is made, an error will be returned.\n"
    },
    {
      "name": "Expense Categories",
      "description": "Expense Categories are custom Expense Entry templates. Expense Categories help firms expedite their process for recording Expense Entries, and ensure that their Expense Entry descriptions are consistent.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/360021260814-How-do-I-Create-Edit-an-Expense-Category)\n\n[Expense Categories in Clio](https://app.clio.com/nc/#/activity_categories)\n"
    },
    {
      "name": "Groups",
      "description": "In Clio, [permission levels](https://support.clio.com/hc/en-us/articles/203164050-User-Permissions) and [Matter permissions](https://support.clio.com/hc/en-us/articles/203128174-Matter-Permissions-and-Groups) are controlled using Groups. All accounts contain an “all users” group, as well as individual groups for each user. Admins always have access to all of the account's groups. Users can also create groups manually in order to precisely manage their permissions.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203142554-Groups-Managing-Groups-of-Users)\n"
    },
    {
      "name": "Import Details",
      "description": ""
    },
    {
      "name": "Interest Charges",
      "description": ""
    },
    {
      "name": "Line Items",
      "description": ""
    },
    {
      "name": "Log Entries",
      "description": "Log Entries populate the “Recent” section in the sidebar. The “Recent” section displays the ten Matters and Contacts that the user most recently accessed.\n\nWhen a user accesses a Contact or a Matter, a Log Entry is created.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203337170-Searching-Sorting-and-Filtering-your-Matters#recent)\n"
    },
    {
      "name": "Matters",
      "description": "[Matters](https://support.clio.com/hc/en-us/articles/203337120-Anatomy-of-a-Matter) in Clio represent a firm’s cases. All relevant information—Bills, Documents, Time Entries, etc.—are contained in the Matter. A user’s ability to access a Matter is controlled by the [Matter Permission settings](https://support.clio.com/hc/en-us/articles/203128174-Matter-Permissions-and-Groups). A user without permission will be unable to view or update a Matter.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/218242528-Comprehensive-Guide-Matters#p0)\n\n[Matters in Clio](http://app.clio.com/matters)\n\n## Associations\nA Matter can be persisted with its associations in a single request. The followings detail the nested attributes to persist the associations.\n\n### Custom Field Values\nA CustomFieldValue is an instance of CustomField added to a Matter.\nBelow are some examples of how to create, update and destroy the CustomFieldValues of a Matter:\n#### Create\nNote: The value of `id` used here is the value of the `id` parameter in the response received when [creating a new CustomField](/api/v4/documentation#operation/CustomField#create) or one returned in a [query of an existing CustomField](/api/v4/documentation#operation/CustomField#show).\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_field_values: [\n        { custom_field: { id: 2 }, value: \"Initial value\" }\n      ]\n    }\n  }\n```\n#### Update\nNote: The value of `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Matter, e.g.: `/api/v4/matters?fields=id,display_number,custom_field_values{id, value, custom_field}`\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"text_line-1\", value: \"Updated value\" }\n      ]\n    }\n  }\n```\n#### Destroy\nNote: The value of `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Matter, e.g.: `/api/v4/matters?fields=id,display_number,custom_field_values{id, value, custom_field}`\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"picklist-2\", _destroy: true }\n      ]\n    }\n  }\n```\n\n### Custom Rates\nEach Matter can be set up to be billed on an Hourly basis, Flat Fee basis, or on Contingency.\nTo set the rate type, assign `custom_rate[type]` with one of the values, `\"HourlyRate\"`, `\"FlatRate\"` or `\"ContingencyFee\"`.\nBy default, a Matter is billed on an hourly basis. If the rate type is modified, the persisted rates will be deleted.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203259864-Designating-How-Time-is-Billed-on-a-Matter-Hourly-Flat-Fee-or-Contingency)\n\n#### Hourly Rates\nSelecting the `\"HourlyRate\"` type will record time entries based on the custom hourly rates.\nA custom hourly rate can be associated to a User or a Group.\nCheckout the sample request to update the hourly rates of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_rate: {\n        type: \"HourlyRate\",\n        rates: [\n          // update a rate for a user\n          { id: 1, rate: 100, user: { id: 1 } },\n          // update a rate for a group\n          { id: 2, rate: 100, group: { id: 1 } },\n          // create a rate for a user\n          { rate: 100, user: { id: 2 } },\n          // create a rate for a group\n          { rate: 100, group: { id: 2 } },\n          // destroy a rate\n          { id: 3, _destroy: true }\n        ]\n      }\n    }\n  }\n```\n\n#### Flat Rate\nSelecting the `\"FlatRate\"` type will bill the matter with a flat fee. A Matter can only have one flat rate.\nFor associated objects, you can specify `_destroy` attribute to delete the rate.\n\nCheckout the sample request to update the flat rate of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_rate: {\n        type: \"FlatRate\",\n        rates: [\n          {\n            id: 1,\n            user: { id: 1 },\n            activity_description: { id: 1 },\n            rate: 100,\n          }\n        ]\n      }\n    }\n  }\n```\n\n#### Contingency Fee\nSelecting the `\"ContingencyFee\"` type will specify a contingency fee percentage on a Matter and the award or settlement amount won at the completion of the case.\nA Matter can only have one definition of contingency fee.\nFor associated objects, you can specify `_destroy` attribute to delete the rate.\n\nContingency Fee Matters are available to subscribers of the Legacy, Boutique, and Elite plans.\n\nCheckout the sample request to update the contingency fee of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_rate: {\n        type: \"ContingencyFee\",\n        rates: [\n          {\n            id: 1,\n            user: { id: 1 },\n            rate: 20,\n          }\n        ]\n      }\n    }\n  }\n```\n### Matter Budget\nClio supports tracking a matter budget directly within a Matter.\nA Matter can only have one matter budget associated with it.\nA matter budget can not be added to flat rate matters.\nFor associated objects, you can specify the `_destroy` attribute to delete the Matter Budget.\n\nMatter Budget is only available for subscribers to Clio’s Elite plan.\n\nCheckout the sample request to update the matter budget of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      matter_budget: [\n        budget: 5000000,\n        include_expenses: true,\n        notification_threshold: 500,\n        notify_users: true\n        users: [\n          { id: 1 },\n          // destroy\n          { id: 2, _destroy: true }\n        ]\n      ]\n    }\n  }\n```\n### Relationships\nThere are people and/or companies related to a Matter other than the client of the lawyer. Clio helps define how the entities relate to a Matter.\n\nCheckout the sample request to update Relationships of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      relationships: [\n        // update\n        { id: 1, contact: { id: 1 }, description: \"Opposing Counsel\" },\n        // create\n        { contact: { id: 2 }, description: \"Judge\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n  }\n```\n\n### Statue Of Limitations\nClio supports to track a Statute of Limitations date directly within a Matter.\nIt can be associated with reminders as a Task.\nA Matter can only have one definition of Statue of Limitations.\nFor associated objects, you can specify `_destroy` attribute to delete the Statue of Limitations.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203337350-Statute-of-Limitations-Field)\n\nCheckout the sample request to update the Statue of Limitations and its reminders of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      statue_of_limitations: [\n        due_at: \"20201231\",\n        status: \"open\",\n        reminders: [\n          // update\n          { id: 1, duration_unit: \"days\", duration_value: 1, notification_method: { id: 1 } },\n          // create\n          { duration_unit: \"days\", duration_value: 1, notification_method: { id: 2 } },\n          // destroy\n          { id: 2, _destroy: true }\n        ]\n      ]\n    }\n  }\n```\n\n### Task Template Lists\nClio supports assigning task template lists to a matter from with the same request that\ncreates or updates a matter. Please note that a task template list **can only be\nassigned**. Once a task template list is assigned, it **cannot be modified or destroyed**.\n\nCheckout the sample request to assign a task template list id to a matter:\n\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      task_template_list_instances: [\n        {\n          notify_assignees: true,\n          task_template_list: {id: 1},\n        },\n        {\n          notify_assignees: false,\n          task_template_list: {id: 2},\n        }\n      ],\n    }\n  }\n```\n"
    },
    {
      "name": "Notes",
      "description": "Notes can be added to [Matters](https://support.clio.com/hc/en-us/articles/203337120-Anatomy-of-a-Matter) or Contacts in Clio to record meeting notes, research, or anything else a user might want. The field can hold hundreds of pages, so users can add plenty of information.\n\nNotes can be found either on the Matters or Contacts page under the Notes sub tab.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203354690-Matter-Notes)\n"
    },
    {
      "name": "Practice Areas",
      "description": "The practice area field can be added to [Matters](https://support.clio.com/hc/en-us/articles/203337120-Anatomy-of-a-Matter) and used for filtering purposes, or just for reference. Users can create their own practice areas.\n\n[Support link](https://support.clio.com/hc/en-us/articles/216769608-Managing-Practice-Areas)\n[Practice areas settings](http://app.clio.com/practice_areas)\n"
    },
    {
      "name": "Relationships",
      "description": "Relationships are used on a [Matter](https://support.clio.com/hc/en-us/articles/203337120-Anatomy-of-a-Matter) to track Contacts related to the Matter. Relationships are can be found on the Contacts sub tab of a Matter.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203354750-Adding-Related-Contacts-to-a-Matter)\n\nRelationships are used on the Matter detail page under the Contacts tab.\n"
    },
    {
      "name": "Reminders",
      "description": "Reminders can be added to Tasks or Calendar Entries. Reminder emails can be sent by a User to themself, to other Users, to Clio Connect Contacts, or to [any authorized email](https://support.clio.com/hc/en-us/articles/203432060-Adding-Calendar-Reminders#others). An in-Clio pop-up reminder can also be sent by a User to themself.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203432060-Adding-Calendar-Reminders)\n"
    },
    {
      "name": "Reports",
      "description": ""
    },
    {
      "name": "Billing Settings",
      "description": ""
    },
    {
      "name": "Text Snippets",
      "description": "Clio's Text Snippets feature allows users to create a list of predefined abbreviations for commonly used phrases. For example, a user could configure their settings to have “meeting with client” show up whenever they type “mwc.”\n\nThis feature can be used in various field in Clio, such as the Matter Description, Note Detail, Calendar Entry Description and Task Description fields.\n\nText snippets are created and configured in the Clio settings menu.\n\n[Support link](https://support.clio.com/hc/en-us/articles/203215600-Introduction-to-Text-Snippets)\n"
    },
    {
      "name": "Tasks",
      "description": "Tasks are used to assign and track work. Users can set priorities, due dates, and add reminders.\n\nTasks can be assigned to firm users as well as Contacts (such as clients or co-counsel).\n\n[Support Link](https://support.clio.com/hc/en-us/categories/200957238-Tasks)\n\n[Tasks in Clio](http://app.clio.com/tasks)\n"
    },
    {
      "name": "Calendar Visibilities",
      "description": ""
    },
    {
      "name": "Task Templates",
      "description": "Task Templates are the individual [Tasks](/api/v4/documentation#tag/Tasks) which comprise a [Task Template List](/api/v4/documentation#tag/Task-Template-Lists).\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203220850-Task-Lists-Creating-and-Managing-Templates)\n"
    },
    {
      "name": "Task Template Lists",
      "description": "With Task Template Lists, users can create groups of [Task Templates](/api/v4/documentation#tag/Task-Templates) for the types of projects they work on most often. Each Task in a list can be given a separate due date in relation to the due dates for other [Tasks](/api/v4/documentation#tag/Tasks) in the list.\n\nUsers can then assign individual tasks on a list to different users, or they can batch assign an entire list.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203220850-Task-Lists-Creating-and-Managing-Templates)\n\n[Task Template Lists in Clio](http://app.clio.com/list_templates)\n"
    },
    {
      "name": "Task Types",
      "description": "Task Types are used to better categorize and filter tasks. This is a simple text field which is limited to 50 characters.\n\nTask Types are part of the [Advanced Tasks](https://support.clio.com/hc/en-us/articles/226612968-Advanced-Tasks) feature, available to subscribers to Clio’s Elite plan.\n\n[Support Link] (https://support.clio.com/hc/en-us/articles/226612968-Advanced-Tasks)\n\nUsed within Clio at [Task types](http://app.clio.com/task_types)\n"
    },
    {
      "name": "Timers",
      "description": "Timers are used to track time spent on billable work. They are used with hourly-billable [Time Entries](/api/v4/documentation#tag/Activities).\n\nThe Timer modal is accessed by clicking the timer in the application's header, or by clicking the Timer icon on a Time Entry.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203433530-Using-Timers-in-Clio)\n\nUsed within Clio in the timer modal which can be accessed by clicking the timer in the header, sidebar, and the time entries table.\n"
    },
    {
      "name": "Trust Line Items",
      "description": ""
    },
    {
      "name": "Trust Requests",
      "description": ""
    },
    {
      "name": "Users",
      "description": "A User is anyone with the ability to log in to Clio. This does not include Clio Connect users.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/202947734-Originating-Subscriber-vs-Administrator-vs-User-Available-Actions)\n"
    },
    {
      "name": "Utbms Sets",
      "description": "[UTBMS codes](/api/v4/documentation#tag/UTBMS-Codes) are divided into code sets. Each set includes Activities relevant to a certain type of law (for example, litigation, bankruptcy, etc.). Clio users can enable one or more of these sets in the [UTBMS settings menu](https://support.clio.com/hc/en-us/articles/203376020-UTBMS-Codes#enable). Enabling a UTBMS code set means that users will be able to select Activities from that list when adding Time or Expense Entries into Clio.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203376020-UTBMS-Codes)\n"
    },
    {
      "name": "Utbms Codes",
      "description": "[UTBMS codes](http://utbms.com/) standardize Time and Expense entries across the legal profession. Clio users can enter their Activities using UTBMS codes in order to provide electronic invoices.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203376020-UTBMS-Codes)\n"
    },
    {
      "name": "Webhooks",
      "description": "Webhooks are a way of detecting events in Clio without the need for polling.\n\nA webhook can be subscribed to a number of `events` on a model. Some events will be different depending on the chosen model, but *all* models support the following events:\n  * `created`\n  * `updated`\n  * `deleted`\n\nTo subscribe to any or all events for a model, [create a webhook record](#operation/Webhook#create) with the URL that you want webhooks to be sent to, a model, and the list of `events` you care about. Whenever an event happens on that model in Clio that the user is authorized to see, an HTTP request will be made to the supplied URL with details about the event. A webhook will automatically expire after a set period of time. If you require a permanent webhook, you will need to keep manually extending the `expires_at` field.\n\n## HTTPS\n\nPlease note that all webhooks MUST be using a url with the `https` scheme. All other schemes, including `http`, will be rejected.\n\n## Fields\n\nThe data a webhook sends is configured by using the `fields` data parameter on the webhook record. Clio will only send a webhook when at least one of the fields has changed from the last webhook that was delivered. Use the minimum set of fields to reduce how frequently your endpoint is hit.\n\nNote that there is a hard limit to the size of the `fields` parameter. Any request containing a `fields` size over 1000 characters will be rejected.\n\n## Model Specific Events\n\nAs mentioned previously, all models support the created, updated, and deleted events. Some models also support events specific to their life cycle.\n\n### All Models\n* `created` is fired whenever a model is created.\n* `updated` is fired whenever a model is updated.\n* `deleted` is fired whenever a model is deleted\n\n### Matters\n* `matter_opened` is fired whenever a matter's status changes to \"Open\"\n* `matter_pended` is fired whenever a matter's status changes to \"Pending\"\n* `matter_closed` is fired whenever a matter's status changes to \"Close\"\n\nMore model-specific events will be coming soon.\n\n## Delivery Failure & Retries\n\nA response status code of `2xx`, `3xx`, or `410 GONE` indicate that the action was successfully processed. When a `410 GONE` response is received, the webhook subscription will be disabled. All other responses will be considered unsuccessful, and they will be retried using an exponential backoff strategy.\n\n### Timeouts\n\nClio will wait a short period of time before the request will timeout. We will consider it an unsuccessful response and retry using an exponential backoff strategy. It is important to respond quickly. Failure to do so repeatedly may result in your webhook being disabled. If you need to do lengthy processing with the webhook, it is recommended that you defer the processing until after you have sent a response back to Clio.\n\n## Security\n\n### Identity Confirmation\n\nTo ensure that a URL actually intends to receive webhooks from Clio, and to ensure that the payloads are actually from Clio, we will share a secret in the initial handshake.\n\nA POST request will be made immediately after a webhook is setup, or whenever the URL changes. This request will have a unique secret in a `X-Hook-Secret` header along with the id of the webhook that was just created. There are two ways of confirming the webhook using this secret:\n\n#### Option 1: Immediate\n\nUpon initially receiving this secret, the endpoint can return a `200 OK` response and include the same secret in a `X-Hook-Secret` header.\n\n#### Option 2: Delayed\n\nAfter receiving the secret, make a PUT request to `/api/v4/webhooks/:webhook_id/activate` with the secret in a `X-Hook-Secret` header.\n\nNote that a webhook will not be enabled until this handshake is successful.\n\n### Confirming Hook Legitimacy\n\nTo prove that Clio is sending all subsequent messages, Clio will sign all of the requests.\n\nClio will compute an [HMAC-SHA256 signature](https://en.wikipedia.org/wiki/Hash-based_message_authentication_code) based on the shared secret and the request body. That signature will then be placed in a `X-Hook-Signature` header. The endpoint can then verify the signature to know if the message is authentic. Verification is as simple as computing an HMAC-SHA256 signature using the shared secret as the key and the request body as the message, and comparing it to the `X-Hook-Signature` header.\n\n## Example responses\n\nGiven a webhook created for the Activities model with no fields specified, the following would be responses for different actions. This webhook will trigger on any events for the model, and return the default fields for that model, and the event type.\n\n* Note: You will receive a webhook for an object if any fields have changed on that object, including fields you haven't subscribed to, if you have never received a webhook for that object before. You will only receive the data of the field you've subscribed to. For example, if you've subscribed to Activities and would like to know when the prices of Activities change, _any_ updates to a previously existing Activity will create a webhook that tells you the price of that Activity, even if it hasn't changed. Subsequent webhooks will only be created when the fields you've subscribed to change.\n\n### Create\n\nIn the event of an Activity being created, your URL would receive the following JSON:\n  ```http\n    {\n      \"data\":{\n        \"id\":152,\n        \"etag\":\"\\\"9a103be2201ae758992733a91f02903f\\\"\"\n      },\n      \"meta\":{\n        \"event\":\"created\"\n      }\n    }\n  ```\n\n### Update\n\nIn the event of an Activity being updated, your URL would receive the following JSON:\n  ```http\n    {\n      \"data\":{\n        \"id\":152,\n        \"etag\":\"\\\"9d9ef9fb42a505976d90d564c1596f11\\\"\"\n      },\n      \"meta\":{\n        \"event\":\"updated\"\n      }\n    }\n  ```\n\n### Delete\n\nIn the event of an Activity being deleted, your URL would receive the following JSON:\n  ```http\n    {\n      \"data\":{\n        \"id\":152,\n        \"etag\":\"\\\"3cc31bfbd6cfc16d3d7123423e437079\\\"\"\n      },\n      \"meta\":{\n        \"event\":\"deleted\"\n      }\n    }\n  ```\n"
    },
    {
      "name": "Document Archives",
      "description": ""
    },
    {
      "name": "Documents",
      "description": "Clio Documents are files uploaded to Clio. Files uploaded to Clio’s document integrations (e.g. Google Drive and Office365) are inaccessible through the API.\n\n[Support Link](https://support.clio.com/hc/en-us/categories/200960517-Working-with-Clio-Documents)\n\n## Uploading a new document\n[Create a document](#operation/Document%23create) to a parent that can refer to a `Matter` or a `Folder`. Ensure to ask for the fields, `id` and `latest_document_version{uuid,put_url,put_headers}`. The `put_url` is a signed URL with security credentials for uploading the document. The `put_headers` are required request headers for uploading the document. Check out the example to upload a new document to the matter folder of `Matter` with id `1`:\n```json\nRequest\n  POST api/v4/documents?fields=id,latest_document_version{uuid,put_url,put_headers}\n    \"data\": {\n      \"name\": \"file.jpg\",\n      \"parent\": {\n        \"id\": 1,\n        \"type\": \"Matter\"\n      }\n    }\n\nResponse\n  {\n    \"data\": {\n      \"id\": 1234,\n      \"latest_document_version\": {\n        \"uuid\": \"a51faa2c-859e-4c08-a996-2d0bb385df90\",\n        \"put_url\": \"https://s3-us-west-2.amazonaws.com/iris-production/uploads/document_version/file/a51faa2c-859e-4c08-a996-2d0bb385df90/file.jpg?X-Amz-Expires=28800&X-Amz-Date=20171024T214532Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIOYDOZH6YP4VQLOA/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-type%3Bhost%3Bx-amz-server-side-encryption&X-Amz-Signature=afe5000df0972d02884a2219f913bfa62fe2531c75b4fcd1edbcb84d267d2b8e\",\n        \"put_headers\": [\n          {\n            \"name\": \"x-amz-server-side-encryption\",\n            \"value\": \"AES256\"\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"value\": \"image/jpeg\"\n          }\n        ]\n      }\n    }\n  }\n```\nIf the extension is listed in the [IANA Media Types registry](https://www.iana.org/assignments/media-types/media-types.xhtml) Clio will apply the corresponding content type as determined by the file extension when `content_type` is blank. One of the nine possible content types  `content_type` = “text” / “image” / “audio” / “video” / “application” / “font” / “model” / “message” / “multipart” must be submitted if the file type is uncommon, not listed in the [IANA Media Types registry](https://www.iana.org/assignments/media-types/media-types.xhtml) or not obvious from the extension.\n\n### Upload the document\nUpload the document to the `put_url` with the headers from `puts_headers` given in the response of the previous step. Typically the headers include `Content-Type` and `x-amz-server-side-encryption` to match with the signature in the `put_url`. Check out the example to upload the file content using curl:\n```bash\ncurl -X PUT -T file.jpg\n  -H \"Content-Type: image/jpeg\"\n  -H \"x-amz-server-side-encryption: AES256\"\n  \"https://s3-us-west-2.amazonaws.com/iris-production/uploads/document_version/file/a51faa2c-859e-4c08-a996-2d0bb385df90/file.jpg?X-Amz-Expires=28800&X-Amz-Date=20171024T214532Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIOYDOZH6YP4VQLOA/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-type%3Bhost%3Bx-amz-server-side-encryption&X-Amz-Signature=afe5000df0972d02884a2219f913bfa62fe2531c75b4fcd1edbcb84d267d2b8e\"\n```\nIf you need MD5 checksum, you should use multipart upload.\n\n### Mark the document as fully-uploaded\nAfter successfully completing the upload, [mark the document fully uploaded](#operation/Document%23update) with `fully_uploaded` as `true`, and `uuid` given in the first step. Clio will verify if the file is uploaded successfully. If not, it raises `UploadNotFoundError` error. It is possible for the verification to time out, which will return an `UploadTimeoutError` error. When that happens, you will need to retry the request.\n```json\nRequest\n  PATCH api/v4/documents/1234?fields=id,latest_document_version{fully_uploaded}\n    \"data\": {\n      \"uuid\": \"a51faa2c-859e-4c08-a996-2d0bb385df90\",\n      \"fully_uploaded\": \"true\"\n    }\n  }\n\nResponse (success)\n  {\n    \"data\": {\n      \"id\": 12345,\n      \"latest_document_version\": {\n          \"fully_uploaded\": true\n      }\n    }\n  }\nResponse (error)\n  {\n    \"error\": {\n      \"type\": \"UploadNotFoundError\",\n      \"message\": \"A matching remote file was not found for the file named file.jpg with UUID a51faa2c-859e-4c08-a996-2d0bb385df90\"\n    }\n  }\nResponse (timeout)\n  {\n    \"error\": {\n      \"type\": \"UploadTimeoutError\",\n      \"message\": \"A timeout occurred verifying the remote file file.jpg with UUID a51faa2c-859e-4c08-a996-2d0bb385df90. Please try the request again.\"\n    }\n  }\n```\nThe file is now visible in Clio documents and is available to the user for download.\n\n## Uploading a new document version\nIt is same as uploading a new document to Clio except setting the `parent` to an existing `Document`. Check out the example to upload a new document version for the document with id `1234`:\n```json\nRequest\n  POST api/v4/documents?fields=id,latest_document_version{uuid,put_url,put_headers}\n    \"data\": {\n      \"name\": \"file.jpg\",\n      \"parent\": {\n        \"id\": 1234,\n        \"type\": \"Document\"\n      }\n    }\n  }\n```\nThe remaining steps are same as uploading a new document to Clio.\n\n## Uploading a document using multipart upload\nIn general, when a file reaches 100 MB, you should consider using multipart upload instead of uploading in a single operation. Except the last part, each part should be at least 5 MB. Determine the number of file parts and split the file. Optionally, you may compute the base64-encoded 128-bit MD5 mechanism as an end-to-end integrity check for each file part. To determine the base64 MD5 checksum for a file part, you may use `openssl`. Check out the example to split a big pdf and get the checksums of the file parts:\n```bash\nsplit -b 31457280 big.pdf big.pdf.        # break the file to max. 30MB size\nopenssl md5 -binary big.pdf.aa | base64   # F16pda4G0h4lzH7d2/Jbdw==\nopenssl md5 -binary big.pdf.ab | base64   # cRbxEG//GK9rIze5tdYzcg==\nopenssl md5 -binary big.pdf.ac | base64   # Tck0KKU4SrmSp8hsSCuSYg==\nopenssl md5 -binary big.pdf.ad | base64   # CrIt7lbZzVhMV7JzVTkUvw==\n```\n### Create the document\n[Create a document](#operation/Document%23create), specify `multiparts` for multipart upload, and ensure to ask for the fields, `id`, and `latest_document_version{uuid,multiparts}`. A `multipart` consists of `part_number`, `content_length`, and optional `content_md5`. In the response, a `put_url` is appended to the `multipart`. A `put_url` is a signed URL with security credentials for uploading a file part. The signed URL expires in 8 hours. The API can handle maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts, [make a PUT request](#operation/Document%23update) with `uuid`, `fully_uploaded` as `false`, and another set of `multiparts`. It returns a set of `put_url` for the specified `multiparts`. Check out the example to upload a new document to the matter folder of `Matter` with id `1`:\n```json\nRequest\n  POST api/v4/documents?fields=id,latest_document_version{uuid,put_headers,multiparts}\n    \"data\": {\n      \"name\": \"big.pdf\",\n      \"parent\": {\n        \"id\": 1,\n        \"type\": \"Matter\"\n      }\n      \"multiparts\": [\n        {\n          \"part_number\": 1,\n          \"content_length\": 31457280,\n          \"content_md5\": \"F16pda4G0h4lzH7d2/Jbdw==\"\n        },\n        {\n          \"part_number\": 2,\n          \"content_length\": 31457280,\n          \"content_md5\": \"cRbxEG//GK9rIze5tdYzcg==\"\n        },\n        {\n          \"part_number\": 3,\n          \"content_length\": 31457280,\n          \"content_md5\": \"Tck0KKU4SrmSp8hsSCuSYg==\"\n        },\n        {\n          \"part_number\": 4,\n          \"content_length\": 7316647,\n          \"content_md5\": \"CrIt7lbZzVhMV7JzVTkUvw==\"\n        }\n      ]\n    }\n\nResponse\n  {\n    \"data\": {\n      \"id\": 1234,\n      \"latest_document_version\": {\n        \"uuid\": \"eba78724-31e8-4529-b6e2-0f2eef6feeec\",\n        \"put_headers\": [\n            {\n                \"name\": \"x-amz-server-side-encryption\",\n                \"value\": \"AES256\"\n            },\n            {\n                \"name\": \"Content-Type\",\n                \"value\": \"application/pdf\"\n            }\n          ],\n        \"multiparts\": [\n          {\n            \"part_number\": 1,\n            \"put_url\": \"https://s3-us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=1&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIOYDOZH6YP4VQLOA/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=f7b3f29e4aee3abfa93fb42a7969557a2a0d305d223dde641c78421b5a6d62e0\",\n            \"put_headers\": [\n              {\n                  \"name\": \"Content-Length\",\n                  \"value\": \"31457280\"\n              },\n              {\n                  \"name\": \"Content-MD5\",\n                  \"value\": \"F16pda4G0h4lzH7d2/Jbdw==\"\n              }\n            ]\n          },\n          {\n            \"part_number\": 2,\n            \"put_url\": \"https://s3-us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=2&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIOYDOZH6YP4VQLOA/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=47dc30f90202654c13030ccce87e43622bb47e0ad155ae61f6b41e8097803950\",\n            \"put_headers\": [\n              {\n                  \"name\": \"Content-Length\",\n                  \"value\": \"31457280\"\n              },\n              {\n                  \"name\": \"Content-MD5\",\n                  \"value\": \"cRbxEG//GK9rIze5tdYzcg==\"\n              }\n            ]\n          },\n          {\n            \"part_number\": 3,\n            \"put_url\": \"https://s3-us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=3&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIOYDOZH6YP4VQLOA/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=13ca827a73fb2c50e8062ef7e437cfe9158944d998e2770a2ffcd034be6c2fc7\",\n            \"put_headers\": [\n              {\n                  \"name\": \"Content-Length\",\n                  \"value\": \"31457280\"\n              },\n              {\n                  \"name\": \"Content-MD5\",\n                  \"value\": \"Tck0KKU4SrmSp8hsSCuSYg==\"\n              }\n            ]\n          },\n          {\n            \"part_number\": 4,\n            \"put_url\": \"https://s3-us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=4&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIOYDOZH6YP4VQLOA/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=25773f971c4c663b3a87f4d35c5b4c5192c3c999c7efdd69a49bc5bc40677078\",\n            \"put_headers\": [\n              {\n                  \"name\": \"Content-Length\",\n                  \"value\": \"7316647\"\n              },\n              {\n                  \"name\": \"Content-MD5\",\n                  \"value\": \"CrIt7lbZzVhMV7JzVTkUvw==\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n```\n\n### Upload the document\nUpload each multipart to the corresponding `put_url`. You can upload the parts independently and in any order. If transmission of any part fails, you can re-transmit that part without affecting other parts. Make sure to include the headers from `puts_headers`. Typically the headers include `Content-Length`, to match with the signature in the `put_url`. Check out the example using curl:\n```bash\ncurl -X PUT -T big.pdf.part1\n  -H \"Content-Length: 31457280\"\n  \"https://s3-us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=1&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIOYDOZH6YP4VQLOA/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=f7b3f29e4aee3abfa93fb42a7969557a2a0d305d223dde641c78421b5a6d62e0\"\n```\nIf you use MD5 checksum to validate the integrity of upload, include `Content-MD5` in the header:\n```bash\ncurl -X PUT -T big.pdf.part1\n  -H \"Content-Length: 31457280\"\n  -H \"Content-MD5: F16pda4G0h4lzH7d2/Jbdw==\"\n  \"https://s3-us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=1&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIOYDOZH6YP4VQLOA/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=f7b3f29e4aee3abfa93fb42a7969557a2a0d305d223dde641c78421b5a6d62e0\"\n```\nIf the file is invalid or the MD5 is invalid, you may get the following response:\n```bash\n<Error>\n  <Code>BadDigest</Code>\n  <Message>The Content-MD5 you specified did not match what we received.</Message>\n  <ExpectedDigest>F16pda4G0h4lzH7d2/Jbdw==</ExpectedDigest>\n  <CalculatedDigest>Tck0KKU4SrmSp8hsSCuSYg==</CalculatedDigest>\n  <RequestId>85918626116672DD</RequestId>\n  <HostId>AbAoiqYqn8tKwS6gxwI3pc4u02B6u6ORa6MPEJH7IYljBweZp0M8L7Lg2AFOvHxdHz5TwlQpkVs=</HostId>\n</Error>\n```\nAfter the issue is corrected, try to upload to the file part to the `put_url` again.\n\n### Mark the document as fully-uploaded\nAfter successfully completing the upload of all the file parts, [mark the document fully uploaded](#operation/Document%23update) with `fully_uploaded` as `true`, and `uuid` given in the first step. Clio will verify if the file is uploaded successfully. If not, it raises `UploadNotFoundError` error. It is possible for the verification to time out, which will return an `UploadTimeoutError` error. When that happens, you will need to retry the request.\n```json\nRequest\n  PATCH api/v4/documents/1234?fields=id,latest_document_version{fully_uploaded}\n    \"data\": {\n      \"uuid\": \"eba78724-31e8-4529-b6e2-0f2eef6feeec\",\n      \"fully_uploaded\": \"true\"\n    }\n  }\n\nResponse (success)\n  {\n    \"data\": {\n      \"id\": 12345,\n      \"latest_document_version\": {\n          \"fully_uploaded\": true\n      }\n    }\n  }\nResponse (error)\n  {\n    \"error\": {\n      \"type\": \"UploadNotFoundError\",\n      \"message\": \"A matching remote file was not found for the file named file.jpg with UUID a51faa2c-859e-4c08-a996-2d0bb385df90\"\n    }\n  }\nResponse (timeout)\n  {\n    \"error\": {\n      \"type\": \"UploadTimeoutError\",\n      \"message\": \"A timeout occurred verifying the remote file file.jpg with UUID a51faa2c-859e-4c08-a996-2d0bb385df90. Please try the request again.\"\n    }\n  }\n```\nThe file is now visible in Clio documents and is available to the user for download.\n\n## Uploading a new document version using multipart upload\nIt is same as splitting and uploading a new document using multipart upload, except setting the `parent` to an existing `Document`. Check out the example to upload a new document version for the document with id `1234`:\n```bash\nRequest\n  POST api/v4/documents?fields=id,latest_document_version{uuid,put_headers,multiparts}\n    \"data\": {\n      \"name\": \"big.pdf\",\n      \"parent\": {\n        \"id\": 1234,\n        \"type\": \"Document\"\n      }\n      \"multiparts\": [\n        {\n          \"part_number\": 1,\n          \"content_length\": 31457280,\n          \"content_md5\": \"F16pda4G0h4lzH7d2/Jbdw==\"\n        },\n        {\n          \"part_number\": 2,\n          \"content_length\": 31457280,\n          \"content_md5\": \"cRbxEG//GK9rIze5tdYzcg==\"\n        },\n        {\n          \"part_number\": 3,\n          \"content_length\": 31457280,\n          \"content_md5\": \"Tck0KKU4SrmSp8hsSCuSYg==\"\n        },\n        {\n          \"part_number\": 4,\n          \"content_length\": 7316647,\n          \"content_md5\": \"CrIt7lbZzVhMV7JzVTkUvw==\"\n        }\n      ]\n    }\n```\nThe remaining steps are same as uploading a new document to Clio.\n"
    },
    {
      "name": "Document Automations",
      "description": "Document Automation uses Document Templates to create standardized documents. Users select a Document Template (that they have created and uploaded) and a Matter to automatically create a document using information from that Matter (such as addresses, account balances, Matter names, etc.).\n\nDocuments generated using Document Automation are created using [Drawloop](https://www.drawloop.com/), a trusted Clio partner, and are sent through Drawloop’s U.S. servers.\n\n[Support Link](https://support.clio.com/hc/en-us/sections/360000838614-Working-with-Document-Automation)\n"
    },
    {
      "name": "Document Categories",
      "description": "Clio users can add Document Categories to their account to help organize their Documents. When a Document is uploaded or edited, a Document Category can be assigned. Users can filter by Document Category to show all Documents in a certain category across all of the account’s Matters.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203305114-Documents-Working-with-Document-Categories)\n\n[Document Categories in Clio](http://app.clio.com/document_categories)\n"
    },
    {
      "name": "Document Templates",
      "description": "Document Templates are files used to create standardized documents using Clio’s Document Automation feature. Document Templates contain merge fields, which are used to pull information from Clio into the document being generated by Document Automation.\n\nThe supported formats are doc, docx, ppt, pptx, xls, xlsx, pdf and xml.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203359300-Document-Automation-Creating-a-Template)\n"
    },
    {
      "name": "Folders",
      "description": "Files stored in Clio’s Documents section are organized in folders. Folders are automatically generated for new Contacts and Matters. Folders can also be manually created anywhere in the folder structure.\n\n[Support Link](https://support.clio.com/hc/en-us/articles/203467390-Documents-Adding-New-Files-and-Folders)\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Api",
      "tags": [
        "Bulk Actions",
        "Custom Actions (Beta)",
        "Searches",
        "Webhooks"
      ]
    },
    {
      "name": "Activities",
      "tags": [
        "Activities",
        "Activity Descriptions",
        "Activity Rates",
        "Expense Categories",
        "Timers",
        "Utbms Codes",
        "Utbms Sets"
      ]
    },
    {
      "name": "Accounting",
      "tags": [
        "Bank Accounts",
        "Bank Transactions",
        "Bank Transfers"
      ]
    },
    {
      "name": "Billing",
      "tags": [
        "Bills",
        "Billable Clients",
        "Billable Matters",
        "Bulk Bills",
        "Bill Themes",
        "Clio Payments Cards",
        "Interest Charges",
        "Line Items"
      ]
    },
    {
      "name": "Calendars",
      "tags": [
        "Calendars",
        "Calendar Entries",
        "Calendar Visibilities",
        "Reminders"
      ]
    },
    {
      "name": "Communications",
      "tags": [
        "Communications",
        "Conversations",
        "Conversation Messages"
      ]
    },
    {
      "name": "Contacts",
      "tags": [
        "Contacts",
        "Notes",
        "Log Entries"
      ]
    },
    {
      "name": "Court Rules",
      "tags": [
        "Jurisdictions To Triggers",
        "Jurisdictions",
        "Matter Dockets",
        "Service Types"
      ]
    },
    {
      "name": "Custom Fields",
      "tags": [
        "Custom Fields",
        "Custom Field Sets"
      ]
    },
    {
      "name": "Documents",
      "tags": [
        "Document Archives",
        "Document Automations",
        "Document Categories",
        "Document Templates",
        "Documents",
        "Folders"
      ]
    },
    {
      "name": "Imports",
      "tags": [
        "Import Details"
      ]
    },
    {
      "name": "Matters",
      "tags": [
        "Matters",
        "Relationships",
        "Notes",
        "Practice Areas",
        "Log Entries"
      ]
    },
    {
      "name": "Payments",
      "tags": [
        "Allocations",
        "Credit Memos",
        "Payments",
        "Trust Payments"
      ]
    },
    {
      "name": "Reporting",
      "tags": [
        "Reports"
      ]
    },
    {
      "name": "Settings",
      "tags": [
        "Text Snippets",
        "Billing Settings",
        "Currencies"
      ]
    },
    {
      "name": "Tasks",
      "tags": [
        "Tasks",
        "Task Templates",
        "Task Template Lists",
        "Task Types"
      ]
    },
    {
      "name": "Trust",
      "tags": [
        "Trust Line Items",
        "Trust Requests"
      ]
    },
    {
      "name": "Users",
      "tags": [
        "Users",
        "Groups"
      ]
    }
  ],
  "servers": [
    {
      "url": "/api/v4"
    }
  ],
  "components": {
    "requestBodies": {
      "Conversation_updateBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "archived": {
                      "type": "boolean",
                      "description": "Whether or not the Conversation has been archived."
                    },
                    "matter": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single Matter associated with the Conversation. The keyword `null` is not valid for this field."
                        }
                      }
                    },
                    "read": {
                      "type": "boolean",
                      "description": "Whether or not the Conversation has been read."
                    }
                  }
                }
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "archived": {
                      "type": "boolean",
                      "description": "Whether or not the Conversation has been archived."
                    },
                    "matter": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single Matter associated with the Conversation. The keyword `null` is not valid for this field."
                        }
                      }
                    },
                    "read": {
                      "type": "boolean",
                      "description": "Whether or not the Conversation has been read."
                    }
                  }
                }
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "archived": {
                      "type": "boolean",
                      "description": "Whether or not the Conversation has been archived."
                    },
                    "matter": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single Matter associated with the Conversation. The keyword `null` is not valid for this field."
                        }
                      }
                    },
                    "read": {
                      "type": "boolean",
                      "description": "Whether or not the Conversation has been read."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "JSON body"
      },
      "PracticeArea_createBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The code attached to the PracticeArea."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the PracticeArea."
                    }
                  }
                }
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The code attached to the PracticeArea."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the PracticeArea."
                    }
                  }
                }
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The code attached to the PracticeArea."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the PracticeArea."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "JSON body"
      },
      "ActivityRate_createBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "co_counsel_contact_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                    },
                    "contact_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                    },
                    "flat_rate": {
                      "type": "boolean",
                      "description": "Whether this is a flat rate"
                    },
                    "rate": {
                      "type": "number",
                      "format": "double",
                      "description": "Monetary value of this rate. Either hourly value or flat rate value"
                    }
                  }
                }
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "co_counsel_contact_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                    },
                    "contact_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                    },
                    "flat_rate": {
                      "type": "boolean",
                      "description": "Whether this is a flat rate"
                    },
                    "rate": {
                      "type": "number",
                      "format": "double",
                      "description": "Monetary value of this rate. Either hourly value or flat rate value"
                    }
                  }
                }
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "co_counsel_contact_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                    },
                    "contact_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                    },
                    "flat_rate": {
                      "type": "boolean",
                      "description": "Whether this is a flat rate"
                    },
                    "rate": {
                      "type": "number",
                      "format": "double",
                      "description": "Monetary value of this rate. Either hourly value or flat rate value"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "JSON body"
      },
      "BillTheme_updateBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "string",
                      "description": "A string containing settings for the BillTheme.\nValues set in this string will apply to any bill using this BillTheme, unless overridden by the bill.\n\nAvailable settings within this string:\n- \"show\": Values set under this key determine how/if sections will appear on a bill.\n- \"text\": Values set under this key determine what will display if the section is shown.\n- \"css\": Values set under this key determine CSS rules for sections on a bill.\n\nAvailable settings under \"show\":\n- \"client_account\": Can be set to \"hidden\", \"details\", or \"summary\" to control the display and content of this section.\n- \"client_account_details_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_include_matter_transfers\": Can be set to true/false to toggle displaying this section.\n- \"client_account_matter_date_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_details_description_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_title_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_type_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_only_bill_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_other_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_payments_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_receipts_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_summary_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"client_operating_account_omit_balance\": Can be set to true/false to toggle displaying this section.\n- \"clio_payments_amount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_amount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"draft_watermark\": Can be set to true/false to toggle displaying a draft watermark. Will only affect bills in draft.\n- \"envelope_friendly\": Can be set to true/false to toggle size styling for the bill.\n- \"firm_address\": Can be set to true/false to toggle displaying this section.\n- \"firm_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"firm_title\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_memo\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_payable\": Can be set to true/false to toggle displaying this section.\n- \"footer_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"footer_page_numbers\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_issued_date\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"header_on_first_page\": Can be set to true/false to toggle displaying this section.\n- \"interest_date\": Can be set to true/false to toggle displaying this section.\n- \"interest_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_new_line\": Can be set to true/false to toggle displaying a interest descriptions on a new line.\n- \"interest_headings_order\": Should be set to an array that contains the values: [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"] in the order you would like the sections to display on your bills.\n- \"interest_total\": Can be set to true/false to toggle displaying this section.\n- \"interest_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"interest_type\": Can be set to true/false to toggle displaying this section.\n- \"interest_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"invoice_information_due_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_issue_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_title\": Can be set to true/false to toggle displaying this section.\n- \"logo\": Can be set to true/false to toggle displaying this section.\n- \"logo_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_attorney_display\": Can be set to \"name\" or \"initials\" to control the content shown in this section.\n- \"matter_attorney_initials\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_summary_position_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_summary_time_keeper_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_client_ref\": Can be set to true/false to toggle displaying this section.\n- \"matter_date\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_new_line\": Can be set to true/false to toggle displaying a matter descriptions on a new line.\n- \"matter_details_description_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_heading_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_headings_order\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_expenses\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_products\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_trust\": Should be set to an array that contains the values: [\"matter_date\", \"matter_details_description\", \"matter_total\"] in the order you would like the sections to display on your bills.\n- \"matter_individual_payments\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_items_activity_descriptions\": Can be set to true/false to toggle displaying this section.\n- \"matter_number\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_separate_line_items\": Can be set to true/false to toggle displaying this section.\n- \"matter_show_amount_with_percentage\": Can be set to true/false to toggle displaying this section.\n- \"matter_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_with_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_with_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"matter_totals_subtotal_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_type\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_products\": Can be set to true/false to toggle displaying this section.\n- \"payment_profile_discount\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have an early payment discount.\n- \"payment_profile_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a grace period.\n- \"payment_profile_interest\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a recurring interest charge.\n- \"payment_profile_no_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill has a grace period.\n- \"show_clio_payments\": Can be set to true/false to toggle displaying this section.\n- \"soa_title\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_amount_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_amount_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_details\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_due_on_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_due_on_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_include_trust\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_invoice_number_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_invoice_number_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_note\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if \"statement_of_accounts_summary\" is \"hidden\".\n- \"statement_of_accounts_payments_received_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_payments_received_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_summary\": Can be set to \"hidden\", \"above\", or \"below\" to control the location of this section. This will determine if the statements of account section on the bill is displayed, and if it displays above or below the line items.\n- \"statement_of_accounts_summary_detail\": Can be set to \"simple\", \"with_payment\", or \"with_account_balance\" to control the values shown in this section.\n- \"statement_of_accounts_summary_only_bill_matters\": Can be set to true/false to control the values shown in this section.\n- \"void_watermark\": Can be set to true/false to toggle displaying a void watermark. Will only affect bills that have been void.\n\n\nAvailable settings under \"text\", each of these can be set to the text you would like to display when they are shown, some of these fields allow substituting values with codes wrapped in curly braces:\n- \"address_email\"\n- \"address_fax\"\n- \"address_phone\"\n- \"attorney_summary_position\"\n- \"attorney_summary_time_keeper\"\n- \"client_account_account\"\n- \"client_account_balance\"\n- \"client_account_payments\"\n- \"client_account_receipts\"\n- \"client_account_total_balance\"\n- \"clio_payments_amount\"\n- \"clio_payments_date\"\n- \"clio_payments_note\"\n- \"clio_payments_reference\"\n- \"clio_payments_status\"\n- \"clio_payments_title\"\n- \"clio_payments_total\"\n- \"discount_early_payment_balance_owing_text\"\n- \"discount_early_payment_end_date_text\"\n- \"discount_early_payment_text\"\n- \"discount_early_payment_total_text\"\n- \"footer_invoice_memo\"\n  - {{billing_setting_memo}}\" can be used to reference your billing settings memo.\n  - {{bill_memo}} can be used to reference your bills memo.\n- \"footer_invoice_payable\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"footer_page\"\n- \"footer_page_of\"\n- \"grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"interest_date_text\"\n- \"interest_details_description_text\"\n- \"interest_subtotal_text\"\n- \"interest_text\"\n- \"interest_title_text\"\n- \"interest_total_text\"\n- \"interest_type_text\"\n- \"invoice_due_date_text\"\n- \"invoice_information_due_date_receipt_text\"\n- \"invoice_issued_date_text\"\n- \"invoice_lc\"\n- \"invoice_number_text\"\n- \"invoice_purchase_order_text\"\n- \"invoice_title\"\n- \"matter_attorney_initials_text\"\n- \"matter_balance_owing_text\"\n- \"matter_client_ref\"\n  - {{client_ref_num}}\" can be used to reference the matters client reference.\n- \"matter_credit_note_text\"\n- \"matter_date_text\"\n- \"matter_details_description_text\"\n- \"matter_discount_text\"\n- \"matter_expense_subtotal_text\"\n- \"matter_expense_text\"\n- \"matter_expense_title_text\"\n- \"matter_grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"matter_line_item_discount_expenses_text\"\n- \"matter_line_item_discount_products_text\"client_address_custom\"\n- \"matter_line_item_discount_subtotal_text\"\n- \"matter_line_item_discount_text\"\n- \"matter_payment_text\"\n- \"matter_product_subtotal_text\"\n- \"matter_product_text\"\n- \"matter_product_title_text\"\n- \"matter_quantity_expenses_text\"\n- \"matter_quantity_products_text\"\n- \"matter_quantity_subtotal_text\"\n- \"matter_quantity_text\"\n- \"matter_quantity_total_text\"\n- \"matter_rate_expenses_text\"\n- \"matter_rate_products_text\"\n- \"matter_rate_text\"\n- \"matter_refund_text\"\n- \"matter_service_subtotal_text\"\n- \"matter_service_text\"\n- \"matter_service_title_text\"\n- \"matter_subtotal_text\"\n- \"matter_tax_text\"\n- \"matter_title\"\n- \"matter_total_text\"\n- \"matter_total_with_tax_text\"\n- \"matter_trust_line_items_title_text\"\n- \"matter_trust_text\"\n- \"matter_type_text\"\n- \"payment_profile\"\n- \"payment_profile_discount\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_interest\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_no_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"remittance_checks\"\n- \"remittance_checks_label\"\n- \"remittance_checks_title\"\n- \"remittance_note\"\n  - {{bill_number}} can be used to reference the bills number.\n- \"remittance_note_soa\"\n- \"remittance_title\"\n- \"remittance_wire_bank_account\"\n- \"remittance_wire_bank_account_label\"\n- \"remittance_wire_bank_name\"\n- \"remittance_wire_bank_name_label\"\n- \"remittance_wire_bank_routing\"\n- \"remittance_wire_bank_routing_label\"\n- \"remittance_wire_bank_swift\"\n- \"remittance_wire_bank_swift_label\"\n- \"remittance_wire_title\"\n- \"soa_title\"\n- \"statement_of_accounts_amount\"\n- \"statement_of_accounts_amount_in_trust\"\n- \"statement_of_accounts_amount_on_account\"\n- \"statement_of_accounts_balance\"\n- \"statement_of_accounts_current_invoice\"\n- \"statement_of_accounts_details_title\"\n- \"statement_of_accounts_due_on\"\n- \"statement_of_accounts_invoice_number\"\n- \"statement_of_accounts_new_charges\"\n- \"statement_of_accounts_note\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"statement_of_accounts_original_invoice_number\"\n- \"statement_of_accounts_other_interest_invoices\"\n- \"statement_of_accounts_other_invoices\"\n- \"statement_of_accounts_outstanding_balance\"\n- \"statement_of_accounts_payments\"\n- \"statement_of_accounts_summary_title\"\n- \"statement_of_accounts_total_balance\"\n- \"statement_of_accounts_total_credit\"\n- \"statement_of_accounts_total_outstanding_balance\"\n- \"trust_request_adjustments_title_text\"\n- \"trust_request_lc\"\n- \"trust_request_number_text\"\n- \"trust_request_title\"\n- \"trust_request_total_text\"\n\n\nAvailable settings under \"css\", each of these has nested values that can be set to apply CSS rules to bills:\n- \"client\"\n  - \"color\": Color used in the client section. Value is in 'Hex'.\n  - \"font-family\": Font used in client section.\n  - \"font-size\": Font size in client section. Value is in 'em'.\n- \"client_address\"\n  - \"margin-bottom\": Bottom margin size for the client address. Value is in 'em'.\n- \"firm_title\"\n  - \"margin-bottom\": Bottom margin height for the bills firm title. Value is in 'em'.\n  - \"color\": Color for the bills firm title section. Value is in 'Hex'.\n  - \"font-family\": Font used for text in the firm title.\n  - \"font-size\": Font size for the bills firm title. Value is in 'em'.\n  - \"border-color\": Border color property for the firm title on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the firm title on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for table rows on a bill. Accepts standard CSS options for 'border-width' property.\n  - \"background-color\": Background color for the firm title on a bill. Value is in 'Hex'.\n- \"header\"\n  - \"margin-bottom\": Bottom margin size for the bill header. Value is in 'em'.\n- \"inside_margins\"\n  - \"font-family\": Primary font used on the bill.\n  - \"font-size\": Primary font size used for bill.\n  - \"color\": Primary font used on the bill, default is \"Arial\".\n- \"invoice_title\"\n  - \"color\": Color used in the invoice title section. Value is in 'Hex'.\n  - \"font-family\": Font used in invoice title section.\n  - \"font-size\": Font size in invoice title section. Value is in 'em'.\n- \"logo_img\"\n  - \"height\": Height for the bills logo image. Value is in 'em'.\n  - \"margin-top\": Top margin height for the bills logo image. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin height for the bills logo image. Value is in 'em'.\n- \"matter_description\"\n  - \"margin-top\": Top margin size for matter description section. Value is in 'em'.\n  - \"color\": Color used in the matter description section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter description section.\n  - \"font-size\": Font size in matter description section. Value is in 'em'.\n- \"matter_number\"\n  - \"color\": Color used in the matter number section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter number section.\n  - \"font-size\": Font size in matter number section. Value is in 'em'.\n- \"page_margins\"\n  - \"margin-left\": Left margin size for the bill. Value is in 'em'.\n  - \"margin-right\": Right margin size for the bill. Value is in 'em'.\n  - \"margin-top\": Top margin size for the bill. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin size for the bill. Value is in 'em'.\n  - \"size\": Size property for the bill, default is \"US-Letter\".\n- \"remittance_title\"\n  - \"color\": Color used in the remittance title section. Value is in 'Hex'.\n  - \"font-family\": Font used in remittance title section.\n  - \"font-size\": Font size in remittance title section. Value is in 'em'.\n  - \"background-color\": Background color for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the remittance title section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the remittance title section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"statement_of_accounts_title\"\n  - \"color\": Color used in the statement of accounts section. Value is in 'Hex'.\n  - \"font-family\": Font used in statement of accounts section.\n  - \"font-size\": Font size in statement of accounts section. Value is in 'em'.\n  - \"background-color\": Background color for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"table_even_line\"\n  - \"background-color\": Background color for even table rows. Value is in 'Hex'.\n- \"table_h4\"\n  - \"background-color\": Background color for table headers. Value is in 'Hex'.\n- \"table_line\"\n  - \"border-bottom-width\": Bottom border width for table rows. Value is in 'px'.\n  - \"border-bottom-style\": Bottom border style property for table rows on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-bottom-color\": Bottom border color property for table rows on a bill. Value is in 'Hex'.\n- \"table_odd_line\"\n  - \"background-color\": Background color for odd table rows. Value is in 'Hex'.\n\n\nA config with samples of each type of option is shown below:\n```\n  config = {\n    \"show\": {\n        \"statement_of_accounts_summary\": \"left\"\n        \"statement_of_accounts_note\": true,\n        \"footer_invoice_payable\": true,\n        \"footer_invoice_memo\": true,\n        \"payment_profile_no_grace_period\": true,\n        \"payment_profile_grace_period\": true,\n        \"payment_profile_discount\": true,\n        \"payment_profile_interest\": true,\n        \"interest_headings_order\": [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"]\n      },\n    \"text\": {\n        \"statement_of_accounts_note\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_payable\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_memo\": \"{{bill_memo}}\",\n        \"payment_profile_no_grace_period\": \"Payment is due upon receipt.\",\n        \"payment_profile_grace_period\": \"Please pay within {{grace_period}}.\",\n        \"payment_profile_discount\": \"{{discount_rate}}% discount will be applied if payment is received within {{discount_period}}.\",\n        \"payment_profile_interest\": \"{{interest_rate}}% {{interest_type}} annual interest will be charged every {{interest_period}}.\",\n      },\n    \"css\": {\n      \"statement_of_accounts_title\": {\n        \"color\": \"#00cc00\",\n        \"font-family\": \"Times New Roman\",\n        \"font-size\": \"0.875em\",\n        \"background-color\": \"#ccff99\",\n        \"border-color\": \"#0033ff\",\n        \"border-style\": \"dotted\",\n        \"border-width\": \"thick\"\n      },\n      \"remittance_title\": {\n        \"color\": \"#00ff00\",\n        \"background-color\": \"None\",\n        \"border-color\": \"#0033cc\",\n        \"border-width\": \"medium\",\n        \"border-style\": \"dotted\",\n        \"font-family\": \"Arial\",\n        \"font-size\": \"1.5em\"\n      }\n    }\n  }\n```"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the BillTheme."
                    }
                  }
                }
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "string",
                      "description": "A string containing settings for the BillTheme.\nValues set in this string will apply to any bill using this BillTheme, unless overridden by the bill.\n\nAvailable settings within this string:\n- \"show\": Values set under this key determine how/if sections will appear on a bill.\n- \"text\": Values set under this key determine what will display if the section is shown.\n- \"css\": Values set under this key determine CSS rules for sections on a bill.\n\nAvailable settings under \"show\":\n- \"client_account\": Can be set to \"hidden\", \"details\", or \"summary\" to control the display and content of this section.\n- \"client_account_details_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_include_matter_transfers\": Can be set to true/false to toggle displaying this section.\n- \"client_account_matter_date_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_details_description_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_title_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_type_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_only_bill_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_other_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_payments_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_receipts_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_summary_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"client_operating_account_omit_balance\": Can be set to true/false to toggle displaying this section.\n- \"clio_payments_amount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_amount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"draft_watermark\": Can be set to true/false to toggle displaying a draft watermark. Will only affect bills in draft.\n- \"envelope_friendly\": Can be set to true/false to toggle size styling for the bill.\n- \"firm_address\": Can be set to true/false to toggle displaying this section.\n- \"firm_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"firm_title\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_memo\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_payable\": Can be set to true/false to toggle displaying this section.\n- \"footer_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"footer_page_numbers\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_issued_date\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"header_on_first_page\": Can be set to true/false to toggle displaying this section.\n- \"interest_date\": Can be set to true/false to toggle displaying this section.\n- \"interest_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_new_line\": Can be set to true/false to toggle displaying a interest descriptions on a new line.\n- \"interest_headings_order\": Should be set to an array that contains the values: [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"] in the order you would like the sections to display on your bills.\n- \"interest_total\": Can be set to true/false to toggle displaying this section.\n- \"interest_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"interest_type\": Can be set to true/false to toggle displaying this section.\n- \"interest_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"invoice_information_due_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_issue_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_title\": Can be set to true/false to toggle displaying this section.\n- \"logo\": Can be set to true/false to toggle displaying this section.\n- \"logo_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_attorney_display\": Can be set to \"name\" or \"initials\" to control the content shown in this section.\n- \"matter_attorney_initials\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_summary_position_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_summary_time_keeper_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_client_ref\": Can be set to true/false to toggle displaying this section.\n- \"matter_date\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_new_line\": Can be set to true/false to toggle displaying a matter descriptions on a new line.\n- \"matter_details_description_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_heading_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_headings_order\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_expenses\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_products\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_trust\": Should be set to an array that contains the values: [\"matter_date\", \"matter_details_description\", \"matter_total\"] in the order you would like the sections to display on your bills.\n- \"matter_individual_payments\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_items_activity_descriptions\": Can be set to true/false to toggle displaying this section.\n- \"matter_number\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_separate_line_items\": Can be set to true/false to toggle displaying this section.\n- \"matter_show_amount_with_percentage\": Can be set to true/false to toggle displaying this section.\n- \"matter_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_with_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_with_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"matter_totals_subtotal_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_type\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_products\": Can be set to true/false to toggle displaying this section.\n- \"payment_profile_discount\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have an early payment discount.\n- \"payment_profile_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a grace period.\n- \"payment_profile_interest\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a recurring interest charge.\n- \"payment_profile_no_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill has a grace period.\n- \"show_clio_payments\": Can be set to true/false to toggle displaying this section.\n- \"soa_title\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_amount_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_amount_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_details\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_due_on_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_due_on_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_include_trust\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_invoice_number_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_invoice_number_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_note\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if \"statement_of_accounts_summary\" is \"hidden\".\n- \"statement_of_accounts_payments_received_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_payments_received_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_summary\": Can be set to \"hidden\", \"above\", or \"below\" to control the location of this section. This will determine if the statements of account section on the bill is displayed, and if it displays above or below the line items.\n- \"statement_of_accounts_summary_detail\": Can be set to \"simple\", \"with_payment\", or \"with_account_balance\" to control the values shown in this section.\n- \"statement_of_accounts_summary_only_bill_matters\": Can be set to true/false to control the values shown in this section.\n- \"void_watermark\": Can be set to true/false to toggle displaying a void watermark. Will only affect bills that have been void.\n\n\nAvailable settings under \"text\", each of these can be set to the text you would like to display when they are shown, some of these fields allow substituting values with codes wrapped in curly braces:\n- \"address_email\"\n- \"address_fax\"\n- \"address_phone\"\n- \"attorney_summary_position\"\n- \"attorney_summary_time_keeper\"\n- \"client_account_account\"\n- \"client_account_balance\"\n- \"client_account_payments\"\n- \"client_account_receipts\"\n- \"client_account_total_balance\"\n- \"clio_payments_amount\"\n- \"clio_payments_date\"\n- \"clio_payments_note\"\n- \"clio_payments_reference\"\n- \"clio_payments_status\"\n- \"clio_payments_title\"\n- \"clio_payments_total\"\n- \"discount_early_payment_balance_owing_text\"\n- \"discount_early_payment_end_date_text\"\n- \"discount_early_payment_text\"\n- \"discount_early_payment_total_text\"\n- \"footer_invoice_memo\"\n  - {{billing_setting_memo}}\" can be used to reference your billing settings memo.\n  - {{bill_memo}} can be used to reference your bills memo.\n- \"footer_invoice_payable\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"footer_page\"\n- \"footer_page_of\"\n- \"grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"interest_date_text\"\n- \"interest_details_description_text\"\n- \"interest_subtotal_text\"\n- \"interest_text\"\n- \"interest_title_text\"\n- \"interest_total_text\"\n- \"interest_type_text\"\n- \"invoice_due_date_text\"\n- \"invoice_information_due_date_receipt_text\"\n- \"invoice_issued_date_text\"\n- \"invoice_lc\"\n- \"invoice_number_text\"\n- \"invoice_purchase_order_text\"\n- \"invoice_title\"\n- \"matter_attorney_initials_text\"\n- \"matter_balance_owing_text\"\n- \"matter_client_ref\"\n  - {{client_ref_num}}\" can be used to reference the matters client reference.\n- \"matter_credit_note_text\"\n- \"matter_date_text\"\n- \"matter_details_description_text\"\n- \"matter_discount_text\"\n- \"matter_expense_subtotal_text\"\n- \"matter_expense_text\"\n- \"matter_expense_title_text\"\n- \"matter_grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"matter_line_item_discount_expenses_text\"\n- \"matter_line_item_discount_products_text\"client_address_custom\"\n- \"matter_line_item_discount_subtotal_text\"\n- \"matter_line_item_discount_text\"\n- \"matter_payment_text\"\n- \"matter_product_subtotal_text\"\n- \"matter_product_text\"\n- \"matter_product_title_text\"\n- \"matter_quantity_expenses_text\"\n- \"matter_quantity_products_text\"\n- \"matter_quantity_subtotal_text\"\n- \"matter_quantity_text\"\n- \"matter_quantity_total_text\"\n- \"matter_rate_expenses_text\"\n- \"matter_rate_products_text\"\n- \"matter_rate_text\"\n- \"matter_refund_text\"\n- \"matter_service_subtotal_text\"\n- \"matter_service_text\"\n- \"matter_service_title_text\"\n- \"matter_subtotal_text\"\n- \"matter_tax_text\"\n- \"matter_title\"\n- \"matter_total_text\"\n- \"matter_total_with_tax_text\"\n- \"matter_trust_line_items_title_text\"\n- \"matter_trust_text\"\n- \"matter_type_text\"\n- \"payment_profile\"\n- \"payment_profile_discount\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_interest\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_no_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"remittance_checks\"\n- \"remittance_checks_label\"\n- \"remittance_checks_title\"\n- \"remittance_note\"\n  - {{bill_number}} can be used to reference the bills number.\n- \"remittance_note_soa\"\n- \"remittance_title\"\n- \"remittance_wire_bank_account\"\n- \"remittance_wire_bank_account_label\"\n- \"remittance_wire_bank_name\"\n- \"remittance_wire_bank_name_label\"\n- \"remittance_wire_bank_routing\"\n- \"remittance_wire_bank_routing_label\"\n- \"remittance_wire_bank_swift\"\n- \"remittance_wire_bank_swift_label\"\n- \"remittance_wire_title\"\n- \"soa_title\"\n- \"statement_of_accounts_amount\"\n- \"statement_of_accounts_amount_in_trust\"\n- \"statement_of_accounts_amount_on_account\"\n- \"statement_of_accounts_balance\"\n- \"statement_of_accounts_current_invoice\"\n- \"statement_of_accounts_details_title\"\n- \"statement_of_accounts_due_on\"\n- \"statement_of_accounts_invoice_number\"\n- \"statement_of_accounts_new_charges\"\n- \"statement_of_accounts_note\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"statement_of_accounts_original_invoice_number\"\n- \"statement_of_accounts_other_interest_invoices\"\n- \"statement_of_accounts_other_invoices\"\n- \"statement_of_accounts_outstanding_balance\"\n- \"statement_of_accounts_payments\"\n- \"statement_of_accounts_summary_title\"\n- \"statement_of_accounts_total_balance\"\n- \"statement_of_accounts_total_credit\"\n- \"statement_of_accounts_total_outstanding_balance\"\n- \"trust_request_adjustments_title_text\"\n- \"trust_request_lc\"\n- \"trust_request_number_text\"\n- \"trust_request_title\"\n- \"trust_request_total_text\"\n\n\nAvailable settings under \"css\", each of these has nested values that can be set to apply CSS rules to bills:\n- \"client\"\n  - \"color\": Color used in the client section. Value is in 'Hex'.\n  - \"font-family\": Font used in client section.\n  - \"font-size\": Font size in client section. Value is in 'em'.\n- \"client_address\"\n  - \"margin-bottom\": Bottom margin size for the client address. Value is in 'em'.\n- \"firm_title\"\n  - \"margin-bottom\": Bottom margin height for the bills firm title. Value is in 'em'.\n  - \"color\": Color for the bills firm title section. Value is in 'Hex'.\n  - \"font-family\": Font used for text in the firm title.\n  - \"font-size\": Font size for the bills firm title. Value is in 'em'.\n  - \"border-color\": Border color property for the firm title on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the firm title on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for table rows on a bill. Accepts standard CSS options for 'border-width' property.\n  - \"background-color\": Background color for the firm title on a bill. Value is in 'Hex'.\n- \"header\"\n  - \"margin-bottom\": Bottom margin size for the bill header. Value is in 'em'.\n- \"inside_margins\"\n  - \"font-family\": Primary font used on the bill.\n  - \"font-size\": Primary font size used for bill.\n  - \"color\": Primary font used on the bill, default is \"Arial\".\n- \"invoice_title\"\n  - \"color\": Color used in the invoice title section. Value is in 'Hex'.\n  - \"font-family\": Font used in invoice title section.\n  - \"font-size\": Font size in invoice title section. Value is in 'em'.\n- \"logo_img\"\n  - \"height\": Height for the bills logo image. Value is in 'em'.\n  - \"margin-top\": Top margin height for the bills logo image. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin height for the bills logo image. Value is in 'em'.\n- \"matter_description\"\n  - \"margin-top\": Top margin size for matter description section. Value is in 'em'.\n  - \"color\": Color used in the matter description section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter description section.\n  - \"font-size\": Font size in matter description section. Value is in 'em'.\n- \"matter_number\"\n  - \"color\": Color used in the matter number section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter number section.\n  - \"font-size\": Font size in matter number section. Value is in 'em'.\n- \"page_margins\"\n  - \"margin-left\": Left margin size for the bill. Value is in 'em'.\n  - \"margin-right\": Right margin size for the bill. Value is in 'em'.\n  - \"margin-top\": Top margin size for the bill. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin size for the bill. Value is in 'em'.\n  - \"size\": Size property for the bill, default is \"US-Letter\".\n- \"remittance_title\"\n  - \"color\": Color used in the remittance title section. Value is in 'Hex'.\n  - \"font-family\": Font used in remittance title section.\n  - \"font-size\": Font size in remittance title section. Value is in 'em'.\n  - \"background-color\": Background color for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the remittance title section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the remittance title section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"statement_of_accounts_title\"\n  - \"color\": Color used in the statement of accounts section. Value is in 'Hex'.\n  - \"font-family\": Font used in statement of accounts section.\n  - \"font-size\": Font size in statement of accounts section. Value is in 'em'.\n  - \"background-color\": Background color for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"table_even_line\"\n  - \"background-color\": Background color for even table rows. Value is in 'Hex'.\n- \"table_h4\"\n  - \"background-color\": Background color for table headers. Value is in 'Hex'.\n- \"table_line\"\n  - \"border-bottom-width\": Bottom border width for table rows. Value is in 'px'.\n  - \"border-bottom-style\": Bottom border style property for table rows on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-bottom-color\": Bottom border color property for table rows on a bill. Value is in 'Hex'.\n- \"table_odd_line\"\n  - \"background-color\": Background color for odd table rows. Value is in 'Hex'.\n\n\nA config with samples of each type of option is shown below:\n```\n  config = {\n    \"show\": {\n        \"statement_of_accounts_summary\": \"left\"\n        \"statement_of_accounts_note\": true,\n        \"footer_invoice_payable\": true,\n        \"footer_invoice_memo\": true,\n        \"payment_profile_no_grace_period\": true,\n        \"payment_profile_grace_period\": true,\n        \"payment_profile_discount\": true,\n        \"payment_profile_interest\": true,\n        \"interest_headings_order\": [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"]\n      },\n    \"text\": {\n        \"statement_of_accounts_note\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_payable\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_memo\": \"{{bill_memo}}\",\n        \"payment_profile_no_grace_period\": \"Payment is due upon receipt.\",\n        \"payment_profile_grace_period\": \"Please pay within {{grace_period}}.\",\n        \"payment_profile_discount\": \"{{discount_rate}}% discount will be applied if payment is received within {{discount_period}}.\",\n        \"payment_profile_interest\": \"{{interest_rate}}% {{interest_type}} annual interest will be charged every {{interest_period}}.\",\n      },\n    \"css\": {\n      \"statement_of_accounts_title\": {\n        \"color\": \"#00cc00\",\n        \"font-family\": \"Times New Roman\",\n        \"font-size\": \"0.875em\",\n        \"background-color\": \"#ccff99\",\n        \"border-color\": \"#0033ff\",\n        \"border-style\": \"dotted\",\n        \"border-width\": \"thick\"\n      },\n      \"remittance_title\": {\n        \"color\": \"#00ff00\",\n        \"background-color\": \"None\",\n        \"border-color\": \"#0033cc\",\n        \"border-width\": \"medium\",\n        \"border-style\": \"dotted\",\n        \"font-family\": \"Arial\",\n        \"font-size\": \"1.5em\"\n      }\n    }\n  }\n```"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the BillTheme."
                    }
                  }
                }
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "string",
                      "description": "A string containing settings for the BillTheme.\nValues set in this string will apply to any bill using this BillTheme, unless overridden by the bill.\n\nAvailable settings within this string:\n- \"show\": Values set under this key determine how/if sections will appear on a bill.\n- \"text\": Values set under this key determine what will display if the section is shown.\n- \"css\": Values set under this key determine CSS rules for sections on a bill.\n\nAvailable settings under \"show\":\n- \"client_account\": Can be set to \"hidden\", \"details\", or \"summary\" to control the display and content of this section.\n- \"client_account_details_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_include_matter_transfers\": Can be set to true/false to toggle displaying this section.\n- \"client_account_matter_date_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_details_description_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_title_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_type_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_only_bill_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_other_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_payments_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_receipts_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_summary_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"client_operating_account_omit_balance\": Can be set to true/false to toggle displaying this section.\n- \"clio_payments_amount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_amount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"draft_watermark\": Can be set to true/false to toggle displaying a draft watermark. Will only affect bills in draft.\n- \"envelope_friendly\": Can be set to true/false to toggle size styling for the bill.\n- \"firm_address\": Can be set to true/false to toggle displaying this section.\n- \"firm_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"firm_title\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_memo\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_payable\": Can be set to true/false to toggle displaying this section.\n- \"footer_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"footer_page_numbers\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_issued_date\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"header_on_first_page\": Can be set to true/false to toggle displaying this section.\n- \"interest_date\": Can be set to true/false to toggle displaying this section.\n- \"interest_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_new_line\": Can be set to true/false to toggle displaying a interest descriptions on a new line.\n- \"interest_headings_order\": Should be set to an array that contains the values: [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"] in the order you would like the sections to display on your bills.\n- \"interest_total\": Can be set to true/false to toggle displaying this section.\n- \"interest_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"interest_type\": Can be set to true/false to toggle displaying this section.\n- \"interest_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"invoice_information_due_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_issue_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_title\": Can be set to true/false to toggle displaying this section.\n- \"logo\": Can be set to true/false to toggle displaying this section.\n- \"logo_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_attorney_display\": Can be set to \"name\" or \"initials\" to control the content shown in this section.\n- \"matter_attorney_initials\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_summary_position_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_summary_time_keeper_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_client_ref\": Can be set to true/false to toggle displaying this section.\n- \"matter_date\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_new_line\": Can be set to true/false to toggle displaying a matter descriptions on a new line.\n- \"matter_details_description_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_heading_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_headings_order\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_expenses\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_products\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_trust\": Should be set to an array that contains the values: [\"matter_date\", \"matter_details_description\", \"matter_total\"] in the order you would like the sections to display on your bills.\n- \"matter_individual_payments\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_items_activity_descriptions\": Can be set to true/false to toggle displaying this section.\n- \"matter_number\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_separate_line_items\": Can be set to true/false to toggle displaying this section.\n- \"matter_show_amount_with_percentage\": Can be set to true/false to toggle displaying this section.\n- \"matter_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_with_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_with_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"matter_totals_subtotal_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_type\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_products\": Can be set to true/false to toggle displaying this section.\n- \"payment_profile_discount\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have an early payment discount.\n- \"payment_profile_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a grace period.\n- \"payment_profile_interest\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a recurring interest charge.\n- \"payment_profile_no_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill has a grace period.\n- \"show_clio_payments\": Can be set to true/false to toggle displaying this section.\n- \"soa_title\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_amount_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_amount_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_details\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_due_on_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_due_on_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_include_trust\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_invoice_number_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_invoice_number_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_note\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if \"statement_of_accounts_summary\" is \"hidden\".\n- \"statement_of_accounts_payments_received_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_payments_received_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_summary\": Can be set to \"hidden\", \"above\", or \"below\" to control the location of this section. This will determine if the statements of account section on the bill is displayed, and if it displays above or below the line items.\n- \"statement_of_accounts_summary_detail\": Can be set to \"simple\", \"with_payment\", or \"with_account_balance\" to control the values shown in this section.\n- \"statement_of_accounts_summary_only_bill_matters\": Can be set to true/false to control the values shown in this section.\n- \"void_watermark\": Can be set to true/false to toggle displaying a void watermark. Will only affect bills that have been void.\n\n\nAvailable settings under \"text\", each of these can be set to the text you would like to display when they are shown, some of these fields allow substituting values with codes wrapped in curly braces:\n- \"address_email\"\n- \"address_fax\"\n- \"address_phone\"\n- \"attorney_summary_position\"\n- \"attorney_summary_time_keeper\"\n- \"client_account_account\"\n- \"client_account_balance\"\n- \"client_account_payments\"\n- \"client_account_receipts\"\n- \"client_account_total_balance\"\n- \"clio_payments_amount\"\n- \"clio_payments_date\"\n- \"clio_payments_note\"\n- \"clio_payments_reference\"\n- \"clio_payments_status\"\n- \"clio_payments_title\"\n- \"clio_payments_total\"\n- \"discount_early_payment_balance_owing_text\"\n- \"discount_early_payment_end_date_text\"\n- \"discount_early_payment_text\"\n- \"discount_early_payment_total_text\"\n- \"footer_invoice_memo\"\n  - {{billing_setting_memo}}\" can be used to reference your billing settings memo.\n  - {{bill_memo}} can be used to reference your bills memo.\n- \"footer_invoice_payable\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"footer_page\"\n- \"footer_page_of\"\n- \"grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"interest_date_text\"\n- \"interest_details_description_text\"\n- \"interest_subtotal_text\"\n- \"interest_text\"\n- \"interest_title_text\"\n- \"interest_total_text\"\n- \"interest_type_text\"\n- \"invoice_due_date_text\"\n- \"invoice_information_due_date_receipt_text\"\n- \"invoice_issued_date_text\"\n- \"invoice_lc\"\n- \"invoice_number_text\"\n- \"invoice_purchase_order_text\"\n- \"invoice_title\"\n- \"matter_attorney_initials_text\"\n- \"matter_balance_owing_text\"\n- \"matter_client_ref\"\n  - {{client_ref_num}}\" can be used to reference the matters client reference.\n- \"matter_credit_note_text\"\n- \"matter_date_text\"\n- \"matter_details_description_text\"\n- \"matter_discount_text\"\n- \"matter_expense_subtotal_text\"\n- \"matter_expense_text\"\n- \"matter_expense_title_text\"\n- \"matter_grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"matter_line_item_discount_expenses_text\"\n- \"matter_line_item_discount_products_text\"client_address_custom\"\n- \"matter_line_item_discount_subtotal_text\"\n- \"matter_line_item_discount_text\"\n- \"matter_payment_text\"\n- \"matter_product_subtotal_text\"\n- \"matter_product_text\"\n- \"matter_product_title_text\"\n- \"matter_quantity_expenses_text\"\n- \"matter_quantity_products_text\"\n- \"matter_quantity_subtotal_text\"\n- \"matter_quantity_text\"\n- \"matter_quantity_total_text\"\n- \"matter_rate_expenses_text\"\n- \"matter_rate_products_text\"\n- \"matter_rate_text\"\n- \"matter_refund_text\"\n- \"matter_service_subtotal_text\"\n- \"matter_service_text\"\n- \"matter_service_title_text\"\n- \"matter_subtotal_text\"\n- \"matter_tax_text\"\n- \"matter_title\"\n- \"matter_total_text\"\n- \"matter_total_with_tax_text\"\n- \"matter_trust_line_items_title_text\"\n- \"matter_trust_text\"\n- \"matter_type_text\"\n- \"payment_profile\"\n- \"payment_profile_discount\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_interest\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_no_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"remittance_checks\"\n- \"remittance_checks_label\"\n- \"remittance_checks_title\"\n- \"remittance_note\"\n  - {{bill_number}} can be used to reference the bills number.\n- \"remittance_note_soa\"\n- \"remittance_title\"\n- \"remittance_wire_bank_account\"\n- \"remittance_wire_bank_account_label\"\n- \"remittance_wire_bank_name\"\n- \"remittance_wire_bank_name_label\"\n- \"remittance_wire_bank_routing\"\n- \"remittance_wire_bank_routing_label\"\n- \"remittance_wire_bank_swift\"\n- \"remittance_wire_bank_swift_label\"\n- \"remittance_wire_title\"\n- \"soa_title\"\n- \"statement_of_accounts_amount\"\n- \"statement_of_accounts_amount_in_trust\"\n- \"statement_of_accounts_amount_on_account\"\n- \"statement_of_accounts_balance\"\n- \"statement_of_accounts_current_invoice\"\n- \"statement_of_accounts_details_title\"\n- \"statement_of_accounts_due_on\"\n- \"statement_of_accounts_invoice_number\"\n- \"statement_of_accounts_new_charges\"\n- \"statement_of_accounts_note\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"statement_of_accounts_original_invoice_number\"\n- \"statement_of_accounts_other_interest_invoices\"\n- \"statement_of_accounts_other_invoices\"\n- \"statement_of_accounts_outstanding_balance\"\n- \"statement_of_accounts_payments\"\n- \"statement_of_accounts_summary_title\"\n- \"statement_of_accounts_total_balance\"\n- \"statement_of_accounts_total_credit\"\n- \"statement_of_accounts_total_outstanding_balance\"\n- \"trust_request_adjustments_title_text\"\n- \"trust_request_lc\"\n- \"trust_request_number_text\"\n- \"trust_request_title\"\n- \"trust_request_total_text\"\n\n\nAvailable settings under \"css\", each of these has nested values that can be set to apply CSS rules to bills:\n- \"client\"\n  - \"color\": Color used in the client section. Value is in 'Hex'.\n  - \"font-family\": Font used in client section.\n  - \"font-size\": Font size in client section. Value is in 'em'.\n- \"client_address\"\n  - \"margin-bottom\": Bottom margin size for the client address. Value is in 'em'.\n- \"firm_title\"\n  - \"margin-bottom\": Bottom margin height for the bills firm title. Value is in 'em'.\n  - \"color\": Color for the bills firm title section. Value is in 'Hex'.\n  - \"font-family\": Font used for text in the firm title.\n  - \"font-size\": Font size for the bills firm title. Value is in 'em'.\n  - \"border-color\": Border color property for the firm title on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the firm title on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for table rows on a bill. Accepts standard CSS options for 'border-width' property.\n  - \"background-color\": Background color for the firm title on a bill. Value is in 'Hex'.\n- \"header\"\n  - \"margin-bottom\": Bottom margin size for the bill header. Value is in 'em'.\n- \"inside_margins\"\n  - \"font-family\": Primary font used on the bill.\n  - \"font-size\": Primary font size used for bill.\n  - \"color\": Primary font used on the bill, default is \"Arial\".\n- \"invoice_title\"\n  - \"color\": Color used in the invoice title section. Value is in 'Hex'.\n  - \"font-family\": Font used in invoice title section.\n  - \"font-size\": Font size in invoice title section. Value is in 'em'.\n- \"logo_img\"\n  - \"height\": Height for the bills logo image. Value is in 'em'.\n  - \"margin-top\": Top margin height for the bills logo image. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin height for the bills logo image. Value is in 'em'.\n- \"matter_description\"\n  - \"margin-top\": Top margin size for matter description section. Value is in 'em'.\n  - \"color\": Color used in the matter description section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter description section.\n  - \"font-size\": Font size in matter description section. Value is in 'em'.\n- \"matter_number\"\n  - \"color\": Color used in the matter number section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter number section.\n  - \"font-size\": Font size in matter number section. Value is in 'em'.\n- \"page_margins\"\n  - \"margin-left\": Left margin size for the bill. Value is in 'em'.\n  - \"margin-right\": Right margin size for the bill. Value is in 'em'.\n  - \"margin-top\": Top margin size for the bill. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin size for the bill. Value is in 'em'.\n  - \"size\": Size property for the bill, default is \"US-Letter\".\n- \"remittance_title\"\n  - \"color\": Color used in the remittance title section. Value is in 'Hex'.\n  - \"font-family\": Font used in remittance title section.\n  - \"font-size\": Font size in remittance title section. Value is in 'em'.\n  - \"background-color\": Background color for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the remittance title section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the remittance title section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"statement_of_accounts_title\"\n  - \"color\": Color used in the statement of accounts section. Value is in 'Hex'.\n  - \"font-family\": Font used in statement of accounts section.\n  - \"font-size\": Font size in statement of accounts section. Value is in 'em'.\n  - \"background-color\": Background color for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"table_even_line\"\n  - \"background-color\": Background color for even table rows. Value is in 'Hex'.\n- \"table_h4\"\n  - \"background-color\": Background color for table headers. Value is in 'Hex'.\n- \"table_line\"\n  - \"border-bottom-width\": Bottom border width for table rows. Value is in 'px'.\n  - \"border-bottom-style\": Bottom border style property for table rows on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-bottom-color\": Bottom border color property for table rows on a bill. Value is in 'Hex'.\n- \"table_odd_line\"\n  - \"background-color\": Background color for odd table rows. Value is in 'Hex'.\n\n\nA config with samples of each type of option is shown below:\n```\n  config = {\n    \"show\": {\n        \"statement_of_accounts_summary\": \"left\"\n        \"statement_of_accounts_note\": true,\n        \"footer_invoice_payable\": true,\n        \"footer_invoice_memo\": true,\n        \"payment_profile_no_grace_period\": true,\n        \"payment_profile_grace_period\": true,\n        \"payment_profile_discount\": true,\n        \"payment_profile_interest\": true,\n        \"interest_headings_order\": [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"]\n      },\n    \"text\": {\n        \"statement_of_accounts_note\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_payable\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_memo\": \"{{bill_memo}}\",\n        \"payment_profile_no_grace_period\": \"Payment is due upon receipt.\",\n        \"payment_profile_grace_period\": \"Please pay within {{grace_period}}.\",\n        \"payment_profile_discount\": \"{{discount_rate}}% discount will be applied if payment is received within {{discount_period}}.\",\n        \"payment_profile_interest\": \"{{interest_rate}}% {{interest_type}} annual interest will be charged every {{interest_period}}.\",\n      },\n    \"css\": {\n      \"statement_of_accounts_title\": {\n        \"color\": \"#00cc00\",\n        \"font-family\": \"Times New Roman\",\n        \"font-size\": \"0.875em\",\n        \"background-color\": \"#ccff99\",\n        \"border-color\": \"#0033ff\",\n        \"border-style\": \"dotted\",\n        \"border-width\": \"thick\"\n      },\n      \"remittance_title\": {\n        \"color\": \"#00ff00\",\n        \"background-color\": \"None\",\n        \"border-color\": \"#0033cc\",\n        \"border-width\": \"medium\",\n        \"border-style\": \"dotted\",\n        \"font-family\": \"Arial\",\n        \"font-size\": \"1.5em\"\n      }\n    }\n  }\n```"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the BillTheme."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "JSON body"
      },
      "BulkAction_updateBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "cancel": {
                      "type": "boolean",
                      "description": "Whether or not the BulkAction should be canceled. This does not undo any modification already completed."
                    }
                  }
                }
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "cancel": {
                      "type": "boolean",
                      "description": "Whether or not the BulkAction should be canceled. This does not undo any modification already completed."
                    }
                  }
                }
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "cancel": {
                      "type": "boolean",
                      "description": "Whether or not the BulkAction should be canceled. This does not undo any modification already completed."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "JSON body"
      },
      "Group_createBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the Group."
                    }
                  }
                }
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the Group."
                    }
                  }
                }
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the Group."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "JSON body"
      },
      "ImportDetail_update": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "data[file]": {
                  "description": "The ImportDetail file.",
                  "type": "string",
                  "format": "binary"
                },
                "data[file_type]": {
                  "description": "The file type of an ImportDetail.",
                  "type": "string",
                  "enum": [
                    "csv",
                    "ical",
                    "vcard"
                  ]
                },
                "data[import_mappings][]": {
                  "description": "An array of hashes where each hash specifies how to map CSV columns to valid fields in Clio.",
                  "type": "string"
                },
                "data[importer_type]": {
                  "description": "The importer type of an ImportDetail.",
                  "type": "string",
                  "enum": [
                    "contact",
                    "note",
                    "matter",
                    "activity",
                    "task",
                    "relationship",
                    "calendar_entry",
                    "custom_field",
                    "document"
                  ]
                },
                "data[mapping_file]": {
                  "description": "A JSON file consisting of an array of hashes where each hash specifies how to map CSV columns to valid fields in Clio.  This parameter will take precedence over the import_mappings parameter.",
                  "type": "string",
                  "format": "binary"
                },
                "data[source]": {
                  "description": "The source of an ImportDetail.",
                  "type": "string",
                  "enum": [
                    "custom"
                  ]
                }
              }
            }
          }
        }
      },
      "Relationship_createBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "contact": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                        }
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Describe the relationship between a Contact and a Matter."
                    },
                    "matter": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single Matter associated with the Relationship. The keyword `null` is not valid for this field."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "contact": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                        }
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Describe the relationship between a Contact and a Matter."
                    },
                    "matter": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single Matter associated with the Relationship. The keyword `null` is not valid for this field."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "contact": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                        }
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Describe the relationship between a Contact and a Matter."
                    },
                    "matter": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single Matter associated with the Relationship. The keyword `null` is not valid for this field."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "JSON body"
      },
      "CalendarVisibility_updateBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "color": {
                      "enum": [
                        "#367b9c",
                        "#ffa5a4",
                        "#83d17f",
                        "#ffac7b",
                        "#8e3f64",
                        "#c75300",
                        "#009cec",
                        "#62d6b1",
                        "#9eedcb",
                        "#f9a2c4",
                        "#616161",
                        "#bbda81",
                        "#dfd3f8",
                        "#d6c4a5",
                        "#ffd478",
                        "#6ac9de",
                        "#eabbb0",
                        "#bfc2e1",
                        "#dadada",
                        "#cde2f5"
                      ],
                      "type": "string",
                      "description": "Calendar color as seen in the Clio Web UI."
                    },
                    "visible": {
                      "type": "string",
                      "description": "Whether or not the CalendarVisibility should be visible by default in the Clio Web UI."
                    }
                  }
                }
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "color": {
                      "enum": [
                        "#367b9c",
                        "#ffa5a4",
                        "#83d17f",
                        "#ffac7b",
                        "#8e3f64",
                        "#c75300",
                        "#009cec",
                        "#62d6b1",
                        "#9eedcb",
                        "#f9a2c4",
                        "#616161",
                        "#bbda81",
                        "#dfd3f8",
                        "#d6c4a5",
                        "#ffd478",
                        "#6ac9de",
                        "#eabbb0",
                        "#bfc2e1",
                        "#dadada",
                        "#cde2f5"
                      ],
                      "type": "string",
                      "description": "Calendar color as seen in the Clio Web UI."
                    },
                    "visible": {
                      "type": "string",
                      "description": "Whether or not the CalendarVisibility should be visible by default in the Clio Web UI."
                    }
                  }
                }
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "color": {
                      "enum": [
                        "#367b9c",
                        "#ffa5a4",
                        "#83d17f",
                        "#ffac7b",
                        "#8e3f64",
                        "#c75300",
                        "#009cec",
                        "#62d6b1",
                        "#9eedcb",
                        "#f9a2c4",
                        "#616161",
                        "#bbda81",
                        "#dfd3f8",
                        "#d6c4a5",
                        "#ffd478",
                        "#6ac9de",
                        "#eabbb0",
                        "#bfc2e1",
                        "#dadada",
                        "#cde2f5"
                      ],
                      "type": "string",
                      "description": "Calendar color as seen in the Clio Web UI."
                    },
                    "visible": {
                      "type": "string",
                      "description": "Whether or not the CalendarVisibility should be visible by default in the Clio Web UI."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "JSON body"
      },
      "DocumentTemplate_updateBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "document_category": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                        }
                      }
                    },
                    "file": {
                      "type": "string",
                      "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                    },
                    "filename": {
                      "type": "string",
                      "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                    }
                  }
                }
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "document_category": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                        }
                      }
                    },
                    "file": {
                      "type": "string",
                      "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                    },
                    "filename": {
                      "type": "string",
                      "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                    }
                  }
                }
              }
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "document_category": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                        }
                      }
                    },
                    "file": {
                      "type": "string",
                      "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                    },
                    "filename": {
                      "type": "string",
                      "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "JSON body"
      }
    },
    "schemas": {
      "EventDetail": {
        "type": "object",
        "required": [
          "event_type",
          "time"
        ],
        "properties": {
          "event_type": {
            "type": "string",
            "description": "Type of event"
          },
          "time": {
            "type": "string",
            "description": "The time this event occurred (as a ISO-8601 timestamp)"
          }
        }
      },
      "ErrorDetail": {
        "type": "object",
        "required": [
          "type",
          "message"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Unique name for this error"
          },
          "message": {
            "type": "string",
            "description": "Detailed message about the error"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDetail"
          }
        }
      },
      "IdsResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "A list of ids"
          }
        }
      },
      "TrustRequest_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *TrustRequest*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TrustRequest*"
          }
        }
      },
      "TrustRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrustRequest_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "TrustRequest_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "TrustRequest Object Response",
                "$ref": "#/components/schemas/TrustRequest"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TrustRequestShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "TrustRequest Object Response",
            "$ref": "#/components/schemas/TrustRequest"
          }
        }
      },
      "ReminderTemplate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ReminderTemplate*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ReminderTemplate*"
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "description": "The time in minutes to remind user before the subject."
          },
          "notification_type": {
            "type": "string",
            "description": "The type of method to be notified by",
            "enum": [
              "Email",
              "Popup"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ReminderTemplate* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ReminderTemplate* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "ReminderTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReminderTemplate_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "ReminderTemplate_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ReminderTemplate Object Response",
                "$ref": "#/components/schemas/ReminderTemplate"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TaskTemplate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *TaskTemplate*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TaskTemplate*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *TaskTemplate*"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *TaskTemplate*"
          },
          "priority": {
            "type": "string",
            "description": "*TaskTemplate* priority",
            "enum": [
              "High",
              "Normal",
              "Low"
            ]
          },
          "private": {
            "type": "boolean",
            "description": "Whether the *TaskTemplate* is private."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplate* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplate* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TaskTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskTemplate_base"
          },
          {
            "type": "object",
            "properties": {
              "task_template_list": {
                "$ref": "#/components/schemas/TaskTemplateList_base",
                "description": "TaskTemplateList"
              },
              "template_creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "reminder_templates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReminderTemplate_base"
                },
                "description": "ReminderTemplate"
              }
            }
          }
        ]
      },
      "TaskTemplate_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "TaskTemplate Object Response",
                "$ref": "#/components/schemas/TaskTemplate"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TaskTemplateShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "TaskTemplate Object Response",
            "$ref": "#/components/schemas/TaskTemplate"
          }
        }
      },
      "TaskTemplateList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskTemplateList_base"
          },
          {
            "type": "object",
            "properties": {
              "practice_area": {
                "$ref": "#/components/schemas/PracticeArea_base",
                "description": "PracticeArea"
              },
              "creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "TaskTemplateListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TaskTemplate Event List Response",
            "items": {
              "$ref": "#/components/schemas/TaskTemplate_Events"
            }
          }
        }
      },
      "CalendarVisibility_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the *CalendarVisibility*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CalendarVisibility*"
          },
          "color": {
            "type": "string",
            "description": "Calendar color",
            "enum": [
              {
                "r": 0.396078431372549,
                "g": 0.5490196078431373,
                "b": 0.8549019607843137
              },
              {
                "r": 0.8549019607843137,
                "g": 0.4,
                "b": 0.4
              },
              {
                "r": 0.28627450980392155,
                "g": 0.6901960784313725,
                "b": 0.3137254901960784
              },
              {
                "r": 0.9058823529411765,
                "g": 0.5019607843137255,
                "b": 0.2980392156862745
              },
              {
                "r": 0.5490196078431373,
                "g": 0.4,
                "b": 0.8549019607843137
              },
              {
                "r": 0.7686274509803922,
                "g": 0.6588235294117647,
                "b": 0.5098039215686274
              },
              {
                "r": 0.39215686274509803,
                "g": 0.6784313725490196,
                "b": 0.5333333333333333
              },
              {
                "r": 0.5176470588235295,
                "g": 0.6666666666666666,
                "b": 0.6470588235294118
              },
              {
                "r": 0.33725490196078434,
                "g": 0.7490196078431373,
                "b": 0.7019607843137254
              },
              {
                "r": 0.9058823529411765,
                "g": 0.45098039215686275,
                "b": 0.6
              },
              {
                "r": 0.7490196078431373,
                "g": 0.7490196078431373,
                "b": 0.29411764705882354
              },
              {
                "r": 0.5450980392156862,
                "g": 0.7490196078431373,
                "b": 0.23529411764705882
              },
              {
                "r": 0.7058823529411765,
                "g": 0.45098039215686275,
                "b": 0.7058823529411765
              },
              {
                "r": 0.6549019607843137,
                "g": 0.6549019607843137,
                "b": 0.49019607843137253
              },
              {
                "r": 0.9490196078431372,
                "g": 0.6470588235294118,
                "b": 0.23921568627450981
              },
              {
                "r": 0.396078431372549,
                "g": 0.5490196078431373,
                "b": 0.7019607843137254
              },
              {
                "r": 0.7450980392156863,
                "g": 0.5803921568627451,
                "b": 0.5803921568627451
              },
              {
                "r": 0.6627450980392157,
                "g": 0.5725490196078431,
                "b": 0.6627450980392157
              },
              {
                "r": 0.5333333333333333,
                "g": 0.592156862745098,
                "b": 0.6470588235294118
              },
              {
                "r": 0.5764705882352941,
                "g": 0.6352941176470588,
                "b": 0.7450980392156863
              }
            ]
          },
          "light_color": {
            "type": "string",
            "description": "Accent color to complement the main calendar color.",
            "enum": [
              {
                "r": 0.7019607843137254,
                "g": 0.7843137254901961,
                "b": 1
              },
              {
                "r": 1,
                "g": 0.6470588235294118,
                "b": 0.6431372549019608
              },
              {
                "r": 0.5137254901960784,
                "g": 0.8196078431372549,
                "b": 0.4980392156862745
              },
              {
                "r": 1,
                "g": 0.6745098039215687,
                "b": 0.4823529411764706
              },
              {
                "r": 1,
                "g": 0.7450980392156863,
                "b": 0.996078431372549
              },
              {
                "r": 0.8666666666666667,
                "g": 0.7411764705882353,
                "b": 0.37254901960784315
              },
              {
                "r": 0.3764705882352941,
                "g": 0.8862745098039215,
                "b": 1
              },
              {
                "r": 0.3843137254901961,
                "g": 0.8392156862745098,
                "b": 0.6941176470588235
              },
              {
                "r": 0.6196078431372549,
                "g": 0.9294117647058824,
                "b": 0.796078431372549
              },
              {
                "r": 0.9764705882352941,
                "g": 0.6352941176470588,
                "b": 0.7686274509803922
              },
              {
                "r": 0.8745098039215686,
                "g": 0.8784313725490196,
                "b": 0.6078431372549019
              },
              {
                "r": 0.7333333333333333,
                "g": 0.8549019607843137,
                "b": 0.5058823529411764
              },
              {
                "r": 0.8745098039215686,
                "g": 0.8274509803921568,
                "b": 0.9725490196078431
              },
              {
                "r": 0.8392156862745098,
                "g": 0.7686274509803922,
                "b": 0.6470588235294118
              },
              {
                "r": 1,
                "g": 0.8313725490196079,
                "b": 0.47058823529411764
              },
              {
                "r": 0.41568627450980394,
                "g": 0.788235294117647,
                "b": 0.8705882352941177
              },
              {
                "r": 0.9176470588235294,
                "g": 0.7333333333333333,
                "b": 0.6901960784313725
              },
              {
                "r": 0.7490196078431373,
                "g": 0.7607843137254902,
                "b": 0.8823529411764706
              },
              {
                "r": 0.8549019607843137,
                "g": 0.8549019607843137,
                "b": 0.8549019607843137
              },
              {
                "r": 0.803921568627451,
                "g": 0.8862745098039215,
                "b": 0.9607843137254902
              }
            ]
          },
          "visible": {
            "type": "boolean",
            "description": "Whether the *CalendarVisibility* will be shown by default in the Clio Web UI."
          },
          "name": {
            "type": "boolean",
            "description": "Calendar name"
          }
        }
      },
      "CalendarVisibility": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CalendarVisibility_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "CalendarVisibility_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "CalendarVisibility Object Response",
                "$ref": "#/components/schemas/CalendarVisibility"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CalendarVisibilityShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "CalendarVisibility Object Response",
            "$ref": "#/components/schemas/CalendarVisibility"
          }
        }
      },
      "CalendarVisibilityList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CalendarVisibility List Response",
            "items": {
              "$ref": "#/components/schemas/CalendarVisibility"
            }
          }
        }
      },
      "CalendarVisibilityListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CalendarVisibility Event List Response",
            "items": {
              "$ref": "#/components/schemas/CalendarVisibility_Events"
            }
          }
        }
      },
      "TextSnippet_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *TextSnippet*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TextSnippet*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TextSnippet* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TextSnippet* was last updated (as a ISO-8601 timestamp)"
          },
          "snippet": {
            "type": "string",
            "description": "The abbreviation that should be expanded"
          },
          "phrase": {
            "type": "string",
            "description": "The phrase the abbreviation should be expanded to"
          },
          "whole_word": {
            "type": "boolean",
            "description": "Whether the *TextSnippet* abbreviation requires a space after it has been entered to expand to a phrase"
          }
        }
      },
      "TextSnippet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextSnippet_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "TextSnippet_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "TextSnippet Object Response",
                "$ref": "#/components/schemas/TextSnippet"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TextSnippetShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "TextSnippet Object Response",
            "$ref": "#/components/schemas/TextSnippet"
          }
        }
      },
      "TextSnippetList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TextSnippet List Response",
            "items": {
              "$ref": "#/components/schemas/TextSnippet"
            }
          }
        }
      },
      "TextSnippetListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TextSnippet Event List Response",
            "items": {
              "$ref": "#/components/schemas/TextSnippet_Events"
            }
          }
        }
      },
      "Report_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Report*"
          },
          "name": {
            "type": "string",
            "description": "A specified name for the report"
          },
          "state": {
            "type": "string",
            "description": "The current state of the report",
            "enum": [
              "not_started",
              "queued",
              "in_progress",
              "failed",
              "completed",
              null
            ]
          },
          "kind": {
            "type": "string",
            "description": "The kind of report to generate",
            "enum": [
              "revenue",
              "fee_allocation",
              "trust_management",
              "accounts_receivable_aging",
              "finance_mrr",
              "finance_purchases",
              "general_ledger",
              "law_society_of_alberta"
            ]
          },
          "format": {
            "type": "string",
            "description": "The requested format of the report",
            "enum": [
              "pdf",
              "csv",
              "html",
              "zip"
            ]
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "description": "The integer percentage of how complete the report is."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Report* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Report* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Report": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Report_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Report_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Report Object Response",
                "$ref": "#/components/schemas/Report"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ReportShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Report Object Response",
            "$ref": "#/components/schemas/Report"
          }
        }
      },
      "LineItemTotals_base": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "Sum of quantity for included line items."
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "Sum of price for included line items."
          },
          "discount_percent": {
            "type": "number",
            "format": "double",
            "description": "Sum of discount as percentage for included line items."
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "Sum of total for included line items."
          },
          "sub_total": {
            "type": "number",
            "format": "double",
            "description": "Sum of total before discount and tax is applied."
          }
        }
      },
      "LineItemTotals": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItemTotals_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "LineItemTotals_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "LineItemTotals Object Response",
                "$ref": "#/components/schemas/LineItemTotals"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "LineItem_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *LineItem*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *LineItem*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *LineItem*",
            "enum": [
              "ActivityLineItem",
              "LineItem",
              "SummaryLineItem"
            ]
          },
          "description": {
            "type": "string",
            "description": "The description for the *LineItem*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The *LineItem* date (as a ISO-8601 date)"
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "The price of the *LineItem*"
          },
          "taxable": {
            "type": "boolean",
            "description": "Whether the *LineItem* is taxable"
          },
          "kind": {
            "type": "string",
            "description": "The kind of *LineItem*",
            "enum": [
              "Service",
              "Expense"
            ]
          },
          "note": {
            "type": "string",
            "description": "The note attached to the *LineItem*"
          },
          "secondary_taxable": {
            "type": "boolean",
            "description": "Whether the *LineItem* is secondary taxable"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total amount for the *LineItem*"
          },
          "tax": {
            "type": "number",
            "format": "double",
            "description": "The tax amount for the *LineItem*"
          },
          "secondary_tax": {
            "type": "number",
            "format": "double",
            "description": "The secondary tax amount for the *LineItem*"
          },
          "sub_total": {
            "type": "number",
            "format": "double",
            "description": "The subtotal amount for the *LineItem*"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "The amount of hours for the *LineItem*"
          },
          "group_ordering": {
            "type": "integer",
            "format": "int32",
            "description": "The value to specify the ordering of the *LineItem* on a bill"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LineItem* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LineItem* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "LineItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItem_base"
          },
          {
            "type": "object",
            "properties": {
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "activity": {
                "$ref": "#/components/schemas/Activity_base",
                "description": "Activity"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "discount": {
                "$ref": "#/components/schemas/Discount_base",
                "description": "Discount"
              },
              "included_line_item_totals": {
                "$ref": "#/components/schemas/LineItemTotals_base",
                "description": "LineItemTotals"
              }
            }
          }
        ]
      },
      "LineItem_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "LineItem Object Response",
                "$ref": "#/components/schemas/LineItem"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "LineItemShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "LineItem Object Response",
            "$ref": "#/components/schemas/LineItem"
          }
        }
      },
      "LineItemList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LineItem List Response",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          }
        }
      },
      "LineItemListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LineItem Event List Response",
            "items": {
              "$ref": "#/components/schemas/LineItem_Events"
            }
          }
        }
      },
      "InterestCharge_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *InterestCharge*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *InterestCharge*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The *InterestCharge* date (as a ISO-8601 date)"
          },
          "description": {
            "type": "string",
            "description": "The description for the *InterestCharge*"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total amount for the *InterestCharge*"
          }
        }
      },
      "InterestCharge": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InterestCharge_base"
          },
          {
            "type": "object",
            "properties": {
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "balances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Balance_base"
                },
                "description": "Balance"
              },
              "matters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Matter_base"
                },
                "description": "Matter"
              }
            }
          }
        ]
      },
      "InterestCharge_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "InterestCharge Object Response",
                "$ref": "#/components/schemas/InterestCharge"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "InterestChargeList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "InterestCharge List Response",
            "items": {
              "$ref": "#/components/schemas/InterestCharge"
            }
          }
        }
      },
      "InterestChargeListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "InterestCharge Event List Response",
            "items": {
              "$ref": "#/components/schemas/InterestCharge_Events"
            }
          }
        }
      },
      "LogEntry_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *LogEntry*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *LogEntry*",
            "enum": [
              "MatterLogEntry",
              "ContactLogEntry"
            ]
          },
          "accessed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the item was last accessed (as a ISO-8601 timestamp)"
          }
        }
      },
      "LogEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LogEntry_base"
          },
          {
            "type": "object",
            "properties": {
              "item": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "LogEntry_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "LogEntry Object Response",
                "$ref": "#/components/schemas/LogEntry"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "LogEntryList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LogEntry List Response",
            "items": {
              "$ref": "#/components/schemas/LogEntry"
            }
          }
        }
      },
      "LogEntryListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LogEntry Event List Response",
            "items": {
              "$ref": "#/components/schemas/LogEntry_Events"
            }
          }
        }
      },
      "BulkAction_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *BulkAction*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BulkAction*"
          },
          "status": {
            "type": "string",
            "description": "The current status of the *BulkAction* request",
            "enum": [
              "not_started",
              "queued",
              "in_progress",
              "failed",
              "completed",
              "stalled_out",
              "canceled"
            ]
          },
          "performed": {
            "type": "integer",
            "format": "int32",
            "description": "Number of request actions performed"
          },
          "requested": {
            "type": "integer",
            "format": "int32",
            "description": "Estimated total number of request actions. When the data set has 10,000 records or less, it is the actual number of request actions. When the data set has more than 10,000 records, it is an estimation based on the total number of records for the account. It is usually higher than the actual number of requested actions. When the bulk action finishes, it is updated to the number of request actions performed."
          },
          "last_action_performed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the last action performed (as a ISO-8601 timestamp)"
          },
          "response_url": {
            "type": "string",
            "description": "The URL where the response can be downloaded. It is only available once the *BulkAction* is complete."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BulkAction* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BulkAction* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "BulkAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BulkAction_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "BulkAction_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "BulkAction Object Response",
                "$ref": "#/components/schemas/BulkAction"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BulkActionShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "BulkAction Object Response",
            "$ref": "#/components/schemas/BulkAction"
          }
        }
      },
      "BulkActionList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BulkAction List Response",
            "items": {
              "$ref": "#/components/schemas/BulkAction"
            }
          }
        }
      },
      "BulkActionListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BulkAction Event List Response",
            "items": {
              "$ref": "#/components/schemas/BulkAction_Events"
            }
          }
        }
      },
      "CustomAction_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *CustomAction*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CustomAction*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomAction* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomAction* was last updated (as a ISO-8601 timestamp)"
          },
          "label": {
            "type": "string",
            "description": "Text label to be displayed on the custom link."
          },
          "target_url": {
            "type": "string",
            "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
          },
          "ui_reference": {
            "type": "string",
            "description": "UI reference location within Clio where the link will be displayed.",
            "enum": [
              "activities/show",
              "documents/show",
              "contacts/show",
              "matters/show"
            ]
          }
        }
      },
      "CustomAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomAction_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "CustomAction_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "CustomAction Object Response",
                "$ref": "#/components/schemas/CustomAction"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CustomActionShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "CustomAction Object Response",
            "$ref": "#/components/schemas/CustomAction"
          }
        }
      },
      "CustomActionList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CustomAction List Response",
            "items": {
              "$ref": "#/components/schemas/CustomAction"
            }
          }
        }
      },
      "CustomActionListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CustomAction Event List Response",
            "items": {
              "$ref": "#/components/schemas/CustomAction_Events"
            }
          }
        }
      },
      "TrustLineItem_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *TrustLineItem*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TrustLineItem*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date of the *TrustLineItem* (as a ISO-8601 date)"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total amount for the *TrustLineItem*"
          },
          "note": {
            "type": "string",
            "description": "Note for the *TrustLineItem*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TrustLineItem* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TrustLineItem* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TrustLineItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrustLineItem_base"
          },
          {
            "type": "object",
            "properties": {
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "TrustLineItem_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "TrustLineItem Object Response",
                "$ref": "#/components/schemas/TrustLineItem"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TrustLineItemShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "TrustLineItem Object Response",
            "$ref": "#/components/schemas/TrustLineItem"
          }
        }
      },
      "TrustLineItemList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TrustLineItem List Response",
            "items": {
              "$ref": "#/components/schemas/TrustLineItem"
            }
          }
        }
      },
      "TrustLineItemListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TrustLineItem Event List Response",
            "items": {
              "$ref": "#/components/schemas/TrustLineItem_Events"
            }
          }
        }
      },
      "UtbmsSet_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *UtbmsSet*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *UtbmsSet*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *UtbmsSet*"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the *UtbmsSet* is enabled for the current account."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *UtbmsSet* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *UtbmsSet* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "UtbmsSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UtbmsSet_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "UtbmsSet_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "UtbmsSet Object Response",
                "$ref": "#/components/schemas/UtbmsSet"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "UtbmsSetList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "UtbmsSet List Response",
            "items": {
              "$ref": "#/components/schemas/UtbmsSet"
            }
          }
        }
      },
      "UtbmsSetListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "UtbmsSet Event List Response",
            "items": {
              "$ref": "#/components/schemas/UtbmsSet_Events"
            }
          }
        }
      },
      "Webhook_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Webhook*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Webhook*"
          },
          "url": {
            "type": "string",
            "description": "The `https` URL to send the data to when the events are triggered"
          },
          "fields": {
            "type": "string",
            "description": "Fields to be included in the webhook request"
          },
          "shared_secret": {
            "type": "string",
            "description": "A shared secret used to create a signature for the payload"
          },
          "model": {
            "type": "string",
            "description": "What kind of records the webhook is for",
            "enum": [
              "activity",
              "bill",
              "calendar_entry",
              "communication",
              "contact",
              "matter",
              "task"
            ]
          },
          "status": {
            "type": "string",
            "description": "The current status of the webhook.",
            "enum": [
              "pending",
              "enabled",
              "suspended"
            ]
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The events your webhook is subscribed to.",
            "enum": [
              "created",
              "updated",
              "deleted",
              "matter_opened",
              "matter_pended",
              "matter_closed"
            ]
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time webhook will expire (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Webhook* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Webhook* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Webhook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Webhook_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "Webhook_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Webhook Object Response",
                "$ref": "#/components/schemas/Webhook"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "WebhookShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Webhook Object Response",
            "$ref": "#/components/schemas/Webhook"
          }
        }
      },
      "WebhookList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Webhook List Response",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        }
      },
      "WebhookListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Webhook Event List Response",
            "items": {
              "$ref": "#/components/schemas/Webhook_Events"
            }
          }
        }
      },
      "DocumentTemplate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *DocumentTemplate*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentTemplate*"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "The size in bytes of the template"
          },
          "content_type": {
            "type": "string",
            "description": "A standard MIME type describing the format of the object data."
          },
          "filename": {
            "type": "string",
            "description": "The name of the original file that was uploaded"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentTemplate* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentTemplate* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "DocumentTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentTemplate_base"
          },
          {
            "type": "object",
            "properties": {
              "document_category": {
                "$ref": "#/components/schemas/DocumentCategory_base",
                "description": "DocumentCategory"
              },
              "last_modified_by": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "DocumentTemplate_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "DocumentTemplate Object Response",
                "$ref": "#/components/schemas/DocumentTemplate"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "DocumentTemplateShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "DocumentTemplate Object Response",
            "$ref": "#/components/schemas/DocumentTemplate"
          }
        }
      },
      "DocumentTemplateList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentTemplate List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentTemplate"
            }
          }
        }
      },
      "DocumentTemplateListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentTemplate Event List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentTemplate_Events"
            }
          }
        }
      },
      "MultipartHeader_base": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required HTTP header field name for uploading."
          },
          "value": {
            "type": "string",
            "description": "Required HTTP header field value for uploading."
          }
        }
      },
      "MultipartHeader": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MultipartHeader_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "MultipartHeader_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "MultipartHeader Object Response",
                "$ref": "#/components/schemas/MultipartHeader"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ExternalProperty_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ExternalProperty*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *ExternalProperty*"
          },
          "value": {
            "type": "string",
            "description": "The value of the *ExternalProperty*"
          }
        }
      },
      "ExternalProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ExternalProperty_base"
          },
          {
            "type": "object",
            "properties": {
              "subject": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              }
            }
          }
        ]
      },
      "ExternalProperty_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ExternalProperty Object Response",
                "$ref": "#/components/schemas/ExternalProperty"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "DocumentAutomation_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *DocumentAutomation*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentAutomation*"
          },
          "state": {
            "type": "string",
            "description": "A text description of what the automation is currently doing",
            "enum": [
              null
            ]
          },
          "export_formats": {
            "type": "string",
            "description": "An array of what formats were requested",
            "enum": [
              "pdf",
              "original"
            ]
          },
          "filename": {
            "type": "string",
            "description": "The name of the file being generated."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentAutomation* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentAutomation* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "DocumentAutomation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentAutomation_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "document_template": {
                "$ref": "#/components/schemas/DocumentTemplate_base",
                "description": "DocumentTemplate"
              },
              "documents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Document_base"
                },
                "description": "Document"
              }
            }
          }
        ]
      },
      "DocumentAutomation_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "DocumentAutomation Object Response",
                "$ref": "#/components/schemas/DocumentAutomation"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "DocumentAutomationShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "DocumentAutomation Object Response",
            "$ref": "#/components/schemas/DocumentAutomation"
          }
        }
      },
      "DocumentAutomationList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentAutomation List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentAutomation"
            }
          }
        }
      },
      "DocumentAutomationListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentAutomation Event List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentAutomation_Events"
            }
          }
        }
      },
      "DocumentVersion_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *DocumentVersion*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentVersion*"
          },
          "uuid": {
            "type": "string",
            "description": "UUID associated with the DocumentVersion. UUID is required to mark a document fully uploaded."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentVersion* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentVersion* was last updated (as a ISO-8601 timestamp)"
          },
          "filename": {
            "type": "string",
            "description": "The uploaded file name of the DocumentVersion."
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "The size of the the DocumentVersion in bytes."
          },
          "version_number": {
            "type": "integer",
            "format": "int32",
            "description": "The ordered number of when this DocumentVersion was uploaded."
          },
          "content_type": {
            "type": "string",
            "description": "A standard MIME type describing the format of the object data."
          },
          "received_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the DocumentVersion was received (as an ISO-8601 timestamp)"
          },
          "put_url": {
            "type": "string",
            "description": "A signed URL for uploading the file in a single operation. It expires in 10 minutes. If the document is fully uploaded, the field is empty."
          },
          "fully_uploaded": {
            "type": "boolean",
            "description": "True if the DocumentVersion is uploaded. False if the DocumentVersion is being uploaded."
          }
        }
      },
      "DocumentVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentVersion_base"
          },
          {
            "type": "object",
            "properties": {
              "creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "put_headers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultipartHeader_base"
                },
                "description": "MultipartHeader"
              },
              "multiparts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Multipart"
                },
                "description": "Multipart"
              }
            }
          }
        ]
      },
      "DocumentVersion_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "DocumentVersion Object Response",
                "$ref": "#/components/schemas/DocumentVersion"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TaskTemplateListInstace_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *TaskTemplateListInstace*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TaskTemplateListInstace*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplateListInstace* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplateListInstace* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TaskTemplateListInstace": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskTemplateListInstace_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "task_template_list": {
                "$ref": "#/components/schemas/TaskTemplateList_base",
                "description": "TaskTemplateList"
              }
            }
          }
        ]
      },
      "TaskTemplateListInstace_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "TaskTemplateListInstace Object Response",
                "$ref": "#/components/schemas/TaskTemplateListInstace"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ImportMapping_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ImportMapping*"
          },
          "field_type": {
            "type": "string",
            "description": "The type of the field",
            "enum": [
              "string",
              "boolean",
              "date",
              "time"
            ]
          },
          "to": {
            "type": "string",
            "description": "The destination field"
          },
          "from": {
            "type": "string",
            "description": "The source field"
          },
          "default_value": {
            "type": "string",
            "description": "The default value for the field"
          },
          "format": {
            "type": "string",
            "description": "The format of the field"
          }
        }
      },
      "ImportMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImportMapping_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "ImportMapping_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ImportMapping Object Response",
                "$ref": "#/components/schemas/ImportMapping"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ImportDetail_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ImportDetail*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ImportDetail*"
          },
          "status": {
            "type": "string",
            "description": "The current status of the import",
            "enum": [
              "not_started",
              "queued",
              "in_progress",
              "failed",
              "completed",
              null
            ]
          },
          "source": {
            "type": "string",
            "description": "The source of the import",
            "enum": [
              "custom"
            ]
          },
          "importer_type": {
            "type": "string",
            "description": "The importer type of the import",
            "enum": [
              "contact",
              "note",
              "matter",
              "activity",
              "task",
              "relationship",
              "calendar_entry",
              "custom_field",
              "document"
            ]
          },
          "file_type": {
            "type": "string",
            "description": "The file type of the import",
            "enum": [
              "csv",
              "ical",
              "vcard"
            ]
          },
          "has_mappings": {
            "type": "boolean",
            "description": "Whether the import has mappings have been defined"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ImportDetail* was last updated (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ImportDetail* was created (as a ISO-8601 timestamp)"
          },
          "byte_offset": {
            "type": "integer",
            "format": "int32",
            "description": "The number of bytes from the import file that have been processed or are being processed"
          },
          "file_size": {
            "type": "integer",
            "format": "int32",
            "description": "The size of the import file in bytes"
          },
          "error_file_available": {
            "type": "boolean",
            "description": "Whether an error file is available for download"
          },
          "record_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of records successfully created"
          },
          "error_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of errors generated"
          },
          "fatal_error_message": {
            "type": "string",
            "description": "The fatal error message if it exists"
          },
          "undone": {
            "type": "boolean",
            "description": "Whether this import has been undone"
          },
          "stopped": {
            "type": "boolean",
            "description": "Whether this import has been stopped"
          },
          "original_filename": {
            "type": "string",
            "description": "The name of the uploaded import file"
          }
        }
      },
      "ImportDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImportDetail_base"
          },
          {
            "type": "object",
            "properties": {
              "import_mappings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ImportMapping_base"
                },
                "description": "ImportMapping"
              }
            }
          }
        ]
      },
      "ImportDetail_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ImportDetail Object Response",
                "$ref": "#/components/schemas/ImportDetail"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ImportDetailShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "ImportDetail Object Response",
            "$ref": "#/components/schemas/ImportDetail"
          }
        }
      },
      "ImportDetailList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ImportDetail List Response",
            "items": {
              "$ref": "#/components/schemas/ImportDetail"
            }
          }
        }
      },
      "ImportDetailListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ImportDetail Event List Response",
            "items": {
              "$ref": "#/components/schemas/ImportDetail_Events"
            }
          }
        }
      },
      "Reminder_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Reminder*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Reminder*"
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "description": "Time in minutes to remind user before the subject"
          },
          "next_delivery_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Reminder* will be delivered (as a ISO-8601 timestamp)"
          },
          "state": {
            "type": "string",
            "description": "The current state of the *Reminder*",
            "enum": [
              "initializing",
              "scheduling",
              "rescheduling",
              "scheduled",
              "attempting_delivery",
              "delivery_failed",
              "delivered",
              "delivery_skipped",
              "invalid_user"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Reminder* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Reminder* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Reminder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Reminder_base"
          },
          {
            "type": "object",
            "properties": {
              "notification_method": {
                "$ref": "#/components/schemas/NotificationMethod_base",
                "description": "NotificationMethod"
              },
              "subject": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              }
            }
          }
        ]
      },
      "Reminder_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Reminder Object Response",
                "$ref": "#/components/schemas/Reminder"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ReminderShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Reminder Object Response",
            "$ref": "#/components/schemas/Reminder"
          }
        }
      },
      "ReminderList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Reminder List Response",
            "items": {
              "$ref": "#/components/schemas/Reminder"
            }
          }
        }
      },
      "ReminderListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Reminder Event List Response",
            "items": {
              "$ref": "#/components/schemas/Reminder_Events"
            }
          }
        }
      },
      "TaskType_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *TaskType*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TaskType*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *TaskType*"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskType* was deleted (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskType* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskType* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TaskType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskType_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "TaskType_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "TaskType Object Response",
                "$ref": "#/components/schemas/TaskType"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TaskTypeShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "TaskType Object Response",
            "$ref": "#/components/schemas/TaskType"
          }
        }
      },
      "TaskTypeList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TaskType List Response",
            "items": {
              "$ref": "#/components/schemas/TaskType"
            }
          }
        }
      },
      "TaskTypeListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TaskType Event List Response",
            "items": {
              "$ref": "#/components/schemas/TaskType_Events"
            }
          }
        }
      },
      "PracticeArea_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *PracticeArea*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *PracticeArea*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PracticeArea* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PracticeArea* was last updated (as a ISO-8601 timestamp)"
          },
          "name": {
            "type": "string",
            "description": "The name of the *PracticeArea*"
          },
          "code": {
            "type": "string",
            "description": "The code of the *PracticeArea*"
          }
        }
      },
      "PracticeArea": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PracticeArea_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PracticeArea_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "PracticeArea Object Response",
                "$ref": "#/components/schemas/PracticeArea"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "PracticeAreaShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "PracticeArea Object Response",
            "$ref": "#/components/schemas/PracticeArea"
          }
        }
      },
      "PracticeAreaList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "PracticeArea List Response",
            "items": {
              "$ref": "#/components/schemas/PracticeArea"
            }
          }
        }
      },
      "PracticeAreaListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "PracticeArea Event List Response",
            "items": {
              "$ref": "#/components/schemas/PracticeArea_Events"
            }
          }
        }
      },
      "EvergreenRetainer_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *EvergreenRetainer*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *EvergreenRetainer*"
          },
          "minimum_threshold": {
            "type": "number",
            "format": "double",
            "description": "Minimum threshold of the *EvergreenRetainer%*"
          }
        }
      },
      "EvergreenRetainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EvergreenRetainer_base"
          },
          {
            "type": "object",
            "properties": {
              "recipients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User_base"
                },
                "description": "User"
              }
            }
          }
        ]
      },
      "EvergreenRetainer_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "EvergreenRetainer Object Response",
                "$ref": "#/components/schemas/EvergreenRetainer"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "PolymorphicCustomRate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier for the custom rate"
          },
          "rate": {
            "type": "number",
            "format": "double",
            "description": "If `custom_rate.type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `custom_rate.type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `custom_rate.type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter. The value may also be expressed as string that represents a rational number such as `1/3`.\n\nIf the user does not have sufficient rate visibility, the rates are hidden.\n"
          },
          "award": {
            "type": "number",
            "format": "double",
            "description": "The value of the ContingencyFee award."
          },
          "note": {
            "type": "string",
            "description": "Details about the ContingencyFee award."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date of the ContingencyFee award."
          }
        }
      },
      "PolymorphicCustomRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PolymorphicCustomRate_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/PolymorphicCustomRate_User_base",
                "description": "User"
              },
              "group": {
                "$ref": "#/components/schemas/PolymorphicCustomRate_Group_base",
                "description": "Group"
              },
              "activity_description": {
                "$ref": "#/components/schemas/PolymorphicCustomRate_ActivityDescription_base",
                "description": "ActivityDescription"
              }
            }
          }
        ]
      },
      "PolymorphicCustomRate_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "PolymorphicCustomRate Object Response",
                "$ref": "#/components/schemas/PolymorphicCustomRate"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "PolymorphicCustomRate_User_base": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether the *User* is allowed to log in"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *User*"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *User*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *User*"
          }
        }
      },
      "PolymorphicCustomRate_Group_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Group*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Group*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Group*"
          }
        }
      },
      "PolymorphicCustomRate_ActivityDescription_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ActivityDescription*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ActivityDescription*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *ActivityDescription*"
          }
        }
      },
      "ContingencyFee_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ContingencyFee*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ContingencyFee*"
          },
          "show_contingency_award": {
            "type": "boolean",
            "description": "Whether the *ContingencyFee* is posted or on a bill"
          }
        }
      },
      "ContingencyFee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContingencyFee_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "ContingencyFee_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ContingencyFee Object Response",
                "$ref": "#/components/schemas/ContingencyFee"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CreditMemo_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *CreditMemo*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CreditMemo*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date the *CreditMemo* was recorded (as a ISO-8601 date)"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Total amount credited"
          },
          "description": {
            "type": "string",
            "description": "A detailed description for the *CreditMemo*"
          },
          "discount": {
            "type": "boolean",
            "description": "Whether the *CreditMemo* is applied as discount"
          },
          "voided_at": {
            "type": "string",
            "format": "date-time",
            "description": "Time the *CreditMemo* was voided (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CreditMemo* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CreditMemo* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "CreditMemo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreditMemo_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Allocation_base"
                },
                "description": "Allocation"
              }
            }
          }
        ]
      },
      "CreditMemo_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "CreditMemo Object Response",
                "$ref": "#/components/schemas/CreditMemo"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CreditMemoShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "CreditMemo Object Response",
            "$ref": "#/components/schemas/CreditMemo"
          }
        }
      },
      "CreditMemoList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CreditMemo List Response",
            "items": {
              "$ref": "#/components/schemas/CreditMemo"
            }
          }
        }
      },
      "CreditMemoListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CreditMemo Event List Response",
            "items": {
              "$ref": "#/components/schemas/CreditMemo_Events"
            }
          }
        }
      },
      "Currency_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Currency*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Currency*"
          },
          "code": {
            "type": "string",
            "description": "ISO 4217 code for the *Currency*"
          },
          "sign": {
            "type": "string",
            "description": "Symbol used to denote monetary values using this *Currency*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Currency* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Currency* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Currency": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Currency_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Currency_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Currency Object Response",
                "$ref": "#/components/schemas/Currency"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CurrencyList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Currency List Response",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        }
      },
      "CurrencyListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Currency Event List Response",
            "items": {
              "$ref": "#/components/schemas/Currency_Events"
            }
          }
        }
      },
      "MatterBalance_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *MatterBalance*"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of balance of a matter."
          }
        }
      },
      "MatterBalance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MatterBalance_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "MatterBalance_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "MatterBalance Object Response",
                "$ref": "#/components/schemas/MatterBalance"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ClioPaymentsMerchantAccountMapping_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ClioPaymentsMerchantAccountMapping*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ClioPaymentsMerchantAccountMapping*"
          },
          "bank_account_id": {
            "type": "integer",
            "format": "int32",
            "description": "The ID of the bank account."
          },
          "merchant_account_id": {
            "type": "integer",
            "format": "int32",
            "description": "The ID of the merchant account."
          },
          "merchant_account_name": {
            "type": "string",
            "description": "The name of the Clio Payments merchant account."
          },
          "is_cvv_required": {
            "type": "boolean",
            "description": "Whether or not the CVV is required by the merchant account."
          },
          "required_fields": {
            "type": "string",
            "description": "The fields required by the merchant account."
          }
        }
      },
      "ClioPaymentsMerchantAccountMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClioPaymentsMerchantAccountMapping_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "ClioPaymentsMerchantAccountMapping_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ClioPaymentsMerchantAccountMapping Object Response",
                "$ref": "#/components/schemas/ClioPaymentsMerchantAccountMapping"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Interest_base": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number",
            "format": "double",
            "description": "Rate for the *Interest%*"
          },
          "type": {
            "type": "string",
            "description": "Type of *Interest%* being applied",
            "enum": [
              "simple",
              "compound"
            ]
          },
          "period": {
            "type": "integer",
            "format": "int32",
            "description": "Number of days that represent the frequency which your *Interest%* will be applied"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "description": "Interest balance for the object"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "Interest total for the object"
          }
        }
      },
      "Interest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Interest_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Interest_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Interest Object Response",
                "$ref": "#/components/schemas/Interest"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ExpenseCategory_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ExpenseCategory*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ExpenseCategory*"
          },
          "name": {
            "type": "string",
            "description": "The name of the expense category"
          },
          "rate": {
            "type": "integer",
            "format": "int32",
            "description": "The price charged per unit cost"
          },
          "entry_type": {
            "type": "string",
            "description": "The type of expense entry the category is associated to. Can be either \"hard_cost\", \"soft_cost\" or \"unassociated\""
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ExpenseCategory* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ExpenseCategory* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "ExpenseCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ExpenseCategory_base"
          },
          {
            "type": "object",
            "properties": {
              "groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group_base"
                },
                "description": "Group"
              },
              "utbms_code": {
                "$ref": "#/components/schemas/UtbmsCode_base",
                "description": "UtbmsCode"
              }
            }
          }
        ]
      },
      "ExpenseCategory_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ExpenseCategory Object Response",
                "$ref": "#/components/schemas/ExpenseCategory"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ExpenseCategoryShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "ExpenseCategory Object Response",
            "$ref": "#/components/schemas/ExpenseCategory"
          }
        }
      },
      "ExpenseCategoryList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ExpenseCategory List Response",
            "items": {
              "$ref": "#/components/schemas/ExpenseCategory"
            }
          }
        }
      },
      "ExpenseCategoryListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ExpenseCategory Event List Response",
            "items": {
              "$ref": "#/components/schemas/ExpenseCategory_Events"
            }
          }
        }
      },
      "Activity_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Activity*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Activity*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Activity*",
            "enum": [
              "TimeEntry",
              "ExpenseEntry",
              "HardCostEntry",
              "SoftCostEntry"
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date the *Activity* was performed (as a ISO-8601 date)"
          },
          "quantity_in_hours": {
            "type": "number",
            "format": "double",
            "description": "The number of hours the TimeEntry took."
          },
          "rounded_quantity_in_hours": {
            "type": "number",
            "format": "double",
            "description": "The number of hours rounded accordingly to the billing settings.\nThe rounded value is used to calculate the total.\n"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
          },
          "rounded_quantity": {
            "type": "number",
            "format": "double",
            "description": "The field is applicable to time entries only.\n\n**Version <= 4.0.3:**\nThe number of hours rounded accordingly to the billing settings.\nThe rounded value is used to calculate the total.\n\n**Latest version:**\nThe number of seconds rounded accordingly to the billing settings.\nThe rounded value is used to calculate the total.\n"
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "The hourly or fixed rate of the *Activity*"
          },
          "note": {
            "type": "string",
            "description": "The details about the *Activity*"
          },
          "flat_rate": {
            "type": "boolean",
            "description": "Whether the *Activity* is a flat rate"
          },
          "billed": {
            "type": "boolean",
            "description": "Whether the *Activity* has been added to an active bill that is in the state of `awaiting_payment` or `paid`"
          },
          "on_bill": {
            "type": "boolean",
            "description": "Whether the *Activity* has been added to an active bill that is in the state of `draft`, `awaiting_approval`, `awaiting_payment` or `paid`"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total cost of draft, billable and billed items in the *Activity*"
          },
          "contingency_fee": {
            "type": "boolean",
            "description": "Whether or not the *Activity* is a contingency fee"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Activity* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Activity* was last updated (as a ISO-8601 timestamp)"
          },
          "reference": {
            "type": "string",
            "description": "A check reference for a HardCostEntry."
          }
        }
      },
      "Activity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Activity_base"
          },
          {
            "type": "object",
            "properties": {
              "activity_description": {
                "$ref": "#/components/schemas/ActivityDescription_base",
                "description": "ActivityDescription"
              },
              "expense_category": {
                "$ref": "#/components/schemas/ExpenseCategory_base",
                "description": "ExpenseCategory"
              },
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "communication": {
                "$ref": "#/components/schemas/Communication_base",
                "description": "Communication"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "matter_note": {
                "$ref": "#/components/schemas/Note_base",
                "description": "Note"
              },
              "contact_note": {
                "$ref": "#/components/schemas/Note_base",
                "description": "Note"
              },
              "subject": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              },
              "timer": {
                "$ref": "#/components/schemas/Timer_base",
                "description": "Timer"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "utbms_expense": {
                "$ref": "#/components/schemas/UtbmsCode_base",
                "description": "UtbmsCode"
              },
              "vendor": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "calendar_entry": {
                "$ref": "#/components/schemas/Activity_CalendarEntry_base",
                "description": "CalendarEntry"
              }
            }
          }
        ]
      },
      "Activity_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Activity Object Response",
                "$ref": "#/components/schemas/Activity"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ActivityShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Activity Object Response",
            "$ref": "#/components/schemas/Activity"
          }
        }
      },
      "ActivityList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Activity List Response",
            "items": {
              "$ref": "#/components/schemas/Activity"
            }
          }
        }
      },
      "ActivityListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Activity Event List Response",
            "items": {
              "$ref": "#/components/schemas/Activity_Events"
            }
          }
        }
      },
      "Activity_CalendarEntry_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the *CalendarEntry*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CalendarEntry*"
          },
          "calendar_owner_id": {
            "type": "integer",
            "format": "int32",
            "description": "The id of the calendar owner."
          }
        }
      },
      "Bill_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Bill*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Bill*"
          },
          "number": {
            "type": "string",
            "description": "The *Bill* identifier (not necessarily numeric)'"
          },
          "issued_at": {
            "type": "string",
            "format": "date",
            "description": "The time the *Bill* was issued (as a ISO-8601 date)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Bill* was created (as a ISO-8601 timestamp)"
          },
          "due_at": {
            "type": "string",
            "format": "date",
            "description": "The date the *Bill* is due (as a ISO-8601 date)"
          },
          "tax_rate": {
            "type": "number",
            "format": "double",
            "description": "The tax rate to the *Bill*"
          },
          "secondary_tax_rate": {
            "type": "number",
            "format": "double",
            "description": "A secondary tax rate applied to the *Bill*"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Bill* was last updated (as a ISO-8601 timestamp)"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the *Bill*"
          },
          "purchase_order": {
            "type": "string",
            "description": "The purchase order of the *Bill*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Bill*",
            "enum": [
              "MatterBill",
              "ClientBill"
            ]
          },
          "memo": {
            "type": "string",
            "description": "A memo for the *Bill*"
          },
          "start_at": {
            "type": "string",
            "format": "date",
            "description": "The time the billing period starts (as a ISO-8601 date)"
          },
          "end_at": {
            "type": "string",
            "format": "date",
            "description": "The time the billing period ends (as a ISO-8601 date)"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "description": "The outstanding balance of the *Bill*"
          },
          "config": {
            "type": "string",
            "description": "A string containing bill theme settings for the Bill preview that are specific to this Bill.\n\nTo learn more about this field, refer to the [bill themes](#operation/BillTheme%23update) documentation.\n\nValues in this string will override the bill theme settings when displaying this Bill.\nAny values not present in this string will default to using the settings present in the bill theme for this Bill,\nor to the default settings for those values if it is also undefined in the bill theme.\n"
          },
          "state": {
            "type": "string",
            "description": "The billing state the *Bill* is in",
            "enum": [
              "draft",
              "awaiting_approval",
              "awaiting_payment",
              "paid",
              "void",
              "deleted"
            ]
          },
          "kind": {
            "type": "string",
            "description": "The kind of the *Bill*",
            "enum": [
              "revenue_kind",
              "summary_kind",
              "trust_kind",
              "aggregate_all",
              "aggregate_split",
              "aggregate_services",
              "aggregate_expenses"
            ]
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total with interest of the *Bill*"
          },
          "paid": {
            "type": "number",
            "format": "double",
            "description": "The total amount paid for the *Bill*"
          },
          "paid_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the last payment on the *Bill*"
          },
          "pending": {
            "type": "number",
            "format": "double",
            "description": "The amount of pending credit card payments on the *Bill*"
          },
          "due": {
            "type": "number",
            "format": "double",
            "description": "The total amount of the *Bill* with interest and less discounts"
          },
          "can_update": {
            "type": "boolean",
            "description": "This value indicates if your *Bill*'s line items and information can be updated."
          },
          "credits_issued": {
            "type": "number",
            "format": "double",
            "description": "The total credits issued for the *Bill*"
          },
          "shared": {
            "type": "boolean",
            "description": "Whether the *Bill* is a shared"
          },
          "sub_total": {
            "type": "number",
            "format": "double",
            "description": "Sub total for the *Bill*"
          },
          "tax_sum": {
            "type": "number",
            "format": "double",
            "description": "Sum of primary tax for the model"
          },
          "secondary_tax_sum": {
            "type": "number",
            "format": "double",
            "description": "Sum of secondary tax for the model"
          },
          "available_state_transitions": {
            "type": "string",
            "description": "The available *Bill* state transitions.",
            "enum": [
              "awaiting_approval",
              "awaiting_payment",
              "paid",
              "void",
              "deleted"
            ]
          }
        }
      },
      "Bill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "discount": {
                "$ref": "#/components/schemas/Discount_base",
                "description": "Discount"
              },
              "interest": {
                "$ref": "#/components/schemas/Interest_base",
                "description": "Interest"
              },
              "matters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Matter_base"
                },
                "description": "Matter"
              },
              "group": {
                "$ref": "#/components/schemas/Group_base",
                "description": "Group"
              },
              "bill_theme": {
                "$ref": "#/components/schemas/BillTheme_base",
                "description": "BillTheme"
              },
              "original_bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "destination_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "balances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Balance_base"
                },
                "description": "Balance"
              },
              "matter_totals": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MatterBalance_base"
                },
                "description": "MatterBalance"
              },
              "currency": {
                "$ref": "#/components/schemas/Currency_base",
                "description": "Currency"
              },
              "billing_setting": {
                "$ref": "#/components/schemas/BillingSetting_base",
                "description": "BillingSetting"
              },
              "client_addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address_base"
                },
                "description": "Address"
              }
            }
          }
        ]
      },
      "Bill_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Bill Object Response",
                "$ref": "#/components/schemas/Bill"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BillShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Bill Object Response",
            "$ref": "#/components/schemas/Bill"
          }
        }
      },
      "BillList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Bill List Response",
            "items": {
              "$ref": "#/components/schemas/Bill"
            }
          }
        }
      },
      "BillListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Bill Event List Response",
            "items": {
              "$ref": "#/components/schemas/Bill_Events"
            }
          }
        }
      },
      "AccountBalance_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *AccountBalance*"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "description": "The current balance of the bank account available to the matter or contact"
          },
          "type": {
            "type": "string",
            "description": "The bank account type. Either Operating or Trust"
          },
          "name": {
            "type": "string",
            "description": "The name of the bank account"
          }
        }
      },
      "AccountBalance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountBalance_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "AccountBalance_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "AccountBalance Object Response",
                "$ref": "#/components/schemas/AccountBalance"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Communication_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Communication*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Communication*"
          },
          "subject": {
            "type": "string",
            "description": "The subject line of the *Communication*"
          },
          "body": {
            "type": "string",
            "description": "The main content of the *Communication*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Communication*",
            "enum": [
              "EmailCommunication",
              "PhoneCommunication"
            ]
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date of the *Communication* (as a ISO-8601 datestamp)"
          },
          "time_entries_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of time_entries associated with the *Communication*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Communication* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Communication* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Communication": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Communication_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "senders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Participant_base"
                },
                "description": "Participant"
              },
              "receivers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Participant_base"
                },
                "description": "Participant"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              },
              "time_entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Activity_base"
                },
                "description": "Activity"
              }
            }
          }
        ]
      },
      "Communication_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Communication Object Response",
                "$ref": "#/components/schemas/Communication"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CommunicationShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Communication Object Response",
            "$ref": "#/components/schemas/Communication"
          }
        }
      },
      "CommunicationList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Communication List Response",
            "items": {
              "$ref": "#/components/schemas/Communication"
            }
          }
        }
      },
      "CommunicationListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Communication Event List Response",
            "items": {
              "$ref": "#/components/schemas/Communication_Events"
            }
          }
        }
      },
      "PhoneNumber_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *PhoneNumber*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *PhoneNumber*"
          },
          "number": {
            "type": "string",
            "description": "Contact's Phone Number"
          },
          "name": {
            "type": "string",
            "description": "The type of *PhoneNumber* it is",
            "enum": [
              "Work",
              "Personal",
              "Other"
            ]
          },
          "default_number": {
            "type": "boolean",
            "description": "Whether it is default for this contact"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PhoneNumber* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PhoneNumber* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "PhoneNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PhoneNumber_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PhoneNumber_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "PhoneNumber Object Response",
                "$ref": "#/components/schemas/PhoneNumber"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ClioPaymentsCard_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ClioPaymentsCard*"
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier for the user of the *ClioPaymentsCard*."
          },
          "contact_id": {
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier for the contact of the *ClioPaymentsCard*."
          },
          "number": {
            "type": "string",
            "description": "The last four digits of the *ClioPaymentsCard*."
          },
          "expiry_month": {
            "type": "string",
            "description": "The two digit expiry month of the *ClioPaymentsCard*."
          },
          "expiry_year": {
            "type": "string",
            "description": "The four digit expiry year of the *ClioPaymentsCard*."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ClioPaymentsCard* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ClioPaymentsCard* was last updated (as a ISO-8601 timestamp)"
          },
          "card_type": {
            "type": "integer",
            "format": "int32",
            "description": "The type of the *ClioPaymentsCard*.",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "account_id": {
            "type": "integer",
            "format": "int32",
            "description": "Identifier for the Clio account associated with the ClioPaymentsCard."
          }
        }
      },
      "ClioPaymentsCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClioPaymentsCard_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "ClioPaymentsCard_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ClioPaymentsCard Object Response",
                "$ref": "#/components/schemas/ClioPaymentsCard"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ClioPaymentsCardShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "ClioPaymentsCard Object Response",
            "$ref": "#/components/schemas/ClioPaymentsCard"
          }
        }
      },
      "InstantMessenger_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *InstantMessenger*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *InstantMessenger*"
          },
          "address": {
            "type": "string",
            "description": "The address of the *InstantMessenger*"
          },
          "name": {
            "type": "string",
            "description": "The type of *InstantMessenger* it is",
            "enum": [
              "Work",
              "Personal",
              "Other"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *InstantMessenger* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *InstantMessenger* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "InstantMessenger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InstantMessenger_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "InstantMessenger_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "InstantMessenger Object Response",
                "$ref": "#/components/schemas/InstantMessenger"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Timer_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Timer*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Timer*"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Timer* was started (as ISO-8601 timestamp)"
          },
          "elapsed_time": {
            "type": "number",
            "format": "double",
            "description": "How much time has elapsed, in hours, since the timer was started"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Timer* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Timer* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Timer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Timer_base"
          },
          {
            "type": "object",
            "properties": {
              "activity": {
                "$ref": "#/components/schemas/Activity_base",
                "description": "Activity"
              }
            }
          }
        ]
      },
      "Timer_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Timer Object Response",
                "$ref": "#/components/schemas/Timer"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TimerShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Timer Object Response",
            "$ref": "#/components/schemas/Timer"
          }
        }
      },
      "Note_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Note*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Note*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Note*",
            "enum": [
              "MatterNote",
              "ContactNote"
            ]
          },
          "subject": {
            "type": "string",
            "description": "The subject of the *Note*"
          },
          "detail": {
            "type": "string",
            "description": "The body of the *Note*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date the *Note* is for (as a ISO-8601 date)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Note* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Note* was last updated (as a ISO-8601 timestamp)"
          },
          "time_entries_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of time_entries associated with the *Note*"
          }
        }
      },
      "Note": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Note_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "author": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "time_entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Activity_base"
                },
                "description": "Activity"
              }
            }
          }
        ]
      },
      "Note_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Note Object Response",
                "$ref": "#/components/schemas/Note"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "NoteShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Note Object Response",
            "$ref": "#/components/schemas/Note"
          }
        }
      },
      "NoteList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Note List Response",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          }
        }
      },
      "NoteListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Note Event List Response",
            "items": {
              "$ref": "#/components/schemas/Note_Events"
            }
          }
        }
      },
      "PolymorphicObject_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *PolymorphicObject*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *PolymorphicObject*",
            "enum": [
              "Task",
              "CalendarEntry",
              "MatterNote",
              "ContactNote",
              "Matter",
              "Contact",
              "User",
              "CreditMemo",
              "Payment"
            ]
          },
          "identifier": {
            "type": "string",
            "description": "A string to identify the *PolymorphicObject*"
          },
          "secondary_identifier": {
            "type": "string",
            "description": "A secondary string to identify the *PolymorphicObject*"
          }
        }
      },
      "PolymorphicObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PolymorphicObject_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PolymorphicObject_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "PolymorphicObject Object Response",
                "$ref": "#/components/schemas/PolymorphicObject"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CustomFieldSetAssociation_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *CustomFieldSetAssociation*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CustomFieldSetAssociation*"
          },
          "display_order": {
            "type": "integer",
            "format": "int32",
            "description": "The display position of the *CustomFieldSetAssociation*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldSetAssociation* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldSetAssociation* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "CustomFieldSetAssociation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomFieldSetAssociation_base"
          },
          {
            "type": "object",
            "properties": {
              "custom_field_set": {
                "$ref": "#/components/schemas/CustomFieldSet_base",
                "description": "CustomFieldSet"
              },
              "parent": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              }
            }
          }
        ]
      },
      "CustomFieldSetAssociation_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "CustomFieldSetAssociation Object Response",
                "$ref": "#/components/schemas/CustomFieldSetAssociation"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CustomField_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *CustomField*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CustomField*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomField* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomField* was last updated (as a ISO-8601 timestamp)"
          },
          "name": {
            "type": "string",
            "description": "The name of the *CustomField*"
          },
          "parent_type": {
            "type": "string",
            "description": "Type of object the *CustomField* is for",
            "enum": [
              "Contact",
              "Matter"
            ]
          },
          "field_type": {
            "type": "string",
            "description": "Field type of the *CustomField*",
            "enum": [
              "checkbox",
              "contact",
              "currency",
              "date",
              "time",
              "email",
              "matter",
              "numeric",
              "picklist",
              "text_area",
              "text_line",
              "url"
            ]
          },
          "displayed": {
            "type": "boolean",
            "description": "Whether the *CustomField* is displayed by default"
          },
          "deleted": {
            "type": "boolean",
            "description": "Whether the *CustomField* is deleted for future use"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the *CustomField* requires a value"
          },
          "display_order": {
            "type": "string",
            "description": "The display position of the *CustomField*"
          }
        }
      },
      "CustomField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField_base"
          },
          {
            "type": "object",
            "properties": {
              "picklist_options": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PicklistOption_base"
                },
                "description": "PicklistOption"
              }
            }
          }
        ]
      },
      "CustomField_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "CustomField Object Response",
                "$ref": "#/components/schemas/CustomField"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CustomFieldShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "CustomField Object Response",
            "$ref": "#/components/schemas/CustomField"
          }
        }
      },
      "CustomFieldList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CustomField List Response",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        }
      },
      "CustomFieldListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CustomField Event List Response",
            "items": {
              "$ref": "#/components/schemas/CustomField_Events"
            }
          }
        }
      },
      "CustomFieldSet_base": {
        "type": "object",
        "properties": {}
      },
      "CustomFieldSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomFieldSet_base"
          },
          {
            "type": "object",
            "properties": {
              "custom_fields": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomField_base"
                },
                "description": "CustomField"
              }
            }
          }
        ]
      },
      "CustomFieldSet_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "CustomFieldSet Object Response",
                "$ref": "#/components/schemas/CustomFieldSet"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CustomFieldSetList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CustomFieldSet List Response",
            "items": {
              "$ref": "#/components/schemas/CustomFieldSet"
            }
          }
        }
      },
      "CustomFieldSetListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CustomFieldSet Event List Response",
            "items": {
              "$ref": "#/components/schemas/CustomFieldSet_Events"
            }
          }
        }
      },
      "PicklistOption_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *PicklistOption*"
          },
          "option": {
            "type": "string",
            "description": "The value of the *PicklistOption*"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PicklistOption* was deleted (as a ISO-8601 timestamp)"
          }
        }
      },
      "PicklistOption": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PicklistOption_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PicklistOption_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "PicklistOption Object Response",
                "$ref": "#/components/schemas/PicklistOption"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CalendarEntry_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the *CalendarEntry*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CalendarEntry*"
          },
          "summary": {
            "type": "string",
            "description": "A short summary of the *CalendarEntry*"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *CalendarEntry*"
          },
          "location": {
            "type": "string",
            "description": "The geographic location of the *CalendarEntry*"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntry* starts (as an ISO-8601 timestamp)"
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntry* ends (as an ISO-8601 timestamp)"
          },
          "all_day": {
            "type": "boolean",
            "description": "Whether the event is all day"
          },
          "recurrence_rule": {
            "type": "string",
            "description": "Recurrence rule for expanding"
          },
          "parent_calendar_entry_id": {
            "type": "integer",
            "format": "int32",
            "description": "Identifier for the parent *CalendarEntry*"
          },
          "court_rule": {
            "type": "boolean",
            "description": "Whether this event is associated with a Court Rule"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntry* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntry* was last updated (as a ISO-8601 timestamp)"
          },
          "permission": {
            "type": "string",
            "description": "The view permission for the current user, will return 'viewer' when permission is 'limited_viewer' and the user is an attendee."
          },
          "time_entries_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of `TimeEntry` activities associated with the *CalendarEntry*"
          },
          "calendar_owner_id": {
            "type": "integer",
            "format": "int32",
            "description": "The id of the calendar owner."
          },
          "start_at_time_zone": {
            "type": "string",
            "description": "Original start at time zone of the event."
          }
        }
      },
      "CalendarEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CalendarEntry_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "matter_docket": {
                "$ref": "#/components/schemas/MatterDocket_base",
                "description": "MatterDocket"
              },
              "calendar_owner": {
                "$ref": "#/components/schemas/Calendar_base",
                "description": "Calendar"
              },
              "parent_calendar_entry": {
                "$ref": "#/components/schemas/CalendarEntry_base",
                "description": "CalendarEntry"
              },
              "attendees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attendee_base"
                },
                "description": "Attendee"
              },
              "calendars": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Calendar_base"
                },
                "description": "Calendar"
              },
              "reminders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reminder_base"
                },
                "description": "Reminder"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              }
            }
          }
        ]
      },
      "CalendarEntry_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "CalendarEntry Object Response",
                "$ref": "#/components/schemas/CalendarEntry"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CalendarEntryShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "CalendarEntry Object Response",
            "$ref": "#/components/schemas/CalendarEntry"
          }
        }
      },
      "CalendarEntryList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CalendarEntry List Response",
            "items": {
              "$ref": "#/components/schemas/CalendarEntry"
            }
          }
        }
      },
      "CalendarEntryListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CalendarEntry Event List Response",
            "items": {
              "$ref": "#/components/schemas/CalendarEntry_Events"
            }
          }
        }
      },
      "MatterDocket_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *MatterDocket*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MatterDocket*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *MatterDocket*"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "The date the *MatterDocket* will start (as a ISO-8601 date)"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterDocket* will start, required for specific triggers (as a ISO-8601 timestamp)"
          },
          "status": {
            "type": "string",
            "description": "The status of the *MatterDocket* creation"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterDocket* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterDocket* was last updated (as a ISO-8601 timestamp)"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterDocket* was deleted (as a ISO-8601 timestamp)"
          }
        }
      },
      "MatterDocket": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MatterDocket_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "jurisdiction": {
                "$ref": "#/components/schemas/Jurisdiction_base",
                "description": "Jurisdiction"
              },
              "trigger": {
                "$ref": "#/components/schemas/JurisdictionsToTrigger_base",
                "description": "JurisdictionsToTrigger"
              },
              "service_type": {
                "$ref": "#/components/schemas/ServiceType_base",
                "description": "ServiceType"
              },
              "calendar_entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CalendarEntry_base"
                },
                "description": "CalendarEntry"
              }
            }
          }
        ]
      },
      "MatterDocket_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "MatterDocket Object Response",
                "$ref": "#/components/schemas/MatterDocket"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "MatterDocketShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "MatterDocket Object Response",
            "$ref": "#/components/schemas/MatterDocket"
          }
        }
      },
      "MatterDocketList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "MatterDocket List Response",
            "items": {
              "$ref": "#/components/schemas/MatterDocket"
            }
          }
        }
      },
      "MatterDocketListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "MatterDocket Event List Response",
            "items": {
              "$ref": "#/components/schemas/MatterDocket_Events"
            }
          }
        }
      },
      "Jurisdiction_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Jurisdiction*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Jurisdiction*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Jurisdiction* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Jurisdiction* was last updated (as a ISO-8601 timestamp)"
          },
          "system_id": {
            "type": "integer",
            "format": "int32",
            "description": "Server ID"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "default": {
            "type": "boolean",
            "description": "Whether the *Jurisdiction* is default for the current user"
          }
        }
      },
      "Jurisdiction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Jurisdiction_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Jurisdiction_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Jurisdiction Object Response",
                "$ref": "#/components/schemas/Jurisdiction"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "JurisdictionShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Jurisdiction Object Response",
            "$ref": "#/components/schemas/Jurisdiction"
          }
        }
      },
      "JurisdictionList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Jurisdiction List Response",
            "items": {
              "$ref": "#/components/schemas/Jurisdiction"
            }
          }
        }
      },
      "JurisdictionListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Jurisdiction Event List Response",
            "items": {
              "$ref": "#/components/schemas/Jurisdiction_Events"
            }
          }
        }
      },
      "JurisdictionsToTrigger_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *JurisdictionsToTrigger*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *JurisdictionsToTrigger*"
          },
          "system_id": {
            "type": "integer",
            "format": "int32",
            "description": "Server id"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *JurisdictionsToTrigger*"
          },
          "do_not_recalculate": {
            "type": "boolean",
            "description": "Whether the associated dates should not be recalculated"
          },
          "is_served": {
            "type": "boolean",
            "description": "Whether the user must select a Date Offset (Service Type)"
          },
          "is_requirements_required": {
            "type": "boolean",
            "description": "Whether the trigger has requirements"
          }
        }
      },
      "JurisdictionsToTrigger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JurisdictionsToTrigger_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "JurisdictionsToTrigger_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "JurisdictionsToTrigger Object Response",
                "$ref": "#/components/schemas/JurisdictionsToTrigger"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "JurisdictionsToTriggerShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "JurisdictionsToTrigger Object Response",
            "$ref": "#/components/schemas/JurisdictionsToTrigger"
          }
        }
      },
      "JurisdictionsToTriggerList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "JurisdictionsToTrigger List Response",
            "items": {
              "$ref": "#/components/schemas/JurisdictionsToTrigger"
            }
          }
        }
      },
      "JurisdictionsToTriggerListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "JurisdictionsToTrigger Event List Response",
            "items": {
              "$ref": "#/components/schemas/JurisdictionsToTrigger_Events"
            }
          }
        }
      },
      "ServiceType_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ServiceType*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ServiceType*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ServiceType* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ServiceType* was last updated (as a ISO-8601 timestamp)"
          },
          "system_id": {
            "type": "integer",
            "format": "int32",
            "description": "Server ID"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *ServiceType*"
          },
          "default": {
            "type": "boolean",
            "description": "Whether *ServiceType* is default for the current user"
          }
        }
      },
      "ServiceType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceType_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "ServiceType_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ServiceType Object Response",
                "$ref": "#/components/schemas/ServiceType"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ServiceTypeShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "ServiceType Object Response",
            "$ref": "#/components/schemas/ServiceType"
          }
        }
      },
      "ServiceTypeList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ServiceType List Response",
            "items": {
              "$ref": "#/components/schemas/ServiceType"
            }
          }
        }
      },
      "ServiceTypeListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ServiceType Event List Response",
            "items": {
              "$ref": "#/components/schemas/ServiceType_Events"
            }
          }
        }
      },
      "CustomFieldValue_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the *CustomFieldValue*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CustomFieldValue*"
          },
          "field_name": {
            "type": "string",
            "description": "The name of the custom field"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldValue* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldValue* was last updated (as a ISO-8601 timestamp)"
          },
          "field_type": {
            "type": "string",
            "description": "The type of the *CustomFieldValue*",
            "enum": [
              "checkbox",
              "contact",
              "currency",
              "date",
              "time",
              "email",
              "matter",
              "numeric",
              "picklist",
              "text_area",
              "text_line",
              "url"
            ]
          },
          "field_required": {
            "type": "boolean",
            "description": "Whether the *CustomFieldValue* requires a value"
          },
          "field_displayed": {
            "type": "boolean",
            "description": "Whether the *CustomFieldValue* is displayed by default"
          },
          "field_display_order": {
            "type": "integer",
            "format": "int32",
            "description": "The display position of the *CustomFieldValue*"
          },
          "value": {
            "type": "string",
            "description": "The value of the *CustomFieldValue*"
          },
          "soft_deleted": {
            "type": "boolean",
            "description": "Whether the value is associated with a deleted custom field"
          }
        }
      },
      "CustomFieldValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomFieldValue_base"
          },
          {
            "type": "object",
            "properties": {
              "custom_field": {
                "$ref": "#/components/schemas/CustomField_base",
                "description": "CustomField"
              },
              "picklist_option": {
                "$ref": "#/components/schemas/PicklistOption_base",
                "description": "PicklistOption"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "CustomFieldValue_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "CustomFieldValue Object Response",
                "$ref": "#/components/schemas/CustomFieldValue"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Calendar_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Calendar*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Calendar*"
          },
          "color": {
            "type": "string",
            "description": "Color",
            "enum": [
              {
                "r": 0.21176470588235294,
                "g": 0.4823529411764706,
                "b": 0.611764705882353
              },
              {
                "r": 1,
                "g": 0.6470588235294118,
                "b": 0.6431372549019608
              },
              {
                "r": 0.5137254901960784,
                "g": 0.8196078431372549,
                "b": 0.4980392156862745
              },
              {
                "r": 1,
                "g": 0.6745098039215687,
                "b": 0.4823529411764706
              },
              {
                "r": 0.5568627450980392,
                "g": 0.24705882352941178,
                "b": 0.39215686274509803
              },
              {
                "r": 0.7803921568627451,
                "g": 0.3254901960784314,
                "b": 0
              },
              {
                "r": 0,
                "g": 0.611764705882353,
                "b": 0.9254901960784314
              },
              {
                "r": 0.3843137254901961,
                "g": 0.8392156862745098,
                "b": 0.6941176470588235
              },
              {
                "r": 0.6196078431372549,
                "g": 0.9294117647058824,
                "b": 0.796078431372549
              },
              {
                "r": 0.9764705882352941,
                "g": 0.6352941176470588,
                "b": 0.7686274509803922
              },
              {
                "r": 0.3803921568627451,
                "g": 0.3803921568627451,
                "b": 0.3803921568627451
              },
              {
                "r": 0.7333333333333333,
                "g": 0.8549019607843137,
                "b": 0.5058823529411764
              },
              {
                "r": 0.8745098039215686,
                "g": 0.8274509803921568,
                "b": 0.9725490196078431
              },
              {
                "r": 0.8392156862745098,
                "g": 0.7686274509803922,
                "b": 0.6470588235294118
              },
              {
                "r": 1,
                "g": 0.8313725490196079,
                "b": 0.47058823529411764
              },
              {
                "r": 0.41568627450980394,
                "g": 0.788235294117647,
                "b": 0.8705882352941177
              },
              {
                "r": 0.9176470588235294,
                "g": 0.7333333333333333,
                "b": 0.6901960784313725
              },
              {
                "r": 0.7490196078431373,
                "g": 0.7607843137254902,
                "b": 0.8823529411764706
              },
              {
                "r": 0.8549019607843137,
                "g": 0.8549019607843137,
                "b": 0.8549019607843137
              },
              {
                "r": 0.803921568627451,
                "g": 0.8862745098039215,
                "b": 0.9607843137254902
              }
            ]
          },
          "light_color": {
            "type": "string",
            "description": "Accent color to complement the main calendar color.",
            "enum": [
              {
                "r": 0.7019607843137254,
                "g": 0.7843137254901961,
                "b": 1
              },
              {
                "r": 1,
                "g": 0.6470588235294118,
                "b": 0.6431372549019608
              },
              {
                "r": 0.5137254901960784,
                "g": 0.8196078431372549,
                "b": 0.4980392156862745
              },
              {
                "r": 1,
                "g": 0.6745098039215687,
                "b": 0.4823529411764706
              },
              {
                "r": 1,
                "g": 0.7450980392156863,
                "b": 0.996078431372549
              },
              {
                "r": 0.8666666666666667,
                "g": 0.7411764705882353,
                "b": 0.37254901960784315
              },
              {
                "r": 0.3764705882352941,
                "g": 0.8862745098039215,
                "b": 1
              },
              {
                "r": 0.3843137254901961,
                "g": 0.8392156862745098,
                "b": 0.6941176470588235
              },
              {
                "r": 0.6196078431372549,
                "g": 0.9294117647058824,
                "b": 0.796078431372549
              },
              {
                "r": 0.9764705882352941,
                "g": 0.6352941176470588,
                "b": 0.7686274509803922
              },
              {
                "r": 0.8745098039215686,
                "g": 0.8784313725490196,
                "b": 0.6078431372549019
              },
              {
                "r": 0.7333333333333333,
                "g": 0.8549019607843137,
                "b": 0.5058823529411764
              },
              {
                "r": 0.8745098039215686,
                "g": 0.8274509803921568,
                "b": 0.9725490196078431
              },
              {
                "r": 0.8392156862745098,
                "g": 0.7686274509803922,
                "b": 0.6470588235294118
              },
              {
                "r": 1,
                "g": 0.8313725490196079,
                "b": 0.47058823529411764
              },
              {
                "r": 0.41568627450980394,
                "g": 0.788235294117647,
                "b": 0.8705882352941177
              },
              {
                "r": 0.9176470588235294,
                "g": 0.7333333333333333,
                "b": 0.6901960784313725
              },
              {
                "r": 0.7490196078431373,
                "g": 0.7607843137254902,
                "b": 0.8823529411764706
              },
              {
                "r": 0.8549019607843137,
                "g": 0.8549019607843137,
                "b": 0.8549019607843137
              },
              {
                "r": 0.803921568627451,
                "g": 0.8862745098039215,
                "b": 0.9607843137254902
              }
            ]
          },
          "court_rules_default_calendar": {
            "type": "boolean",
            "description": "Whether the calendar is default court rules calendar for current user"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Calendar*"
          },
          "permission": {
            "type": "string",
            "description": "The user's permission to the *Calendar*",
            "enum": [
              "owner",
              "editor",
              "viewer",
              "limited_viewer",
              "none"
            ]
          },
          "type": {
            "type": "string",
            "description": "The type of the *Calendar*",
            "enum": [
              "AccountCalendar",
              "AdhocCalendar",
              "UserCalendar"
            ]
          },
          "visible": {
            "type": "boolean",
            "description": "Whether the *Calendar* will be shown by default in the Clio Web UI (assuming no source is provided)."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Calendar* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Calendar* was last updated (as a ISO-8601 timestamp)"
          },
          "source": {
            "type": "string",
            "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web').",
            "enum": [
              "web",
              "mobile"
            ]
          }
        }
      },
      "Calendar": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Calendar_base"
          },
          {
            "type": "object",
            "properties": {
              "creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "Calendar_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Calendar Object Response",
                "$ref": "#/components/schemas/Calendar"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "CalendarShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Calendar Object Response",
            "$ref": "#/components/schemas/Calendar"
          }
        }
      },
      "CalendarList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Calendar List Response",
            "items": {
              "$ref": "#/components/schemas/Calendar"
            }
          }
        }
      },
      "CalendarListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Calendar Event List Response",
            "items": {
              "$ref": "#/components/schemas/Calendar_Events"
            }
          }
        }
      },
      "Address_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Address*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Address*"
          },
          "street": {
            "type": "string",
            "description": "Street of the *Address*"
          },
          "city": {
            "type": "string",
            "description": "City of the *Address*"
          },
          "province": {
            "type": "string",
            "description": "Province or state of the *Address*"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code of the *Address*"
          },
          "country": {
            "type": "string",
            "description": "Country of the *Address*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Address*",
            "enum": [
              "Work",
              "Home",
              "Billing",
              "Other"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Address* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Address* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Address_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Address_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Address Object Response",
                "$ref": "#/components/schemas/Address"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "JobTitle_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *JobTitle*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *JobTitle*"
          },
          "name": {
            "type": "string",
            "description": "Name of the job title"
          },
          "initials": {
            "type": "string",
            "description": "Initials of the job title"
          }
        }
      },
      "JobTitle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobTitle_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "JobTitle_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "JobTitle Object Response",
                "$ref": "#/components/schemas/JobTitle"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Account_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Account*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Account*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Account*"
          },
          "state": {
            "type": "string",
            "description": "Account state"
          }
        }
      },
      "Account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Account_base"
          },
          {
            "type": "object",
            "properties": {
              "owner": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "Account_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Account Object Response",
                "$ref": "#/components/schemas/Account"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Group_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Group*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Group*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Group*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Group*",
            "enum": [
              "UserGroup",
              "AdhocGroup",
              "AccountGroup"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Group* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Group* was last updated (as a ISO-8601 timestamp)"
          },
          "client_connect_user": {
            "type": "boolean",
            "description": "Whether or not the Group is a UserGroup for a Clio Connect User"
          }
        }
      },
      "Group": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Group_base"
          },
          {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User_base"
                },
                "description": "User"
              }
            }
          }
        ]
      },
      "Group_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Group Object Response",
                "$ref": "#/components/schemas/Group"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "GroupShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Group Object Response",
            "$ref": "#/components/schemas/Group"
          }
        }
      },
      "GroupList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Group List Response",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "GroupListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Group Event List Response",
            "items": {
              "$ref": "#/components/schemas/Group_Events"
            }
          }
        }
      },
      "UtbmsCode_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *UtbmsCode*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *UtbmsCode*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *UtbmsCode*"
          },
          "code": {
            "type": "string",
            "description": "The UTBMS code for the *UtbmsCode*"
          },
          "description": {
            "type": "string",
            "description": "The UTBMS description for the *UtbmsCode*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *UtbmsCode*",
            "enum": [
              "UtbmsTask",
              "UtbmsExpense",
              "UtbmsActivity"
            ]
          },
          "utbms_set_id": {
            "type": "integer",
            "format": "int32",
            "description": "Set id for the *UtbmsCode*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *UtbmsCode* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *UtbmsCode* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "UtbmsCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UtbmsCode_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "UtbmsCode_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "UtbmsCode Object Response",
                "$ref": "#/components/schemas/UtbmsCode"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "UtbmsCodeShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "UtbmsCode Object Response",
            "$ref": "#/components/schemas/UtbmsCode"
          }
        }
      },
      "UtbmsCodeList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "UtbmsCode List Response",
            "items": {
              "$ref": "#/components/schemas/UtbmsCode"
            }
          }
        }
      },
      "UtbmsCodeListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "UtbmsCode Event List Response",
            "items": {
              "$ref": "#/components/schemas/UtbmsCode_Events"
            }
          }
        }
      },
      "ActivityRate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ActivityRate*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ActivityRate*"
          },
          "rate": {
            "type": "number",
            "format": "double",
            "description": "Monetary value of this rate. Either hourly value or flat rate value"
          },
          "flat_rate": {
            "type": "boolean",
            "description": "Whether this is a flat rate"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ActivityRate* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ActivityRate* was last updated (as a ISO-8601 timestamp)"
          },
          "contact_id": {
            "type": "integer",
            "format": "int32",
            "description": "Filter ActivityRate records for the contact."
          },
          "co_counsel_contact_id": {
            "type": "integer",
            "format": "int32",
            "description": "Filter ActivityRate records for the co-counsel."
          }
        }
      },
      "ActivityRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActivityRate_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "group": {
                "$ref": "#/components/schemas/Group_base",
                "description": "Group"
              }
            }
          }
        ]
      },
      "ActivityRate_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ActivityRate Object Response",
                "$ref": "#/components/schemas/ActivityRate"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ActivityRateShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "ActivityRate Object Response",
            "$ref": "#/components/schemas/ActivityRate"
          }
        }
      },
      "ActivityRateList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ActivityRate List Response",
            "items": {
              "$ref": "#/components/schemas/ActivityRate"
            }
          }
        }
      },
      "ActivityRateListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ActivityRate Event List Response",
            "items": {
              "$ref": "#/components/schemas/ActivityRate_Events"
            }
          }
        }
      },
      "Contact_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Contact*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Contact*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *Contact*"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the Person"
          },
          "middle_name": {
            "type": "string",
            "description": "Middle name of the Person"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the Person"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Contact*",
            "enum": [
              "Company",
              "Person"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Contact* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Contact* was last updated (as a ISO-8601 timestamp)"
          },
          "prefix": {
            "type": "string",
            "description": "The prefix of the *Contact* (Mr, Mrs, etc)"
          },
          "title": {
            "type": "string",
            "description": "The designated title of the *Contact*"
          },
          "initials": {
            "type": "string",
            "description": "The initials of the *Contact*"
          },
          "clio_connect_email": {
            "type": "string",
            "description": "Clio Connect email if the *Contact* is a ClioConnect User"
          },
          "locked_clio_connect_email": {
            "type": "boolean",
            "description": "A boolean indicating if the ability to modify this *Contacts Clio connect email is locked."
          },
          "client_connect_user_id": {
            "type": "integer",
            "format": "int32",
            "description": "The ID for the Clio Connect user associated with this *Contact*"
          },
          "primary_email_address": {
            "type": "string",
            "description": "The primary email address associated with this *Contact*."
          },
          "primary_phone_number": {
            "type": "string",
            "description": "The primary phone number associated with this *Contact*."
          },
          "ledes_client_id": {
            "type": "string",
            "description": "LEDES client id of the Contact"
          },
          "is_client": {
            "type": "boolean",
            "description": "Whether or not the Contact is a client"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date",
            "description": "The date the most recent payment from the client was received"
          },
          "total_outstanding_balance": {
            "type": "number",
            "format": "double",
            "description": "The sum of all bills in the awaiting payment state"
          },
          "associated_matter_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "An array of Matter IDs associated with bills in the awaiting payment state"
          },
          "newest_issued_bill_due_date": {
            "type": "string",
            "format": "date",
            "description": "The due date of the contact's newest bill"
          },
          "last_shared_date": {
            "type": "string",
            "format": "date",
            "description": "The date of the most recently shared bills"
          }
        }
      },
      "Contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Contact_base"
          },
          {
            "type": "object",
            "properties": {
              "activity_rates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityRate_base"
                },
                "description": "ActivityRate"
              },
              "addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address_base"
                },
                "description": "Address"
              },
              "custom_field_values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldValue_base"
                },
                "description": "CustomFieldValue"
              },
              "custom_field_set_associations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldSetAssociation_base"
                },
                "description": "CustomFieldSetAssociation"
              },
              "email_addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmailAddress_base"
                },
                "description": "EmailAddress"
              },
              "instant_messengers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InstantMessenger_base"
                },
                "description": "InstantMessenger"
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhoneNumber_base"
                },
                "description": "PhoneNumber"
              },
              "web_sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebSite_base"
                },
                "description": "WebSite"
              },
              "notification_methods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotificationMethod_base"
                },
                "description": "NotificationMethod"
              },
              "account_balances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountBalance_base"
                },
                "description": "AccountBalance"
              },
              "related_contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Contact_base"
                },
                "description": "Contact"
              },
              "primary_work_address": {
                "$ref": "#/components/schemas/Address_base",
                "description": "Address"
              },
              "primary_address": {
                "$ref": "#/components/schemas/Address_base",
                "description": "Address"
              },
              "company": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "avatar": {
                "$ref": "#/components/schemas/Avatar_base",
                "description": "Avatar"
              },
              "payment_profile": {
                "$ref": "#/components/schemas/PaymentProfile_base",
                "description": "PaymentProfile"
              },
              "folder": {
                "$ref": "#/components/schemas/Folder_base",
                "description": "Folder"
              },
              "co_counsel_rate": {
                "$ref": "#/components/schemas/ActivityRate_base",
                "description": "ActivityRate"
              },
              "primary_web_site": {
                "$ref": "#/components/schemas/WebSite_base",
                "description": "WebSite"
              }
            }
          }
        ]
      },
      "Contact_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Contact Object Response",
                "$ref": "#/components/schemas/Contact"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ContactShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Contact Object Response",
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "ContactList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Contact List Response",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "ContactListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Contact Event List Response",
            "items": {
              "$ref": "#/components/schemas/Contact_Events"
            }
          }
        }
      },
      "Folder_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Folder*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Folder*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Folder* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Folder* was last updated (as a ISO-8601 timestamp)"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Folder* was deleted (as a ISO-8601 timestamp)"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Folder*",
            "enum": [
              "Folder"
            ]
          },
          "locked": {
            "type": "boolean",
            "description": "Whether or not the Folder is locked. Locked Folder cannot be modified"
          },
          "name": {
            "type": "string",
            "description": "The name of the Folder"
          },
          "root": {
            "type": "boolean",
            "description": "Whether or not the Folder is the root folder. There is only one root folder per account"
          }
        }
      },
      "Folder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Folder_base"
          },
          {
            "type": "object",
            "properties": {
              "parent": {
                "$ref": "#/components/schemas/Folder_base",
                "description": "Folder"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "document_category": {
                "$ref": "#/components/schemas/DocumentCategory_base",
                "description": "DocumentCategory"
              },
              "creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "latest_document_version": {
                "$ref": "#/components/schemas/DocumentVersion_base",
                "description": "DocumentVersion"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              }
            }
          }
        ]
      },
      "Folder_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Folder Object Response",
                "$ref": "#/components/schemas/Folder"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "FolderShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Folder Object Response",
            "$ref": "#/components/schemas/Folder"
          }
        }
      },
      "FolderList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Folder List Response",
            "items": {
              "$ref": "#/components/schemas/Folder"
            }
          }
        }
      },
      "FolderListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Folder Event List Response",
            "items": {
              "$ref": "#/components/schemas/Folder_Events"
            }
          }
        }
      },
      "Item_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Item*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Item*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Item* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Item* was last updated (as a ISO-8601 timestamp)"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Item* was deleted (as a ISO-8601 timestamp)"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Item*",
            "enum": [
              "Document",
              "Folder"
            ]
          },
          "locked": {
            "type": "boolean",
            "description": "Whether or not the Item is locked. Locked Item cannot be modified"
          },
          "name": {
            "type": "string",
            "description": "The name of the Item"
          }
        }
      },
      "Item": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Item_base"
          },
          {
            "type": "object",
            "properties": {
              "parent": {
                "$ref": "#/components/schemas/Folder_base",
                "description": "Folder"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "document_category": {
                "$ref": "#/components/schemas/DocumentCategory_base",
                "description": "DocumentCategory"
              },
              "creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "latest_document_version": {
                "$ref": "#/components/schemas/DocumentVersion_base",
                "description": "DocumentVersion"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              }
            }
          }
        ]
      },
      "Item_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Item Object Response",
                "$ref": "#/components/schemas/Item"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ItemList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Item List Response",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      },
      "ItemListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Item Event List Response",
            "items": {
              "$ref": "#/components/schemas/Item_Events"
            }
          }
        }
      },
      "Author_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Author*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Author*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Author*"
          }
        }
      },
      "Author": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Author_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Author_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Author Object Response",
                "$ref": "#/components/schemas/Author"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "DocumentArchive_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *DocumentArchive*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentArchive*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentArchive* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentArchive* was last updated (as a ISO-8601 timestamp)"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "The size of the DocumentArchive in bytes."
          },
          "progress": {
            "type": "number",
            "format": "double",
            "description": "The percent completion of the DocumentArchive."
          },
          "state": {
            "type": "string",
            "description": "The current state of the DocumentArchive.",
            "enum": [
              "not_started",
              "queued",
              "in_progress",
              "completed",
              "failed"
            ]
          },
          "message": {
            "type": "string",
            "description": "A message to indicate why the DocumentArchive didn't complete."
          }
        }
      },
      "DocumentArchive": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentArchive_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "DocumentArchive_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "DocumentArchive Object Response",
                "$ref": "#/components/schemas/DocumentArchive"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "DocumentArchiveShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "DocumentArchive Object Response",
            "$ref": "#/components/schemas/DocumentArchive"
          }
        }
      },
      "Matter_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Matter*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Matter*"
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "description": "The number given to the *Matter* within an account"
          },
          "display_number": {
            "type": "string",
            "description": "The reference and label of the *Matter*. Depending on the account's manual_matter_numbering setting, this is either read only (generated) or customizable."
          },
          "custom_number": {
            "type": "string",
            "description": "User defined custom number of the *Matter*"
          },
          "description": {
            "type": "string",
            "description": "The detailed description of the *Matter*"
          },
          "status": {
            "type": "string",
            "description": "The current status of the *Matter*",
            "enum": [
              "Pending",
              "Open",
              "Closed"
            ]
          },
          "location": {
            "type": "string",
            "description": "The location of the *Matter*"
          },
          "client_reference": {
            "type": "string",
            "description": "Client Reference string for external uses"
          },
          "billable": {
            "type": "boolean",
            "description": "Whether this matter is billable"
          },
          "maildrop_address": {
            "type": "string",
            "description": "A unique Maildrop email address for the matter"
          },
          "billing_method": {
            "type": "string",
            "description": "Billing method of this matter",
            "enum": [
              "flat",
              "contingency",
              "hourly"
            ]
          },
          "open_date": {
            "type": "string",
            "format": "date",
            "description": "The date the matter was set to open (as a ISO-8601 date)"
          },
          "close_date": {
            "type": "string",
            "format": "date",
            "description": "The date the matter was set to closed (as a ISO-8601 date)"
          },
          "pending_date": {
            "type": "string",
            "format": "date",
            "description": "The date the matter was set to pending (as a ISO-8601 date)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Matter* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Matter* was last updated (as a ISO-8601 timestamp)"
          },
          "shared": {
            "type": "boolean",
            "description": "Whether the matter is currently shared with Clio Connect"
          }
        }
      },
      "Matter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Matter_base"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "contingency_fee": {
                "$ref": "#/components/schemas/ContingencyFee_base",
                "description": "ContingencyFee"
              },
              "custom_rate": {
                "$ref": "#/components/schemas/MatterCustomRate",
                "description": "MatterCustomRate"
              },
              "folder": {
                "$ref": "#/components/schemas/Folder_base",
                "description": "Folder"
              },
              "group": {
                "$ref": "#/components/schemas/Group_base",
                "description": "Group"
              },
              "matter_budget": {
                "$ref": "#/components/schemas/MatterBudget_base",
                "description": "MatterBudget"
              },
              "originating_attorney": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "practice_area": {
                "$ref": "#/components/schemas/PracticeArea_base",
                "description": "PracticeArea"
              },
              "responsible_attorney": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "statute_of_limitations": {
                "$ref": "#/components/schemas/Task_base",
                "description": "Task"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "import": {
                "$ref": "#/components/schemas/ImportDetail_base",
                "description": "ImportDetail"
              },
              "account_balances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountBalance_base"
                },
                "description": "AccountBalance"
              },
              "custom_field_values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldValue_base"
                },
                "description": "CustomFieldValue"
              },
              "custom_field_set_associations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldSetAssociation_base"
                },
                "description": "CustomFieldSetAssociation"
              },
              "relationships": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Relationship_base"
                },
                "description": "Relationship"
              },
              "task_template_list_instances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskTemplateListInstace_base"
                },
                "description": "TaskTemplateListInstace"
              }
            }
          }
        ]
      },
      "Matter_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Matter Object Response",
                "$ref": "#/components/schemas/Matter"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "MatterShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Matter Object Response",
            "$ref": "#/components/schemas/Matter"
          }
        }
      },
      "MatterList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Matter List Response",
            "items": {
              "$ref": "#/components/schemas/Matter"
            }
          }
        }
      },
      "MatterListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Matter Event List Response",
            "items": {
              "$ref": "#/components/schemas/Matter_Events"
            }
          }
        }
      },
      "User_base": {
        "type": "object",
        "properties": {
          "account_owner": {
            "type": "boolean",
            "description": "Whether the *User* is the owner of the account"
          },
          "clio_connect": {
            "type": "boolean",
            "description": "Whether the *User* is a Clio Connect user"
          },
          "court_rules_default_attendee": {
            "type": "boolean",
            "description": "Whether the *User* is a default attendee for court rules events"
          },
          "default_calendar_id": {
            "type": "integer",
            "format": "int32",
            "description": "Default calendar id for *User*."
          },
          "email": {
            "type": "string",
            "description": "The email of the *User*"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the *User* is allowed to log in"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *User*"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the *User*"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *User*"
          },
          "initials": {
            "type": "string",
            "description": "The initials of the *User*"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the *User*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *User*"
          },
          "phone_number": {
            "type": "string",
            "description": "The primary phone number for the *User*."
          },
          "rate": {
            "type": "number",
            "format": "float",
            "description": "Default user activity rate for *User*."
          },
          "subscription_type": {
            "type": "string",
            "description": "The subscription type of the *User*",
            "enum": [
              "Attorney",
              "NonAttorney"
            ]
          },
          "time_zone": {
            "type": "string",
            "description": "The selected time zone of the *User*"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of roles assigned to this *User*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *User* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *User* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User_base"
          },
          {
            "type": "object",
            "properties": {
              "default_activity_description": {
                "$ref": "#/components/schemas/ActivityDescription_base",
                "description": "ActivityDescription"
              },
              "notification_methods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotificationMethod_base"
                },
                "description": "NotificationMethod"
              },
              "account": {
                "$ref": "#/components/schemas/Account_base",
                "description": "Account"
              },
              "avatar": {
                "$ref": "#/components/schemas/Avatar_base",
                "description": "Avatar"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "job_title": {
                "$ref": "#/components/schemas/JobTitle_base",
                "description": "JobTitle"
              }
            }
          }
        ]
      },
      "User_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "User Object Response",
                "$ref": "#/components/schemas/User"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "UserShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "User Object Response",
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "User List Response",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "UserListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "User Event List Response",
            "items": {
              "$ref": "#/components/schemas/User_Events"
            }
          }
        }
      },
      "ActivityDescription_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ActivityDescription*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ActivityDescription*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *ActivityDescription*"
          },
          "visible_to_co_counsel": {
            "type": "boolean",
            "description": "A toggle that determines if a co-counsel user of the firm can have access to this activity description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ActivityDescription* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ActivityDescription* was last updated (as a ISO-8601 timestamp)"
          },
          "default": {
            "type": "boolean",
            "description": "Whether it is the user's default activity description"
          },
          "type": {
            "type": "string",
            "description": "The type of the *ActivityDescription*"
          },
          "utbms_activity_id": {
            "type": "integer",
            "format": "int32",
            "description": "The UTBMS activity id if the *ActivityDescription* is a UTBMS activity description"
          },
          "utbms_task_name": {
            "type": "string",
            "description": "The UTBMS activity task name if attached to a UTBMS activity description"
          },
          "utbms_task_id": {
            "type": "integer",
            "format": "int32",
            "description": "The UTBMS activity task id if attached to a UTBMS activity description"
          },
          "accessible_to_user": {
            "type": "boolean",
            "description": "Determines if activity description is accessible to user"
          }
        }
      },
      "ActivityDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActivityDescription_base"
          },
          {
            "type": "object",
            "properties": {
              "groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group_base"
                },
                "description": "Group"
              },
              "rate": {
                "$ref": "#/components/schemas/ActivityDescriptionRate_base",
                "description": "ActivityDescriptionRate"
              },
              "utbms_task": {
                "$ref": "#/components/schemas/UtbmsCode_base",
                "description": "UtbmsCode"
              },
              "utbms_activity": {
                "$ref": "#/components/schemas/UtbmsCode_base",
                "description": "UtbmsCode"
              }
            }
          }
        ]
      },
      "ActivityDescription_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ActivityDescription Object Response",
                "$ref": "#/components/schemas/ActivityDescription"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ActivityDescriptionShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "ActivityDescription Object Response",
            "$ref": "#/components/schemas/ActivityDescription"
          }
        }
      },
      "ActivityDescriptionList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ActivityDescription List Response",
            "items": {
              "$ref": "#/components/schemas/ActivityDescription"
            }
          }
        }
      },
      "ActivityDescriptionListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ActivityDescription Event List Response",
            "items": {
              "$ref": "#/components/schemas/ActivityDescription_Events"
            }
          }
        }
      },
      "ActivityDescriptionRate_base": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Monetary value of this rate. Either hourly value or flat rate value"
          },
          "non_billable_amount": {
            "type": "number",
            "format": "double",
            "description": "Monetary value of this rate for non billable activities. Either hourly value or flat rate value"
          },
          "type": {
            "type": "string",
            "description": "What kind of rate it is.",
            "enum": [
              "User",
              "FlatRate",
              "Custom"
            ]
          },
          "hierarchy": {
            "type": "string",
            "description": "What rate hierarchy the rate belongs to.",
            "enum": [
              "Default",
              "Activity",
              "Matter",
              "Client"
            ]
          }
        }
      },
      "ActivityDescriptionRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActivityDescriptionRate_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "ActivityDescriptionRate_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ActivityDescriptionRate Object Response",
                "$ref": "#/components/schemas/ActivityDescriptionRate"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "NotificationMethod_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *NotificationMethod*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *NotificationMethod*"
          },
          "type": {
            "type": "string",
            "description": "Human readable description of the type of notification",
            "enum": [
              "Email",
              "Popup"
            ]
          },
          "email_address": {
            "type": "string",
            "description": "Email address to send the notification to (only for email type)"
          },
          "is_default_email_address": {
            "type": "boolean",
            "description": "A boolean that is returned only on notification method objects that are relevant e.g. Email notification or Alternative Email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *NotificationMethod* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *NotificationMethod* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "NotificationMethod": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NotificationMethod_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "user_for_reminder": {
                "$ref": "#/components/schemas/NotificationMethod_User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "NotificationMethod_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "NotificationMethod Object Response",
                "$ref": "#/components/schemas/NotificationMethod"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "NotificationMethod_User_base": {
        "type": "object",
        "properties": {
          "clio_connect": {
            "type": "boolean",
            "description": "Whether the *User* is a Clio Connect user"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the *User* is allowed to log in"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the *User*"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *User*"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the *User*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *User*"
          }
        }
      },
      "Avatar_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Avatar*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Avatar*"
          },
          "url": {
            "type": "string",
            "description": "The URL for the *Avatar*"
          },
          "_destroy": {
            "type": "boolean",
            "description": "Whether to destroy the *Avatar*"
          }
        }
      },
      "Avatar": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Avatar_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Avatar_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Avatar Object Response",
                "$ref": "#/components/schemas/Avatar"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "EmailAddress_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *EmailAddress*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *EmailAddress*"
          },
          "address": {
            "type": "string",
            "description": "The address of the *EmailAddress*"
          },
          "name": {
            "type": "string",
            "description": "The type of *EmailAddress* it is",
            "enum": [
              "Work",
              "Home",
              "Other"
            ]
          },
          "default_email": {
            "type": "boolean",
            "description": "Whether it is the default for this contact"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *EmailAddress* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *EmailAddress* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "EmailAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EmailAddress_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "EmailAddress_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "EmailAddress Object Response",
                "$ref": "#/components/schemas/EmailAddress"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "WebSite_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *WebSite*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *WebSite*"
          },
          "address": {
            "type": "string",
            "description": "The address of the *WebSite*"
          },
          "name": {
            "type": "string",
            "description": "The type of *WebSite* it is",
            "enum": [
              "Work",
              "Personal",
              "Twitter",
              "Facebook",
              "LinkedIn",
              "Instant Messenger",
              "Other"
            ]
          },
          "default_web_site": {
            "type": "boolean",
            "description": "Whether it is the default for this contact"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *WebSite* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *WebSite* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "WebSite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WebSite_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "WebSite_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "WebSite Object Response",
                "$ref": "#/components/schemas/WebSite"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Discount_base": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number",
            "format": "double",
            "description": "The rate of the *Discount%*"
          },
          "type": {
            "type": "string",
            "description": "The type of *Discount* being applied in your *Discount* rate.",
            "enum": [
              "percentage",
              "money"
            ]
          },
          "note": {
            "type": "string",
            "description": "A note for your *Discount*"
          },
          "early_payment_rate": {
            "type": "integer",
            "format": "int32",
            "description": "The % discount that will be applied if your *Discount* is paid within the early payment period."
          },
          "early_payment_period": {
            "type": "integer",
            "format": "int32",
            "description": "The number of days for your *Discount* period. If your bill is paid within this time, apply your *Discount* rate to the bill."
          }
        }
      },
      "Discount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Discount_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Discount_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Discount Object Response",
                "$ref": "#/components/schemas/Discount"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BillTheme_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *BillTheme*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BillTheme*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BillTheme* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BillTheme* was last updated (as a ISO-8601 timestamp)"
          },
          "account_id": {
            "type": "integer",
            "format": "int32",
            "description": "The account number the *BillTheme* belongs to"
          },
          "default": {
            "type": "boolean",
            "description": "Whether the *BillTheme* is the default for its account"
          },
          "name": {
            "type": "string",
            "description": "The name of the *BillTheme*"
          },
          "config": {
            "type": "string",
            "description": "The configuration of the *BillTheme*"
          }
        }
      },
      "BillTheme": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillTheme_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "BillTheme_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "BillTheme Object Response",
                "$ref": "#/components/schemas/BillTheme"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BillThemeShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "BillTheme Object Response",
            "$ref": "#/components/schemas/BillTheme"
          }
        }
      },
      "BillThemeList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BillTheme List Response",
            "items": {
              "$ref": "#/components/schemas/BillTheme"
            }
          }
        }
      },
      "BillThemeListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BillTheme Event List Response",
            "items": {
              "$ref": "#/components/schemas/BillTheme_Events"
            }
          }
        }
      },
      "BankAccount_base": {
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string",
            "description": "The account number for *BankAccount*"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "description": "The current balance of the *BankAccount*"
          },
          "bank_transactions_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of bank transactions associated with the account."
          },
          "clio_payment_page_link": {
            "type": "string",
            "description": "Link to Single Payment Page which allows to transfer funds without logging in."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankAccount* was created (as a ISO-8601 timestamp)"
          },
          "currency": {
            "type": "string",
            "description": "The currency type of the *BankAccount*"
          },
          "default_account": {
            "type": "boolean",
            "description": "Whether it is the default account"
          },
          "domicile_branch": {
            "type": "string",
            "description": "The name of the branch where the account was opened"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BankAccount*"
          },
          "general_ledger_number": {
            "type": "string",
            "description": "General ledger number"
          },
          "holder": {
            "type": "string",
            "description": "The name of the person or business that owns the *BankAccount*"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *BankAccount*"
          },
          "institution": {
            "type": "string",
            "description": "The financial institution where the *BankAccount* is registered"
          },
          "name": {
            "type": "string",
            "description": "The name of the *BankAccount*"
          },
          "swift": {
            "type": "string",
            "description": "A unique identification code for the financial institution"
          },
          "transit_number": {
            "type": "string",
            "description": "Transit number for the bank account branch"
          },
          "type": {
            "type": "string",
            "description": "The type of the *BankAccount*",
            "enum": [
              "Operating",
              "Trust"
            ]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankAccount* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "BankAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankAccount_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "clio_payments_merchant_account_mapping": {
                "$ref": "#/components/schemas/ClioPaymentsMerchantAccountMapping_base",
                "description": "ClioPaymentsMerchantAccountMapping"
              }
            }
          }
        ]
      },
      "BankAccount_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "BankAccount Object Response",
                "$ref": "#/components/schemas/BankAccount"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BankAccountShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "BankAccount Object Response",
            "$ref": "#/components/schemas/BankAccount"
          }
        }
      },
      "BankAccountList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BankAccount List Response",
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          }
        }
      },
      "BankAccountListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BankAccount Event List Response",
            "items": {
              "$ref": "#/components/schemas/BankAccount_Events"
            }
          }
        }
      },
      "Balance_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Balance*"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount for this Balance."
          },
          "type": {
            "type": "string",
            "description": "The type of Balance this data is for.",
            "enum": [
              "Matter",
              "Client"
            ]
          },
          "interest_amount": {
            "type": "number",
            "format": "double",
            "description": "The interest amount for this Balance."
          },
          "due": {
            "type": "number",
            "format": "double",
            "description": "The amount due for this Balance, factoring in applicable discounts."
          }
        }
      },
      "Balance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Balance_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Balance_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Balance Object Response",
                "$ref": "#/components/schemas/Balance"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BillingSetting_base": {
        "type": "object",
        "properties": {
          "etag": {
            "type": "string",
            "description": "ETag for the *BillingSetting*"
          },
          "rounded_duration": {
            "type": "number",
            "format": "float",
            "description": "Rounded equivalent of duration submitted"
          },
          "rounding": {
            "type": "integer",
            "format": "int32",
            "description": "Minute increment for time rounding"
          },
          "use_decimal_rounding": {
            "type": "boolean",
            "description": "Round time to two decimal places"
          },
          "currency": {
            "type": "string",
            "description": "Current user setting of currency"
          },
          "currency_sign": {
            "type": "string",
            "description": "The sign of the current currency"
          },
          "tax_rate": {
            "type": "number",
            "format": "double",
            "description": "Rate applied for primary tax on invoices using this BillingSetting"
          },
          "tax_name": {
            "type": "string",
            "description": "Name shown for primary tax on invoices using this BillingSetting"
          },
          "use_secondary_tax": {
            "type": "boolean",
            "description": "Used to determine if secondary tax applies to invoices using this BillingSetting"
          },
          "secondary_tax_rate": {
            "type": "number",
            "format": "double",
            "description": "Rate applied for secondary tax on invoices using this BillingSetting"
          },
          "secondary_tax_rule": {
            "type": "string",
            "description": "Used to determine if secondary tax should be applied separately or additionally to primary tax",
            "enum": [
              "Pre",
              "Post"
            ]
          },
          "secondary_tax_name": {
            "type": "string",
            "description": "Name shown for secondary tax on invoices using this BillingSetting"
          },
          "notify_after_bill_created": {
            "type": "boolean",
            "description": "Flag to indicate if users should have the option to notify other users when generating a bill"
          },
          "use_utbms_codes": {
            "type": "boolean",
            "description": "Controls usage of UTBMS codes, allowing creation of coded time entries and expenses"
          }
        }
      },
      "BillingSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillingSetting_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "BillingSetting_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "BillingSetting Object Response",
                "$ref": "#/components/schemas/BillingSetting"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BillingSettingShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "BillingSetting Object Response",
            "$ref": "#/components/schemas/BillingSetting"
          }
        }
      },
      "PaymentProfile_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *PaymentProfile*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *PaymentProfile*"
          },
          "billing_setting_id": {
            "type": "integer",
            "format": "int32",
            "description": "The unique identifier for the *PaymentProfile"
          },
          "name": {
            "type": "string",
            "description": "The name of the *PaymentProfile"
          },
          "terms": {
            "type": "integer",
            "format": "int32",
            "description": "The total grace period for the *PaymentProfile"
          },
          "discount_rate": {
            "type": "number",
            "format": "float",
            "description": "The early payment discount rate for the *PaymentProfile"
          },
          "discount_period": {
            "type": "integer",
            "format": "int32",
            "description": "The early payment discount period for the *PaymentProfile"
          },
          "interest_rate": {
            "type": "number",
            "format": "float",
            "description": "The interest rate for the *PaymentProfile"
          },
          "interest_period": {
            "type": "integer",
            "format": "int32",
            "description": "The interest period interval for the *PaymentProfile"
          },
          "interest_type": {
            "type": "string",
            "description": "The type of interest to be calculated for the *PaymentProfile (Simple or Compound)",
            "enum": [
              "simple",
              "compound"
            ]
          }
        }
      },
      "PaymentProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentProfile_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PaymentProfile_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "PaymentProfile Object Response",
                "$ref": "#/components/schemas/PaymentProfile"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "MatterCustomRate_base": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the *MatterCustomRate*",
            "enum": [
              "FlatRate",
              "HourlyRate",
              "ContingencyFee"
            ]
          },
          "on_invoice": {
            "type": "boolean",
            "description": "Specifies if the matter's associated activity is posted or on a bill."
          }
        }
      },
      "MatterCustomRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MatterCustomRate_base"
          },
          {
            "type": "object",
            "properties": {
              "rates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PolymorphicCustomRate"
                },
                "description": "PolymorphicCustomRate"
              }
            }
          }
        ]
      },
      "MatterCustomRate_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "MatterCustomRate Object Response",
                "$ref": "#/components/schemas/MatterCustomRate"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "MatterBudget_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *MatterBudget*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MatterBudget*"
          },
          "budget": {
            "type": "number",
            "format": "double",
            "description": "The amount allocated for the matter."
          },
          "include_expenses": {
            "type": "boolean",
            "description": "Whether the budget includes expenses."
          },
          "notification_threshold": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage of the budget when it starts notifying users."
          },
          "notify_users": {
            "type": "boolean",
            "description": "Whether to notify users when the matter reaches the notification threshold."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterBudget* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterBudget* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "MatterBudget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MatterBudget_base"
          },
          {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User_base"
                },
                "description": "User"
              }
            }
          }
        ]
      },
      "MatterBudget_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "MatterBudget Object Response",
                "$ref": "#/components/schemas/MatterBudget"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Task_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Task*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Task*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Task*"
          },
          "status": {
            "type": "string",
            "description": "Status of the *Task*. (Note that users without advanced tasks can only have either complete or pending)",
            "enum": [
              "pending",
              "in_progress",
              "in_review",
              "complete"
            ]
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *Task*"
          },
          "priority": {
            "type": "string",
            "description": "The priority of the *Task*",
            "enum": [
              "High",
              "Normal",
              "Low"
            ]
          },
          "due_at": {
            "type": "string",
            "format": "date",
            "description": "The date the *Task* is due (as a ISO-8601 date)"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Task* was completed (as a ISO-8601 timestamp)"
          },
          "notify_completion": {
            "type": "boolean",
            "description": "Whether to notify the assigner of the task's completion"
          },
          "statute_of_limitations": {
            "type": "boolean",
            "description": "Whether the task is a statute of limitations"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Task* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Task* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Task": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Task_base"
          },
          {
            "type": "object",
            "properties": {
              "task_type": {
                "$ref": "#/components/schemas/TaskType_base",
                "description": "TaskType"
              },
              "assigner": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "assignee": {
                "$ref": "#/components/schemas/Participant_base",
                "description": "Participant"
              },
              "reminders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reminder_base"
                },
                "description": "Reminder"
              }
            }
          }
        ]
      },
      "Task_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Task Object Response",
                "$ref": "#/components/schemas/Task"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TaskShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Task Object Response",
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "TaskList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Task List Response",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "TaskListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Task Event List Response",
            "items": {
              "$ref": "#/components/schemas/Task_Events"
            }
          }
        }
      },
      "Participant_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Participant*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Participant*",
            "enum": [
              "Contact",
              "User"
            ]
          },
          "identifier": {
            "type": "string",
            "description": "A string to identify the *Participant*"
          },
          "secondary_identifier": {
            "type": "string",
            "description": "A secondary string to identify the *Participant*"
          },
          "enabled": {
            "type": "boolean",
            "description": "The enabled state of the *Participant* record. Always 'null' if *Participant* type is Contact"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Participant* record"
          }
        }
      },
      "Participant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Participant_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Participant_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Participant Object Response",
                "$ref": "#/components/schemas/Participant"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Relationship_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Relationship*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Relationship*"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *Relationship*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Relationship* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Relationship* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Relationship": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Relationship_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "Relationship_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Relationship Object Response",
                "$ref": "#/components/schemas/Relationship"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "RelationshipShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Relationship Object Response",
            "$ref": "#/components/schemas/Relationship"
          }
        }
      },
      "RelationshipList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Relationship List Response",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            }
          }
        }
      },
      "RelationshipListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Relationship Event List Response",
            "items": {
              "$ref": "#/components/schemas/Relationship_Events"
            }
          }
        }
      },
      "TaskTemplateList_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *TaskTemplateList*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TaskTemplateList*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *TaskTemplateList*"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *TaskTemplateList*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplateList* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplateList* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TaskTemplateList_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "TaskTemplateList Object Response",
                "$ref": "#/components/schemas/TaskTemplateList"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "TaskTemplateListShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "TaskTemplateList Object Response",
            "$ref": "#/components/schemas/TaskTemplateList"
          }
        }
      },
      "TaskTemplateListList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TaskTemplateList List Response",
            "items": {
              "$ref": "#/components/schemas/TaskTemplateList"
            }
          }
        }
      },
      "TaskTemplateListListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TaskTemplateList Event List Response",
            "items": {
              "$ref": "#/components/schemas/TaskTemplateList_Events"
            }
          }
        }
      },
      "DocumentCategory_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *DocumentCategory*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentCategory*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *DocumentCategory*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentCategory* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentCategory* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "DocumentCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentCategory_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "DocumentCategory_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "DocumentCategory Object Response",
                "$ref": "#/components/schemas/DocumentCategory"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "DocumentCategoryShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "DocumentCategory Object Response",
            "$ref": "#/components/schemas/DocumentCategory"
          }
        }
      },
      "DocumentCategoryList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentCategory List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentCategory"
            }
          }
        }
      },
      "DocumentCategoryListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentCategory Event List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentCategory_Events"
            }
          }
        }
      },
      "Multipart_base": {
        "type": "object",
        "properties": {
          "part_number": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of a part which defines its position within the document being uploaded."
          },
          "put_url": {
            "type": "string",
            "description": "A signed URL for uploading the file part. It expires in 10 minutes."
          }
        }
      },
      "Multipart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Multipart_base"
          },
          {
            "type": "object",
            "properties": {
              "put_headers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultipartHeader_base"
                },
                "description": "MultipartHeader"
              }
            }
          }
        ]
      },
      "Multipart_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Multipart Object Response",
                "$ref": "#/components/schemas/Multipart"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Document_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Document*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Document*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Document* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Document* was last updated (as a ISO-8601 timestamp)"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Document* was deleted (as a ISO-8601 timestamp)"
          },
          "type": {
            "type": "string",
            "description": "The type of the *Document*",
            "enum": [
              "Document"
            ]
          },
          "locked": {
            "type": "boolean",
            "description": "Whether or not the Document is locked. Locked Document cannot be modified"
          },
          "name": {
            "type": "string",
            "description": "The name of the Document"
          },
          "received_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the last document version was received (as an ISO-8601 timestamp)"
          },
          "filename": {
            "type": "string",
            "description": "The uploaded file name of the latest document version."
          }
        }
      },
      "Document": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Document_base"
          },
          {
            "type": "object",
            "properties": {
              "parent": {
                "$ref": "#/components/schemas/Folder_base",
                "description": "Folder"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "document_category": {
                "$ref": "#/components/schemas/DocumentCategory_base",
                "description": "DocumentCategory"
              },
              "creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "latest_document_version": {
                "$ref": "#/components/schemas/DocumentVersion",
                "description": "DocumentVersion"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              },
              "document_versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentVersion_base"
                },
                "description": "DocumentVersion"
              }
            }
          }
        ]
      },
      "Document_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Document Object Response",
                "$ref": "#/components/schemas/Document"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "DocumentShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Document Object Response",
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "DocumentList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Document List Response",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        }
      },
      "DocumentListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Document Event List Response",
            "items": {
              "$ref": "#/components/schemas/Document_Events"
            }
          }
        }
      },
      "Allocation_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Allocation*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Allocation*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date the allocation was applied (as a ISO-8601 date)"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The total amount of money that the user has allocated"
          },
          "interest": {
            "type": "boolean",
            "description": "Whether the allocation is applied to interest amount"
          },
          "voided_at": {
            "type": "string",
            "format": "date-time",
            "description": "Time the *Allocation* was voided (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Allocation* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Allocation* was last updated (as a ISO-8601 timestamp)"
          },
          "description": {
            "type": "string",
            "description": "The description from the associated Credit Memo (if applicable)"
          },
          "has_online_payment": {
            "type": "boolean",
            "description": "Whether this allocation is associated with an online payment or not"
          },
          "destroyable": {
            "type": "boolean",
            "description": "Whether the record can be deleted or not"
          }
        }
      },
      "Allocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Allocation_base"
          },
          {
            "type": "object",
            "properties": {
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "source_bank_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "destination_bank_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "parent": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              }
            }
          }
        ]
      },
      "Allocation_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Allocation Object Response",
                "$ref": "#/components/schemas/Allocation"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "AllocationShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Allocation Object Response",
            "$ref": "#/components/schemas/Allocation"
          }
        }
      },
      "AllocationList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Allocation List Response",
            "items": {
              "$ref": "#/components/schemas/Allocation"
            }
          }
        }
      },
      "AllocationListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Allocation Event List Response",
            "items": {
              "$ref": "#/components/schemas/Allocation_Events"
            }
          }
        }
      },
      "BankTransaction_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *BankTransaction*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *BankTransaction*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BankTransaction*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankTransaction* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankTransaction* was last updated (as a ISO-8601 timestamp)"
          },
          "bank_account_id": {
            "type": "integer",
            "format": "int32",
            "description": "The associated bank account."
          },
          "source": {
            "type": "string",
            "description": "Where the transaction came from."
          },
          "confirmation": {
            "type": "string",
            "description": "The reference code for the transaction."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date of the transaction."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the transaction."
          },
          "currency": {
            "type": "string",
            "description": "The currency of the transaction."
          },
          "description": {
            "type": "string",
            "description": "The description of the transaction."
          },
          "exchange_rate": {
            "type": "number",
            "format": "double",
            "description": "The exchange rate of the transaction."
          },
          "transaction_type": {
            "type": "string",
            "description": "What kind of transaction."
          },
          "funds_in": {
            "type": "number",
            "format": "double",
            "description": "The amount of funds received in this transaction."
          },
          "funds_out": {
            "type": "number",
            "format": "double",
            "description": "The amount of funds withdrawn in this transaction."
          },
          "clio_payments_transaction": {
            "type": "boolean",
            "description": "Whether the transaction was created through Clio Payments."
          }
        }
      },
      "BankTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankTransaction_base"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "bank_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "allocation": {
                "$ref": "#/components/schemas/Allocation_base",
                "description": "Allocation"
              }
            }
          }
        ]
      },
      "BankTransaction_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "BankTransaction Object Response",
                "$ref": "#/components/schemas/BankTransaction"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BankTransactionShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "BankTransaction Object Response",
            "$ref": "#/components/schemas/BankTransaction"
          }
        }
      },
      "BankTransactionList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BankTransaction List Response",
            "items": {
              "$ref": "#/components/schemas/BankTransaction"
            }
          }
        }
      },
      "BankTransactionListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BankTransaction Event List Response",
            "items": {
              "$ref": "#/components/schemas/BankTransaction_Events"
            }
          }
        }
      },
      "ConversationMembership_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ConversationMembership*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ConversationMembership*"
          },
          "read": {
            "type": "boolean",
            "description": "Whether or not the ConversationMembership has been read by the member"
          },
          "archived": {
            "type": "boolean",
            "description": "Whether or not the ConversationMembership has been archived by the member"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConversationMembership* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConversationMembership* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "ConversationMembership": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ConversationMembership_base"
          },
          {
            "type": "object",
            "properties": {
              "member": {
                "$ref": "#/components/schemas/Participant_base",
                "description": "Participant"
              }
            }
          }
        ]
      },
      "ConversationMembership_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ConversationMembership Object Response",
                "$ref": "#/components/schemas/ConversationMembership"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "Conversation_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Conversation*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Conversation*"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the *Conversation*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Conversation* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Conversation* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Conversation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Conversation_base"
          },
          {
            "type": "object",
            "properties": {
              "last_message": {
                "$ref": "#/components/schemas/ConversationMessage_base",
                "description": "ConversationMessage"
              },
              "first_message": {
                "$ref": "#/components/schemas/ConversationMessage_base",
                "description": "ConversationMessage"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "memberships": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConversationMembership"
                },
                "description": "ConversationMembership"
              }
            }
          }
        ]
      },
      "Conversation_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Conversation Object Response",
                "$ref": "#/components/schemas/Conversation"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ConversationShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "Conversation Object Response",
            "$ref": "#/components/schemas/Conversation"
          }
        }
      },
      "ConversationList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Conversation List Response",
            "items": {
              "$ref": "#/components/schemas/Conversation"
            }
          }
        }
      },
      "ConversationListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Conversation Event List Response",
            "items": {
              "$ref": "#/components/schemas/Conversation_Events"
            }
          }
        }
      },
      "BankTransfer_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *BankTransfer*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BankTransfer*"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the transfer."
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the transfer."
          },
          "description": {
            "type": "string",
            "description": "The description of the transfer."
          }
        }
      },
      "BankTransfer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankTransfer_base"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "source_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "destination_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              }
            }
          }
        ]
      },
      "BankTransfer_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "BankTransfer Object Response",
                "$ref": "#/components/schemas/BankTransfer"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BankTransferShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "BankTransfer Object Response",
            "$ref": "#/components/schemas/BankTransfer"
          }
        }
      },
      "ConversationMessage_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *ConversationMessage*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ConversationMessage*"
          },
          "body": {
            "type": "string",
            "description": "The main content of the *ConversationMessage*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConversationMessage* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConversationMessage* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "ConversationMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ConversationMessage_base"
          },
          {
            "type": "object",
            "properties": {
              "sender": {
                "$ref": "#/components/schemas/Participant_base",
                "description": "Participant"
              },
              "document": {
                "$ref": "#/components/schemas/Document_base",
                "description": "Document"
              },
              "conversation": {
                "$ref": "#/components/schemas/Conversation_base",
                "description": "Conversation"
              },
              "receivers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Participant_base"
                },
                "description": "Participant"
              }
            }
          }
        ]
      },
      "ConversationMessage_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "ConversationMessage Object Response",
                "$ref": "#/components/schemas/ConversationMessage"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "ConversationMessageShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "ConversationMessage Object Response",
            "$ref": "#/components/schemas/ConversationMessage"
          }
        }
      },
      "ConversationMessageList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ConversationMessage List Response",
            "items": {
              "$ref": "#/components/schemas/ConversationMessage"
            }
          }
        }
      },
      "ConversationMessageListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ConversationMessage Event List Response",
            "items": {
              "$ref": "#/components/schemas/ConversationMessage_Events"
            }
          }
        }
      },
      "BillableClient_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *BillableClient*"
          },
          "unbilled_hours": {
            "type": "number",
            "format": "double",
            "description": "The unbilled hours of  the client"
          },
          "unbilled_amount": {
            "type": "number",
            "format": "double",
            "description": "The unbilled amount of the client"
          },
          "amount_in_trust": {
            "type": "number",
            "format": "double",
            "description": "The trust amount available for the client"
          },
          "name": {
            "type": "string",
            "description": "The name of the Client"
          },
          "billable_matters_count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of billable matters the client has"
          }
        }
      },
      "BillableClient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillableClient_base"
          },
          {
            "type": "object",
            "properties": {
              "billable_matters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillableMatter_base"
                },
                "description": "BillableMatter"
              }
            }
          }
        ]
      },
      "BillableClient_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "BillableClient Object Response",
                "$ref": "#/components/schemas/BillableClient"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BillableClientList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BillableClient List Response",
            "items": {
              "$ref": "#/components/schemas/BillableClient"
            }
          }
        }
      },
      "BillableClientListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BillableClient Event List Response",
            "items": {
              "$ref": "#/components/schemas/BillableClient_Events"
            }
          }
        }
      },
      "BillableMatter_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *BillableMatter*"
          },
          "unbilled_hours": {
            "type": "number",
            "format": "double",
            "description": "The unbilled number of hours for the matter"
          },
          "unbilled_amount": {
            "type": "number",
            "format": "double",
            "description": "The unbilled amount for the matter"
          },
          "amount_in_trust": {
            "type": "number",
            "format": "double",
            "description": "The trust amount available for the matter"
          },
          "display_number": {
            "type": "string",
            "description": "The reference to the matter"
          }
        }
      },
      "BillableMatter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillableMatter_base"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "BillableMatter_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "BillableMatter Object Response",
                "$ref": "#/components/schemas/BillableMatter"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      },
      "BillableMatterShow": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "description": "BillableMatter Object Response",
            "$ref": "#/components/schemas/BillableMatter"
          }
        }
      },
      "BillableMatterList": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BillableMatter List Response",
            "items": {
              "$ref": "#/components/schemas/BillableMatter"
            }
          }
        }
      },
      "BillableMatterListEvent": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BillableMatter Event List Response",
            "items": {
              "$ref": "#/components/schemas/BillableMatter_Events"
            }
          }
        }
      },
      "Attendee_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the *Attendee*"
          },
          "type": {
            "type": "string",
            "description": "The class name of the *Attendee*",
            "enum": [
              "Contact",
              "Calendar"
            ]
          },
          "name": {
            "type": "string",
            "description": "The name of the *Attendee*"
          },
          "enabled": {
            "type": "boolean",
            "description": "If the Attendee is a user, represents whether the user is enabled or disabled. Returns null if attendee is a Contact."
          },
          "email": {
            "type": "string",
            "description": "If the Attendee is a User, this is the User's email. If the Attendee is a contact, this is the Contact's primary email address."
          }
        }
      },
      "Attendee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Attendee_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "notification_methods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotificationMethod_base"
                },
                "description": "NotificationMethod"
              }
            }
          }
        ]
      },
      "Attendee_Events": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "record": {
                "description": "Attendee Object Response",
                "$ref": "#/components/schemas/Attendee"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDetail"
                }
              }
            }
          }
        ]
      }
    }
  }
}